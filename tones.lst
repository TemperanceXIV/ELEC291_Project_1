                  2   $LIST
0000              4   
0000              5   CLK           EQU 22118400 ; Microcontroller system crystal frequency in Hz
0000              6   TIMER0_RATE0  EQU ((2048*2)+100)
0000              7   TIMER0_RATE1  EQU ((2048*2)-100)
0000              8   TIMER0_RATE   EQU 4096     ; 2048Hz squarewave (peak amplitude of CEM-1203 speaker)
0000              9   TIMER0_RELOAD EQU ((65536-(CLK/TIMER0_RATE)))
0000             10   ; Timer rates are calculated away from the desired frequency. 8 times
0000             11   TIMER0_RATEA EQU 1760*2          ;A5 = 880 Hz
0000             12   TIMER0_RATEE EQU 2350*2          ;D5 = 587.33 Hz
0000             13   TIMER0_RATEEf EQU 2600*2         ; = 525 Hz
0000             14   TIMER0_RATED EQU 2100*2
0000             15   TIMER0_RATECS EQU 2000*2
0000             16   TIMER0_RATEB EQU 1780*2
0000             17   
0000             18   TIMER0_RELOAD0 EQU ((65536-(CLK/TIMER0_RATE0)))
0000             19   TIMER0_RELOAD1 EQU ((65536-(CLK/TIMER0_RATE1)))
0000             20   TIMER0_RELOADA EQU ((65536-(CLK/TIMER0_RATEA)))
0000             21   TIMER0_RELOADE EQU ((65536-(CLK/TIMER0_RATEE)))
0000             22   TIMER0_RELOADFS EQU ((65536-(CLK/TIMER0_RATEEf)))
0000             23   TIMER0_RELOADD EQU ((65536-(CLK/TIMER0_RATED)))
0000             24   TIMER0_RELOADCS EQU ((65536-(CLK/TIMER0_RATECS)))
0000             25   TIMER0_RELOADB EQU ((65536-(CLK/TIMER0_RATEB)))
0000             26   
0000             27   ; notes are calibrated to be input directly into the Play_Note macro?
0000             28   ; Using an interval system with math.
0000             29   key_C5   equ 523                 ; C5 = 523.23 Hz
0000             30   key_D5f equ 554          ; D5f = 554.37 Hz
0000             31   key_D5 equ 587           ; D5 = 587.33 Hz
0000             32   key_E5f equ 622          ; E5f = 622.25 Hz
0000             33   key_E5 equ 659           ; E5 = 659.25 Hz
0000             34   key_F5 equ 698           ; F5 = 698.46
0000             35   key_G5f  equ 740                 ; G5f = 739.99 Hz
0000             36   key_G5   equ 784                 ; G5 = 783.99 Hz
0000             37   key_A5f equ 831          ; A5f = 830.61 Hz
0000             38   key_A5   equ 880                 ; A5 = 880 Hz, CLK/(440*8) = 62817.727272...
0000             39   key_B5f equ 932          ; B5f = 932.33333?
0000             40   key_B5 equ 988           ; B5 = 987.77 Hz
0000             41   key_C6 equ 1047          ; C6 =  1046 Hz
0000             42   key_C7 equ 2093          ; C7 =          2093 Hz
0000             43   key_C8 equ 4186          ; C8 = 4186.01 Hz
0000             44   
0000             45   ; Unison: 1:1
0000             46   tone_P1a         equ 1
0000             47   tone_P1b         equ 1
0000             48   ; Minor Second is 16:15
0000             49   tone_mi2a        equ 16
0000             50   tone_mi2b        equ     15
0000             51   ; Major Second: 9:8
0000             52   tone_Ma2a        equ 9
0000             53   tone_Ma2b        equ     8
0000             54   ; Minor Third: 6:5
0000             55   tone_mi3a        equ 6
0000             56   tone_mi3b        equ 5
0000             57   ; Major Third: 5:4
0000             58   tone_Ma3a        equ 5
0000             59   tone_Ma3b        equ 4
0000             60   ; Perfect Fourth: 4:3
0000             61   tone_P4a         equ 4
0000             62   tone_P4b         equ 3
0000             63   ; Tritone: 7:5
0000             64   tone_tta         equ 7
0000             65   tone_ttb         equ 5
0000             66   ; Perfect Fifth: 3:2
0000             67   tone_P5a         equ 3
0000             68   tone_P5b         equ 2
0000             69   ; Minor Sixth: 8:5
0000             70   tone_mi6a        equ 8
0000             71   tone_mi6b        equ 5
0000             72   ; Major Sixth: 5:3
0000             73   tone_Ma6a        equ 5
0000             74   tone_Ma6b        equ 3
0000             75   ; Minor Seventh: 9:5
0000             76   tone_mi7a        equ 9
0000             77   tone_mi7b        equ 5
0000             78   ; Major Seventh: 15:8
0000             79   tone_Ma7a        equ 15
0000             80   tone_Ma7b        equ 8
0000             81   ; Octave: 2:1
0000             82   tone_P8a         equ 2
0000             83   tone_P8b         equ 1
0000             84   
0000             85   SOUND_OUT EQU P1.1
0000             86   
0000             87   org 0x0000
0000 0203A8      88      ljmp Startup
0003             89   
0003             90   ; Timer/Counter 0 overflow interrupt vector
000B             91   org 0x000B
000B 02038B      92            ljmp Timer0_ISR
000E             93            
                570   $LIST
                 95   $LIST
02A4             97   
0030             98   dseg at 30H
0030             99   x:       ds 4
0034            100   y:       ds 4
0038            101   bcd:ds 5
003D            102   
0000            103   bseg
0000            104   mf: dbit 1
0001            105   
0001            106   ;Flag for whether to go up or down the interval.
0001            107   ;stepUpDown: dbit 1
0001            108   
02A4            109   cseg
02A4            110   ; These 'equ' must match the hardware wiring
02A4            111   LCD_RS equ P3.2
02A4            112   ;LCD_RW equ PX.X ; Not used in this code, connect the pin to GND
02A4            113   LCD_E  equ P3.3
02A4            114   LCD_D4 equ P3.4
02A4            115   LCD_D5 equ P3.5
02A4            116   LCD_D6 equ P3.6
02A4            117   LCD_D7 equ P3.7
02A4            118   
                120   	$LIST
0350            122   ;                                                1234567890123456 
0350 48656C6C   123   Initial_Message1:        db 'Hello_World     ',0
     6F5F576F
     726C6420
     20202020
     00
0361 20202020   124   Blank_Message:           db '                ',0
     20202020
     20202020
     20202020
     00
0372            125   ;---------------------------------;
0372            126   ; Routine to initialize the ISR   ;
0372            127   ; for timer 0                     ;
0372            128   ;---------------------------------;
0372            129   InitTimer0:
0372 E589       130            mov a, TMOD
0374 54F0       131            anl a, #0xf0 ; 11110000 Clear the bits for timer 0
0376 4401       132            orl a, #0x01 ; 00000001 Configure timer 0 as 16-timer
0378 F589       133            mov TMOD, a
037A 758CEA     134            mov TH0, #high(TIMER0_RELOAD)
037D 758AE8     135            mov TL0, #low(TIMER0_RELOAD)
0380            136            ; Set autoreload value
0380 75F4EA     137            mov RH0, #high(TIMER0_RELOAD)
0383 75F2E8     138            mov RL0, #low(TIMER0_RELOAD)
0386            139            ; Enable the timer and interrupts
0386 D2A9       140       setb ET0  ; Enable timer 0 interrupt
0388 D28C       141       setb TR0  ; Start timer 0
038A 22         142            ret
038B            143   
038B            144   ;---------------------------------;
038B            145   ; ISR for timer 0.  Set to execute;
038B            146   ; every 1/4096Hz to generate a    ;
038B            147   ; 2048 Hz square wave at pin P1.1 ;
038B            148   ;---------------------------------;
038B            149   Timer0_ISR:
038B B291       150            cpl SOUND_OUT ; Connect speaker to P1.1!
038D 32         151            reti
038E            152   
038E            153   ; When using a 22.1184MHz crystal in fast mode
038E            154   ; one cycle takes 1.0/22.1184MHz = 45.21123 ns
038E            155   
038E            156   
038E            157      
038E            158   ;---------------------------------;
038E            159   ; Hardware and variable           ;
038E            160   ; initialization                  ;
038E            161   ;---------------------------------;
038E            162   
038E            163   ; BCD Display Macro
                164   debug_BCD mac
                165   lcall hex2bcd2
                166   Set_Cursor(1,1)
                167   Display_BCD(bcd+4)
                168   Display_BCD(bcd+3)
                169   Display_BCD(bcd+2)
                170   Display_BCD(bcd+1)
                171   Display_BCD(bcd+0)
                172   
                173   endmac
038E            174       ; Note Macro 
038E            175       ; Play_Note([key], [first ratio], [second ratio], [note duration])
038E            176       ; Uses Resonant mechanics as opposed to equal-tempered mechanics
038E            177       ; First Parameter, determine what is the fundamental frequency
038E            178       ; Second Parameter, set the upper ratio for the note
038E            179       ; Third Parameter, set the lower ratio for the note
038E            180       ; Fourth Parameter, set the duration of the note
038E            181       ; 1 = 16th note
038E            182       ; 2 = 8th note
038E            183       ; 4 = quarter note
038E            184       ; 8 = half note
038E            185       ; 16 = whole note
038E            186       ; *You can compose notes of different values too*
038E            187       ; Plays a note for a certain duration
038E            188   ; select note base frequency as defined by fundamental frequency
038E            189   ; select duration of note (in 50 miliseconds increments as it is going off a pure delay
038E            190   ; The basic time increment is 0.05 seconds
                191   Play_Note mac
                192   	; Compute the reload value given the base frequency and interval ratio codes
                193   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
                194   ;Calc_Interval:
                195   ; Freq0 loaded (fundamental frequency)
                196   push AR2
                197   Load_x(%0) 
                198   ; Load upper ratio
                199   Load_y(%1)
                200   	lcall mul32
                201   	
                202   ; Load lower ratio
                203   Load_y(%2)
                204   	lcall div32
                205   ; compute value for reload
                206   ; reload rate = CLK/freq
                207   	Load_y(CLK)
                208   	lcall xchg_xy
                209   	
                210   	lcall div32
                211   	
                212   ; reload value = 65536-x
                213   	Load_y(65536)
                214   	lcall xchg_xy
                215   	lcall sub32
                216   ; x now contains the reload value
                217   ;debug_BCD
                218   	mov RL0, x+0
                219   	mov RH0, x+1
                220   	
                221   	setb TR0
                222   	; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
                223   	mov R2, %3
                224   	lcall Play_Note_Delay
                225   	clr TR0
                226   	Wait_Milli_Seconds(#10)
                227   	pop AR2
                228   endmac
038E            229   
038E            230   ; Rest Macro Note_Rest([duration])
038E            231   ; Given in terms of 16th rests
                232   Note_Rest mac
                233   push AR2
                234   mov R2, %0
                235   lcall Play_Note_Delay
                236   pop AR2
                237   endmac
038E            238   
038E            239   
038E            240   ; Based on TEMPO of music?
038E            241   ; Set based on the smallest time interval note.
038E            242   ; Moderato is about (108)-120 bpm
038E            243   ; a 16th note is worth 1/4 of a beat
038E            244   ; at modrato, a 16th note is held for 138.8888 ms
038E            245   
038E            246   ; Allegro is 125 ms at 120 bpm
038E            247   Play_Note_Delay:
038E C002       248            push AR2
0390 7A46       248            mov R2, #70
0392 1202AF     248            lcall ?Wait_Milli_Seconds
0395 D002       248            pop AR2
0397 DAF5       249   djnz R2, Play_Note_Delay
0399 22         250   ret
039A            251   
039A            252   Note_Stop:
039A C28C       253            clr TR0
039C C002       254            push AR2
039E 7A32       254            mov R2, #50
03A0 1202AF     254            lcall ?Wait_Milli_Seconds
03A3 D002       254            pop AR2
03A5 D28C       255            setb TR0
03A7 22         256   ret
03A8            257   
03A8            258   ;---------------------------------;
03A8            259   ; Main program loop               ;
03A8            260   ;---------------------------------;  
03A8            261   Startup:
03A8            262       ; Initialize the hardware:
03A8 75817F     263       mov SP, #7FH
03AB 120372     264       lcall InitTimer0
03AE D2AF       265       setb EA
03B0 C0E0       266            push acc
03B2 7401       266            mov a, #1
03B4 14         266            dec a
03B5 120333     266            lcall ?Set_Cursor_2 ; Select column and row
03B8 D0E0       266            pop acc
03BA C083       267            push dph
03BC C082       267            push dpl
03BE C0E0       267            push acc
03C0 900350     267            mov dptr, #initial_message1
03C3 120328     267            lcall ?Send_Constant_String
03C6 D0E0       267            pop acc
03C8 D082       267            pop dpl
03CA D083       267            pop dph
03CC C0E0       268            push acc
03CE 7401       268            mov a, #1
03D0 14         268            dec a
03D1 120335     268            lcall ?Set_Cursor_1 ; Select column and row
03D4 D0E0       268            pop acc
03D6 C083       269            push dph
03D8 C082       269            push dpl
03DA C0E0       269            push acc
03DC 900361     269            mov dptr, #blank_message
03DF 120328     269            lcall ?Send_Constant_String
03E2 D0E0       269            pop acc
03E4 D082       269            pop dpl
03E6 D083       269            pop dph
03E8            270            
03E8            271   forever:
03E8            272            ;lcall Note_Stop
03E8            273   ; The Entertainer
03E8            274   ; By Scott Joplin
03E8            275   
03E8            276   ; Introduction
03E8            277            ; Compute the reload value given the base frequency and interval ratio codes
03E8            277   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
03E8            277   ;Calc_Interval:
03E8            277   ; Freq0 loaded (fundamental frequency)
03E8 C002       277   push AR2
03EA 75302D     277            mov x+0, #low (key_C7 % 0x10000) 
03ED 753108     277            mov x+1, #high(key_C7 % 0x10000) 
03F0 753200     277            mov x+2, #low (key_C7 / 0x10000) 
03F3 753300     277            mov x+3, #high(key_C7 / 0x10000)  
03F6            277   ; Load upper ratio
03F6 753409     277            mov y+0, #low (tone_ma2a % 0x10000) 
03F9 753500     277            mov y+1, #high(tone_ma2a % 0x10000) 
03FC 753600     277            mov y+2, #low (tone_ma2a / 0x10000) 
03FF 753700     277            mov y+3, #high(tone_ma2a / 0x10000) 
0402 120188     277            lcall mul32
0405            277            
0405            277   ; Load lower ratio
0405 753408     277            mov y+0, #low (tone_ma2b % 0x10000) 
0408 753500     277            mov y+1, #high(tone_ma2b % 0x10000) 
040B 753600     277            mov y+2, #low (tone_ma2b / 0x10000) 
040E 753700     277            mov y+3, #high(tone_ma2b / 0x10000) 
0411 120215     277            lcall div32
0414            277   ; compute value for reload
0414            277   ; reload rate = CLK/freq
0414 753400     277            mov y+0, #low (CLK % 0x10000) 
0417 753580     277            mov y+1, #high(CLK % 0x10000) 
041A 753651     277            mov y+2, #low (CLK / 0x10000) 
041D 753701     277            mov y+3, #high(CLK / 0x10000) 
0420 12028B     277            lcall xchg_xy
0423            277            
0423 120215     277            lcall div32
0426            277            
0426            277   ; reload value = 65536-x
0426 753400     277            mov y+0, #low (65536 % 0x10000) 
0429 753500     277            mov y+1, #high(65536 % 0x10000) 
042C 753601     277            mov y+2, #low (65536 / 0x10000) 
042F 753700     277            mov y+3, #high(65536 / 0x10000) 
0432 12028B     277            lcall xchg_xy
0435 1200F4     277            lcall sub32
0438            277   ; x now contains the reload value
0438            277   ;debug_BCD
0438 8530F2     277            mov RL0, x+0
043B 8531F4     277            mov RH0, x+1
043E            277            
043E D28C       277            setb TR0
0440            277            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
0440 7A02       277            mov R2, #2
0442 12038E     277            lcall Play_Note_Delay
0445 C28C       277            clr TR0
0447 C002       277            push AR2
0449 7A0A       277            mov R2, #10
044B 1202AF     277            lcall ?Wait_Milli_Seconds
044E D002       277            pop AR2
0450 D002       277            pop AR2
0452            278            ; Compute the reload value given the base frequency and interval ratio codes
0452            278   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
0452            278   ;Calc_Interval:
0452            278   ; Freq0 loaded (fundamental frequency)
0452 C002       278   push AR2
0454 75302D     278            mov x+0, #low (key_C7 % 0x10000) 
0457 753108     278            mov x+1, #high(key_C7 % 0x10000) 
045A 753200     278            mov x+2, #low (key_C7 / 0x10000) 
045D 753300     278            mov x+3, #high(key_C7 / 0x10000)  
0460            278   ; Load upper ratio
0460 753405     278            mov y+0, #low (tone_ma3a % 0x10000) 
0463 753500     278            mov y+1, #high(tone_ma3a % 0x10000) 
0466 753600     278            mov y+2, #low (tone_ma3a / 0x10000) 
0469 753700     278            mov y+3, #high(tone_ma3a / 0x10000) 
046C 120188     278            lcall mul32
046F            278            
046F            278   ; Load lower ratio
046F 753404     278            mov y+0, #low (tone_ma3b % 0x10000) 
0472 753500     278            mov y+1, #high(tone_ma3b % 0x10000) 
0475 753600     278            mov y+2, #low (tone_ma3b / 0x10000) 
0478 753700     278            mov y+3, #high(tone_ma3b / 0x10000) 
047B 120215     278            lcall div32
047E            278   ; compute value for reload
047E            278   ; reload rate = CLK/freq
047E 753400     278            mov y+0, #low (CLK % 0x10000) 
0481 753580     278            mov y+1, #high(CLK % 0x10000) 
0484 753651     278            mov y+2, #low (CLK / 0x10000) 
0487 753701     278            mov y+3, #high(CLK / 0x10000) 
048A 12028B     278            lcall xchg_xy
048D            278            
048D 120215     278            lcall div32
0490            278            
0490            278   ; reload value = 65536-x
0490 753400     278            mov y+0, #low (65536 % 0x10000) 
0493 753500     278            mov y+1, #high(65536 % 0x10000) 
0496 753601     278            mov y+2, #low (65536 / 0x10000) 
0499 753700     278            mov y+3, #high(65536 / 0x10000) 
049C 12028B     278            lcall xchg_xy
049F 1200F4     278            lcall sub32
04A2            278   ; x now contains the reload value
04A2            278   ;debug_BCD
04A2 8530F2     278            mov RL0, x+0
04A5 8531F4     278            mov RH0, x+1
04A8            278            
04A8 D28C       278            setb TR0
04AA            278            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
04AA 7A02       278            mov R2, #2
04AC 12038E     278            lcall Play_Note_Delay
04AF C28C       278            clr TR0
04B1 C002       278            push AR2
04B3 7A0A       278            mov R2, #10
04B5 1202AF     278            lcall ?Wait_Milli_Seconds
04B8 D002       278            pop AR2
04BA D002       278            pop AR2
04BC            279            ; Compute the reload value given the base frequency and interval ratio codes
04BC            279   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
04BC            279   ;Calc_Interval:
04BC            279   ; Freq0 loaded (fundamental frequency)
04BC C002       279   push AR2
04BE 75302D     279            mov x+0, #low (key_C7 % 0x10000) 
04C1 753108     279            mov x+1, #high(key_C7 % 0x10000) 
04C4 753200     279            mov x+2, #low (key_C7 / 0x10000) 
04C7 753300     279            mov x+3, #high(key_C7 / 0x10000)  
04CA            279   ; Load upper ratio
04CA 753401     279            mov y+0, #low (tone_p1a % 0x10000) 
04CD 753500     279            mov y+1, #high(tone_p1a % 0x10000) 
04D0 753600     279            mov y+2, #low (tone_p1a / 0x10000) 
04D3 753700     279            mov y+3, #high(tone_p1a / 0x10000) 
04D6 120188     279            lcall mul32
04D9            279            
04D9            279   ; Load lower ratio
04D9 753401     279            mov y+0, #low (tone_p1b % 0x10000) 
04DC 753500     279            mov y+1, #high(tone_p1b % 0x10000) 
04DF 753600     279            mov y+2, #low (tone_p1b / 0x10000) 
04E2 753700     279            mov y+3, #high(tone_p1b / 0x10000) 
04E5 120215     279            lcall div32
04E8            279   ; compute value for reload
04E8            279   ; reload rate = CLK/freq
04E8 753400     279            mov y+0, #low (CLK % 0x10000) 
04EB 753580     279            mov y+1, #high(CLK % 0x10000) 
04EE 753651     279            mov y+2, #low (CLK / 0x10000) 
04F1 753701     279            mov y+3, #high(CLK / 0x10000) 
04F4 12028B     279            lcall xchg_xy
04F7            279            
04F7 120215     279            lcall div32
04FA            279            
04FA            279   ; reload value = 65536-x
04FA 753400     279            mov y+0, #low (65536 % 0x10000) 
04FD 753500     279            mov y+1, #high(65536 % 0x10000) 
0500 753601     279            mov y+2, #low (65536 / 0x10000) 
0503 753700     279            mov y+3, #high(65536 / 0x10000) 
0506 12028B     279            lcall xchg_xy
0509 1200F4     279            lcall sub32
050C            279   ; x now contains the reload value
050C            279   ;debug_BCD
050C 8530F2     279            mov RL0, x+0
050F 8531F4     279            mov RH0, x+1
0512            279            
0512 D28C       279            setb TR0
0514            279            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
0514 7A02       279            mov R2, #2
0516 12038E     279            lcall Play_Note_Delay
0519 C28C       279            clr TR0
051B C002       279            push AR2
051D 7A0A       279            mov R2, #10
051F 1202AF     279            lcall ?Wait_Milli_Seconds
0522 D002       279            pop AR2
0524 D002       279            pop AR2
0526            280            ; Compute the reload value given the base frequency and interval ratio codes
0526            280   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
0526            280   ;Calc_Interval:
0526            280   ; Freq0 loaded (fundamental frequency)
0526 C002       280   push AR2
0528 75302D     280            mov x+0, #low (key_C7 % 0x10000) 
052B 753108     280            mov x+1, #high(key_C7 % 0x10000) 
052E 753200     280            mov x+2, #low (key_C7 / 0x10000) 
0531 753300     280            mov x+3, #high(key_C7 / 0x10000)  
0534            280   ; Load upper ratio
0534 753405     280            mov y+0, #low (tone_mi3b % 0x10000) 
0537 753500     280            mov y+1, #high(tone_mi3b % 0x10000) 
053A 753600     280            mov y+2, #low (tone_mi3b / 0x10000) 
053D 753700     280            mov y+3, #high(tone_mi3b / 0x10000) 
0540 120188     280            lcall mul32
0543            280            
0543            280   ; Load lower ratio
0543 753406     280            mov y+0, #low (tone_mi3a % 0x10000) 
0546 753500     280            mov y+1, #high(tone_mi3a % 0x10000) 
0549 753600     280            mov y+2, #low (tone_mi3a / 0x10000) 
054C 753700     280            mov y+3, #high(tone_mi3a / 0x10000) 
054F 120215     280            lcall div32
0552            280   ; compute value for reload
0552            280   ; reload rate = CLK/freq
0552 753400     280            mov y+0, #low (CLK % 0x10000) 
0555 753580     280            mov y+1, #high(CLK % 0x10000) 
0558 753651     280            mov y+2, #low (CLK / 0x10000) 
055B 753701     280            mov y+3, #high(CLK / 0x10000) 
055E 12028B     280            lcall xchg_xy
0561            280            
0561 120215     280            lcall div32
0564            280            
0564            280   ; reload value = 65536-x
0564 753400     280            mov y+0, #low (65536 % 0x10000) 
0567 753500     280            mov y+1, #high(65536 % 0x10000) 
056A 753601     280            mov y+2, #low (65536 / 0x10000) 
056D 753700     280            mov y+3, #high(65536 / 0x10000) 
0570 12028B     280            lcall xchg_xy
0573 1200F4     280            lcall sub32
0576            280   ; x now contains the reload value
0576            280   ;debug_BCD
0576 8530F2     280            mov RL0, x+0
0579 8531F4     280            mov RH0, x+1
057C            280            
057C D28C       280            setb TR0
057E            280            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
057E 7A04       280            mov R2, #4
0580 12038E     280            lcall Play_Note_Delay
0583 C28C       280            clr TR0
0585 C002       280            push AR2
0587 7A0A       280            mov R2, #10
0589 1202AF     280            lcall ?Wait_Milli_Seconds
058C D002       280            pop AR2
058E D002       280            pop AR2
0590            281            ; Compute the reload value given the base frequency and interval ratio codes
0590            281   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
0590            281   ;Calc_Interval:
0590            281   ; Freq0 loaded (fundamental frequency)
0590 C002       281   push AR2
0592 75302D     281            mov x+0, #low (key_C7 % 0x10000) 
0595 753108     281            mov x+1, #high(key_C7 % 0x10000) 
0598 753200     281            mov x+2, #low (key_C7 / 0x10000) 
059B 753300     281            mov x+3, #high(key_C7 / 0x10000)  
059E            281   ; Load upper ratio
059E 75340F     281            mov y+0, #low (tone_mi2b % 0x10000) 
05A1 753500     281            mov y+1, #high(tone_mi2b % 0x10000) 
05A4 753600     281            mov y+2, #low (tone_mi2b / 0x10000) 
05A7 753700     281            mov y+3, #high(tone_mi2b / 0x10000) 
05AA 120188     281            lcall mul32
05AD            281            
05AD            281   ; Load lower ratio
05AD 753410     281            mov y+0, #low (tone_mi2a % 0x10000) 
05B0 753500     281            mov y+1, #high(tone_mi2a % 0x10000) 
05B3 753600     281            mov y+2, #low (tone_mi2a / 0x10000) 
05B6 753700     281            mov y+3, #high(tone_mi2a / 0x10000) 
05B9 120215     281            lcall div32
05BC            281   ; compute value for reload
05BC            281   ; reload rate = CLK/freq
05BC 753400     281            mov y+0, #low (CLK % 0x10000) 
05BF 753580     281            mov y+1, #high(CLK % 0x10000) 
05C2 753651     281            mov y+2, #low (CLK / 0x10000) 
05C5 753701     281            mov y+3, #high(CLK / 0x10000) 
05C8 12028B     281            lcall xchg_xy
05CB            281            
05CB 120215     281            lcall div32
05CE            281            
05CE            281   ; reload value = 65536-x
05CE 753400     281            mov y+0, #low (65536 % 0x10000) 
05D1 753500     281            mov y+1, #high(65536 % 0x10000) 
05D4 753601     281            mov y+2, #low (65536 / 0x10000) 
05D7 753700     281            mov y+3, #high(65536 / 0x10000) 
05DA 12028B     281            lcall xchg_xy
05DD 1200F4     281            lcall sub32
05E0            281   ; x now contains the reload value
05E0            281   ;debug_BCD
05E0 8530F2     281            mov RL0, x+0
05E3 8531F4     281            mov RH0, x+1
05E6            281            
05E6 D28C       281            setb TR0
05E8            281            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
05E8 7A02       281            mov R2, #2
05EA 12038E     281            lcall Play_Note_Delay
05ED C28C       281            clr TR0
05EF C002       281            push AR2
05F1 7A0A       281            mov R2, #10
05F3 1202AF     281            lcall ?Wait_Milli_Seconds
05F6 D002       281            pop AR2
05F8 D002       281            pop AR2
05FA            282            ; Compute the reload value given the base frequency and interval ratio codes
05FA            282   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
05FA            282   ;Calc_Interval:
05FA            282   ; Freq0 loaded (fundamental frequency)
05FA C002       282   push AR2
05FC 75302D     282            mov x+0, #low (key_C7 % 0x10000) 
05FF 753108     282            mov x+1, #high(key_C7 % 0x10000) 
0602 753200     282            mov x+2, #low (key_C7 / 0x10000) 
0605 753300     282            mov x+3, #high(key_C7 / 0x10000)  
0608            282   ; Load upper ratio
0608 753403     282            mov y+0, #low (tone_p4b % 0x10000) 
060B 753500     282            mov y+1, #high(tone_p4b % 0x10000) 
060E 753600     282            mov y+2, #low (tone_p4b / 0x10000) 
0611 753700     282            mov y+3, #high(tone_p4b / 0x10000) 
0614 120188     282            lcall mul32
0617            282            
0617            282   ; Load lower ratio
0617 753404     282            mov y+0, #low (tone_p4a % 0x10000) 
061A 753500     282            mov y+1, #high(tone_p4a % 0x10000) 
061D 753600     282            mov y+2, #low (tone_p4a / 0x10000) 
0620 753700     282            mov y+3, #high(tone_p4a / 0x10000) 
0623 120215     282            lcall div32
0626            282   ; compute value for reload
0626            282   ; reload rate = CLK/freq
0626 753400     282            mov y+0, #low (CLK % 0x10000) 
0629 753580     282            mov y+1, #high(CLK % 0x10000) 
062C 753651     282            mov y+2, #low (CLK / 0x10000) 
062F 753701     282            mov y+3, #high(CLK / 0x10000) 
0632 12028B     282            lcall xchg_xy
0635            282            
0635 120215     282            lcall div32
0638            282            
0638            282   ; reload value = 65536-x
0638 753400     282            mov y+0, #low (65536 % 0x10000) 
063B 753500     282            mov y+1, #high(65536 % 0x10000) 
063E 753601     282            mov y+2, #low (65536 / 0x10000) 
0641 753700     282            mov y+3, #high(65536 / 0x10000) 
0644 12028B     282            lcall xchg_xy
0647 1200F4     282            lcall sub32
064A            282   ; x now contains the reload value
064A            282   ;debug_BCD
064A 8530F2     282            mov RL0, x+0
064D 8531F4     282            mov RH0, x+1
0650            282            
0650 D28C       282            setb TR0
0652            282            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
0652 7A04       282            mov R2, #4
0654 12038E     282            lcall Play_Note_Delay
0657 C28C       282            clr TR0
0659 C002       282            push AR2
065B 7A0A       282            mov R2, #10
065D 1202AF     282            lcall ?Wait_Milli_Seconds
0660 D002       282            pop AR2
0662 D002       282            pop AR2
0664            283   
0664            284            ; Compute the reload value given the base frequency and interval ratio codes
0664            284   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
0664            284   ;Calc_Interval:
0664            284   ; Freq0 loaded (fundamental frequency)
0664 C002       284   push AR2
0666 753017     284            mov x+0, #low (key_C6 % 0x10000) 
0669 753104     284            mov x+1, #high(key_C6 % 0x10000) 
066C 753200     284            mov x+2, #low (key_C6 / 0x10000) 
066F 753300     284            mov x+3, #high(key_C6 / 0x10000)  
0672            284   ; Load upper ratio
0672 753409     284            mov y+0, #low (tone_ma2a % 0x10000) 
0675 753500     284            mov y+1, #high(tone_ma2a % 0x10000) 
0678 753600     284            mov y+2, #low (tone_ma2a / 0x10000) 
067B 753700     284            mov y+3, #high(tone_ma2a / 0x10000) 
067E 120188     284            lcall mul32
0681            284            
0681            284   ; Load lower ratio
0681 753408     284            mov y+0, #low (tone_ma2b % 0x10000) 
0684 753500     284            mov y+1, #high(tone_ma2b % 0x10000) 
0687 753600     284            mov y+2, #low (tone_ma2b / 0x10000) 
068A 753700     284            mov y+3, #high(tone_ma2b / 0x10000) 
068D 120215     284            lcall div32
0690            284   ; compute value for reload
0690            284   ; reload rate = CLK/freq
0690 753400     284            mov y+0, #low (CLK % 0x10000) 
0693 753580     284            mov y+1, #high(CLK % 0x10000) 
0696 753651     284            mov y+2, #low (CLK / 0x10000) 
0699 753701     284            mov y+3, #high(CLK / 0x10000) 
069C 12028B     284            lcall xchg_xy
069F            284            
069F 120215     284            lcall div32
06A2            284            
06A2            284   ; reload value = 65536-x
06A2 753400     284            mov y+0, #low (65536 % 0x10000) 
06A5 753500     284            mov y+1, #high(65536 % 0x10000) 
06A8 753601     284            mov y+2, #low (65536 / 0x10000) 
06AB 753700     284            mov y+3, #high(65536 / 0x10000) 
06AE 12028B     284            lcall xchg_xy
06B1 1200F4     284            lcall sub32
06B4            284   ; x now contains the reload value
06B4            284   ;debug_BCD
06B4 8530F2     284            mov RL0, x+0
06B7 8531F4     284            mov RH0, x+1
06BA            284            
06BA D28C       284            setb TR0
06BC            284            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
06BC 7A02       284            mov R2, #2
06BE 12038E     284            lcall Play_Note_Delay
06C1 C28C       284            clr TR0
06C3 C002       284            push AR2
06C5 7A0A       284            mov R2, #10
06C7 1202AF     284            lcall ?Wait_Milli_Seconds
06CA D002       284            pop AR2
06CC D002       284            pop AR2
06CE            285            ; Compute the reload value given the base frequency and interval ratio codes
06CE            285   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
06CE            285   ;Calc_Interval:
06CE            285   ; Freq0 loaded (fundamental frequency)
06CE C002       285   push AR2
06D0 753017     285            mov x+0, #low (key_C6 % 0x10000) 
06D3 753104     285            mov x+1, #high(key_C6 % 0x10000) 
06D6 753200     285            mov x+2, #low (key_C6 / 0x10000) 
06D9 753300     285            mov x+3, #high(key_C6 / 0x10000)  
06DC            285   ; Load upper ratio
06DC 753405     285            mov y+0, #low (tone_ma3a % 0x10000) 
06DF 753500     285            mov y+1, #high(tone_ma3a % 0x10000) 
06E2 753600     285            mov y+2, #low (tone_ma3a / 0x10000) 
06E5 753700     285            mov y+3, #high(tone_ma3a / 0x10000) 
06E8 120188     285            lcall mul32
06EB            285            
06EB            285   ; Load lower ratio
06EB 753404     285            mov y+0, #low (tone_ma3b % 0x10000) 
06EE 753500     285            mov y+1, #high(tone_ma3b % 0x10000) 
06F1 753600     285            mov y+2, #low (tone_ma3b / 0x10000) 
06F4 753700     285            mov y+3, #high(tone_ma3b / 0x10000) 
06F7 120215     285            lcall div32
06FA            285   ; compute value for reload
06FA            285   ; reload rate = CLK/freq
06FA 753400     285            mov y+0, #low (CLK % 0x10000) 
06FD 753580     285            mov y+1, #high(CLK % 0x10000) 
0700 753651     285            mov y+2, #low (CLK / 0x10000) 
0703 753701     285            mov y+3, #high(CLK / 0x10000) 
0706 12028B     285            lcall xchg_xy
0709            285            
0709 120215     285            lcall div32
070C            285            
070C            285   ; reload value = 65536-x
070C 753400     285            mov y+0, #low (65536 % 0x10000) 
070F 753500     285            mov y+1, #high(65536 % 0x10000) 
0712 753601     285            mov y+2, #low (65536 / 0x10000) 
0715 753700     285            mov y+3, #high(65536 / 0x10000) 
0718 12028B     285            lcall xchg_xy
071B 1200F4     285            lcall sub32
071E            285   ; x now contains the reload value
071E            285   ;debug_BCD
071E 8530F2     285            mov RL0, x+0
0721 8531F4     285            mov RH0, x+1
0724            285            
0724 D28C       285            setb TR0
0726            285            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
0726 7A02       285            mov R2, #2
0728 12038E     285            lcall Play_Note_Delay
072B C28C       285            clr TR0
072D C002       285            push AR2
072F 7A0A       285            mov R2, #10
0731 1202AF     285            lcall ?Wait_Milli_Seconds
0734 D002       285            pop AR2
0736 D002       285            pop AR2
0738            286            ; Compute the reload value given the base frequency and interval ratio codes
0738            286   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
0738            286   ;Calc_Interval:
0738            286   ; Freq0 loaded (fundamental frequency)
0738 C002       286   push AR2
073A 753017     286            mov x+0, #low (key_C6 % 0x10000) 
073D 753104     286            mov x+1, #high(key_C6 % 0x10000) 
0740 753200     286            mov x+2, #low (key_C6 / 0x10000) 
0743 753300     286            mov x+3, #high(key_C6 / 0x10000)  
0746            286   ; Load upper ratio
0746 753401     286            mov y+0, #low (tone_p1a % 0x10000) 
0749 753500     286            mov y+1, #high(tone_p1a % 0x10000) 
074C 753600     286            mov y+2, #low (tone_p1a / 0x10000) 
074F 753700     286            mov y+3, #high(tone_p1a / 0x10000) 
0752 120188     286            lcall mul32
0755            286            
0755            286   ; Load lower ratio
0755 753401     286            mov y+0, #low (tone_p1b % 0x10000) 
0758 753500     286            mov y+1, #high(tone_p1b % 0x10000) 
075B 753600     286            mov y+2, #low (tone_p1b / 0x10000) 
075E 753700     286            mov y+3, #high(tone_p1b / 0x10000) 
0761 120215     286            lcall div32
0764            286   ; compute value for reload
0764            286   ; reload rate = CLK/freq
0764 753400     286            mov y+0, #low (CLK % 0x10000) 
0767 753580     286            mov y+1, #high(CLK % 0x10000) 
076A 753651     286            mov y+2, #low (CLK / 0x10000) 
076D 753701     286            mov y+3, #high(CLK / 0x10000) 
0770 12028B     286            lcall xchg_xy
0773            286            
0773 120215     286            lcall div32
0776            286            
0776            286   ; reload value = 65536-x
0776 753400     286            mov y+0, #low (65536 % 0x10000) 
0779 753500     286            mov y+1, #high(65536 % 0x10000) 
077C 753601     286            mov y+2, #low (65536 / 0x10000) 
077F 753700     286            mov y+3, #high(65536 / 0x10000) 
0782 12028B     286            lcall xchg_xy
0785 1200F4     286            lcall sub32
0788            286   ; x now contains the reload value
0788            286   ;debug_BCD
0788 8530F2     286            mov RL0, x+0
078B 8531F4     286            mov RH0, x+1
078E            286            
078E D28C       286            setb TR0
0790            286            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
0790 7A02       286            mov R2, #2
0792 12038E     286            lcall Play_Note_Delay
0795 C28C       286            clr TR0
0797 C002       286            push AR2
0799 7A0A       286            mov R2, #10
079B 1202AF     286            lcall ?Wait_Milli_Seconds
079E D002       286            pop AR2
07A0 D002       286            pop AR2
07A2            287            ; Compute the reload value given the base frequency and interval ratio codes
07A2            287   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
07A2            287   ;Calc_Interval:
07A2            287   ; Freq0 loaded (fundamental frequency)
07A2 C002       287   push AR2
07A4 753017     287            mov x+0, #low (key_C6 % 0x10000) 
07A7 753104     287            mov x+1, #high(key_C6 % 0x10000) 
07AA 753200     287            mov x+2, #low (key_C6 / 0x10000) 
07AD 753300     287            mov x+3, #high(key_C6 / 0x10000)  
07B0            287   ; Load upper ratio
07B0 753405     287            mov y+0, #low (tone_mi3b % 0x10000) 
07B3 753500     287            mov y+1, #high(tone_mi3b % 0x10000) 
07B6 753600     287            mov y+2, #low (tone_mi3b / 0x10000) 
07B9 753700     287            mov y+3, #high(tone_mi3b / 0x10000) 
07BC 120188     287            lcall mul32
07BF            287            
07BF            287   ; Load lower ratio
07BF 753406     287            mov y+0, #low (tone_mi3a % 0x10000) 
07C2 753500     287            mov y+1, #high(tone_mi3a % 0x10000) 
07C5 753600     287            mov y+2, #low (tone_mi3a / 0x10000) 
07C8 753700     287            mov y+3, #high(tone_mi3a / 0x10000) 
07CB 120215     287            lcall div32
07CE            287   ; compute value for reload
07CE            287   ; reload rate = CLK/freq
07CE 753400     287            mov y+0, #low (CLK % 0x10000) 
07D1 753580     287            mov y+1, #high(CLK % 0x10000) 
07D4 753651     287            mov y+2, #low (CLK / 0x10000) 
07D7 753701     287            mov y+3, #high(CLK / 0x10000) 
07DA 12028B     287            lcall xchg_xy
07DD            287            
07DD 120215     287            lcall div32
07E0            287            
07E0            287   ; reload value = 65536-x
07E0 753400     287            mov y+0, #low (65536 % 0x10000) 
07E3 753500     287            mov y+1, #high(65536 % 0x10000) 
07E6 753601     287            mov y+2, #low (65536 / 0x10000) 
07E9 753700     287            mov y+3, #high(65536 / 0x10000) 
07EC 12028B     287            lcall xchg_xy
07EF 1200F4     287            lcall sub32
07F2            287   ; x now contains the reload value
07F2            287   ;debug_BCD
07F2 8530F2     287            mov RL0, x+0
07F5 8531F4     287            mov RH0, x+1
07F8            287            
07F8 D28C       287            setb TR0
07FA            287            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
07FA 7A04       287            mov R2, #4
07FC 12038E     287            lcall Play_Note_Delay
07FF C28C       287            clr TR0
0801 C002       287            push AR2
0803 7A0A       287            mov R2, #10
0805 1202AF     287            lcall ?Wait_Milli_Seconds
0808 D002       287            pop AR2
080A D002       287            pop AR2
080C            288            ; Compute the reload value given the base frequency and interval ratio codes
080C            288   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
080C            288   ;Calc_Interval:
080C            288   ; Freq0 loaded (fundamental frequency)
080C C002       288   push AR2
080E 753017     288            mov x+0, #low (key_C6 % 0x10000) 
0811 753104     288            mov x+1, #high(key_C6 % 0x10000) 
0814 753200     288            mov x+2, #low (key_C6 / 0x10000) 
0817 753300     288            mov x+3, #high(key_C6 / 0x10000)  
081A            288   ; Load upper ratio
081A 75340F     288            mov y+0, #low (tone_mi2b % 0x10000) 
081D 753500     288            mov y+1, #high(tone_mi2b % 0x10000) 
0820 753600     288            mov y+2, #low (tone_mi2b / 0x10000) 
0823 753700     288            mov y+3, #high(tone_mi2b / 0x10000) 
0826 120188     288            lcall mul32
0829            288            
0829            288   ; Load lower ratio
0829 753410     288            mov y+0, #low (tone_mi2a % 0x10000) 
082C 753500     288            mov y+1, #high(tone_mi2a % 0x10000) 
082F 753600     288            mov y+2, #low (tone_mi2a / 0x10000) 
0832 753700     288            mov y+3, #high(tone_mi2a / 0x10000) 
0835 120215     288            lcall div32
0838            288   ; compute value for reload
0838            288   ; reload rate = CLK/freq
0838 753400     288            mov y+0, #low (CLK % 0x10000) 
083B 753580     288            mov y+1, #high(CLK % 0x10000) 
083E 753651     288            mov y+2, #low (CLK / 0x10000) 
0841 753701     288            mov y+3, #high(CLK / 0x10000) 
0844 12028B     288            lcall xchg_xy
0847            288            
0847 120215     288            lcall div32
084A            288            
084A            288   ; reload value = 65536-x
084A 753400     288            mov y+0, #low (65536 % 0x10000) 
084D 753500     288            mov y+1, #high(65536 % 0x10000) 
0850 753601     288            mov y+2, #low (65536 / 0x10000) 
0853 753700     288            mov y+3, #high(65536 / 0x10000) 
0856 12028B     288            lcall xchg_xy
0859 1200F4     288            lcall sub32
085C            288   ; x now contains the reload value
085C            288   ;debug_BCD
085C 8530F2     288            mov RL0, x+0
085F 8531F4     288            mov RH0, x+1
0862            288            
0862 D28C       288            setb TR0
0864            288            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
0864 7A02       288            mov R2, #2
0866 12038E     288            lcall Play_Note_Delay
0869 C28C       288            clr TR0
086B C002       288            push AR2
086D 7A0A       288            mov R2, #10
086F 1202AF     288            lcall ?Wait_Milli_Seconds
0872 D002       288            pop AR2
0874 D002       288            pop AR2
0876            289            ; Compute the reload value given the base frequency and interval ratio codes
0876            289   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
0876            289   ;Calc_Interval:
0876            289   ; Freq0 loaded (fundamental frequency)
0876 C002       289   push AR2
0878 753017     289            mov x+0, #low (key_C6 % 0x10000) 
087B 753104     289            mov x+1, #high(key_C6 % 0x10000) 
087E 753200     289            mov x+2, #low (key_C6 / 0x10000) 
0881 753300     289            mov x+3, #high(key_C6 / 0x10000)  
0884            289   ; Load upper ratio
0884 753403     289            mov y+0, #low (tone_p4b % 0x10000) 
0887 753500     289            mov y+1, #high(tone_p4b % 0x10000) 
088A 753600     289            mov y+2, #low (tone_p4b / 0x10000) 
088D 753700     289            mov y+3, #high(tone_p4b / 0x10000) 
0890 120188     289            lcall mul32
0893            289            
0893            289   ; Load lower ratio
0893 753404     289            mov y+0, #low (tone_p4a % 0x10000) 
0896 753500     289            mov y+1, #high(tone_p4a % 0x10000) 
0899 753600     289            mov y+2, #low (tone_p4a / 0x10000) 
089C 753700     289            mov y+3, #high(tone_p4a / 0x10000) 
089F 120215     289            lcall div32
08A2            289   ; compute value for reload
08A2            289   ; reload rate = CLK/freq
08A2 753400     289            mov y+0, #low (CLK % 0x10000) 
08A5 753580     289            mov y+1, #high(CLK % 0x10000) 
08A8 753651     289            mov y+2, #low (CLK / 0x10000) 
08AB 753701     289            mov y+3, #high(CLK / 0x10000) 
08AE 12028B     289            lcall xchg_xy
08B1            289            
08B1 120215     289            lcall div32
08B4            289            
08B4            289   ; reload value = 65536-x
08B4 753400     289            mov y+0, #low (65536 % 0x10000) 
08B7 753500     289            mov y+1, #high(65536 % 0x10000) 
08BA 753601     289            mov y+2, #low (65536 / 0x10000) 
08BD 753700     289            mov y+3, #high(65536 / 0x10000) 
08C0 12028B     289            lcall xchg_xy
08C3 1200F4     289            lcall sub32
08C6            289   ; x now contains the reload value
08C6            289   ;debug_BCD
08C6 8530F2     289            mov RL0, x+0
08C9 8531F4     289            mov RH0, x+1
08CC            289            
08CC D28C       289            setb TR0
08CE            289            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
08CE 7A04       289            mov R2, #4
08D0 12038E     289            lcall Play_Note_Delay
08D3 C28C       289            clr TR0
08D5 C002       289            push AR2
08D7 7A0A       289            mov R2, #10
08D9 1202AF     289            lcall ?Wait_Milli_Seconds
08DC D002       289            pop AR2
08DE D002       289            pop AR2
08E0            290   
08E0            291            ; Compute the reload value given the base frequency and interval ratio codes
08E0            291   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
08E0            291   ;Calc_Interval:
08E0            291   ; Freq0 loaded (fundamental frequency)
08E0 C002       291   push AR2
08E2 75300B     291            mov x+0, #low (key_C5 % 0x10000) 
08E5 753102     291            mov x+1, #high(key_C5 % 0x10000) 
08E8 753200     291            mov x+2, #low (key_C5 / 0x10000) 
08EB 753300     291            mov x+3, #high(key_C5 / 0x10000)  
08EE            291   ; Load upper ratio
08EE 753409     291            mov y+0, #low (tone_ma2a % 0x10000) 
08F1 753500     291            mov y+1, #high(tone_ma2a % 0x10000) 
08F4 753600     291            mov y+2, #low (tone_ma2a / 0x10000) 
08F7 753700     291            mov y+3, #high(tone_ma2a / 0x10000) 
08FA 120188     291            lcall mul32
08FD            291            
08FD            291   ; Load lower ratio
08FD 753408     291            mov y+0, #low (tone_ma2b % 0x10000) 
0900 753500     291            mov y+1, #high(tone_ma2b % 0x10000) 
0903 753600     291            mov y+2, #low (tone_ma2b / 0x10000) 
0906 753700     291            mov y+3, #high(tone_ma2b / 0x10000) 
0909 120215     291            lcall div32
090C            291   ; compute value for reload
090C            291   ; reload rate = CLK/freq
090C 753400     291            mov y+0, #low (CLK % 0x10000) 
090F 753580     291            mov y+1, #high(CLK % 0x10000) 
0912 753651     291            mov y+2, #low (CLK / 0x10000) 
0915 753701     291            mov y+3, #high(CLK / 0x10000) 
0918 12028B     291            lcall xchg_xy
091B            291            
091B 120215     291            lcall div32
091E            291            
091E            291   ; reload value = 65536-x
091E 753400     291            mov y+0, #low (65536 % 0x10000) 
0921 753500     291            mov y+1, #high(65536 % 0x10000) 
0924 753601     291            mov y+2, #low (65536 / 0x10000) 
0927 753700     291            mov y+3, #high(65536 / 0x10000) 
092A 12028B     291            lcall xchg_xy
092D 1200F4     291            lcall sub32
0930            291   ; x now contains the reload value
0930            291   ;debug_BCD
0930 8530F2     291            mov RL0, x+0
0933 8531F4     291            mov RH0, x+1
0936            291            
0936 D28C       291            setb TR0
0938            291            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
0938 7A02       291            mov R2, #2
093A 12038E     291            lcall Play_Note_Delay
093D C28C       291            clr TR0
093F C002       291            push AR2
0941 7A0A       291            mov R2, #10
0943 1202AF     291            lcall ?Wait_Milli_Seconds
0946 D002       291            pop AR2
0948 D002       291            pop AR2
094A            292            ; Compute the reload value given the base frequency and interval ratio codes
094A            292   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
094A            292   ;Calc_Interval:
094A            292   ; Freq0 loaded (fundamental frequency)
094A C002       292   push AR2
094C 75300B     292            mov x+0, #low (key_C5 % 0x10000) 
094F 753102     292            mov x+1, #high(key_C5 % 0x10000) 
0952 753200     292            mov x+2, #low (key_C5 / 0x10000) 
0955 753300     292            mov x+3, #high(key_C5 / 0x10000)  
0958            292   ; Load upper ratio
0958 753405     292            mov y+0, #low (tone_ma3a % 0x10000) 
095B 753500     292            mov y+1, #high(tone_ma3a % 0x10000) 
095E 753600     292            mov y+2, #low (tone_ma3a / 0x10000) 
0961 753700     292            mov y+3, #high(tone_ma3a / 0x10000) 
0964 120188     292            lcall mul32
0967            292            
0967            292   ; Load lower ratio
0967 753404     292            mov y+0, #low (tone_ma3b % 0x10000) 
096A 753500     292            mov y+1, #high(tone_ma3b % 0x10000) 
096D 753600     292            mov y+2, #low (tone_ma3b / 0x10000) 
0970 753700     292            mov y+3, #high(tone_ma3b / 0x10000) 
0973 120215     292            lcall div32
0976            292   ; compute value for reload
0976            292   ; reload rate = CLK/freq
0976 753400     292            mov y+0, #low (CLK % 0x10000) 
0979 753580     292            mov y+1, #high(CLK % 0x10000) 
097C 753651     292            mov y+2, #low (CLK / 0x10000) 
097F 753701     292            mov y+3, #high(CLK / 0x10000) 
0982 12028B     292            lcall xchg_xy
0985            292            
0985 120215     292            lcall div32
0988            292            
0988            292   ; reload value = 65536-x
0988 753400     292            mov y+0, #low (65536 % 0x10000) 
098B 753500     292            mov y+1, #high(65536 % 0x10000) 
098E 753601     292            mov y+2, #low (65536 / 0x10000) 
0991 753700     292            mov y+3, #high(65536 / 0x10000) 
0994 12028B     292            lcall xchg_xy
0997 1200F4     292            lcall sub32
099A            292   ; x now contains the reload value
099A            292   ;debug_BCD
099A 8530F2     292            mov RL0, x+0
099D 8531F4     292            mov RH0, x+1
09A0            292            
09A0 D28C       292            setb TR0
09A2            292            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
09A2 7A02       292            mov R2, #2
09A4 12038E     292            lcall Play_Note_Delay
09A7 C28C       292            clr TR0
09A9 C002       292            push AR2
09AB 7A0A       292            mov R2, #10
09AD 1202AF     292            lcall ?Wait_Milli_Seconds
09B0 D002       292            pop AR2
09B2 D002       292            pop AR2
09B4            293            ; Compute the reload value given the base frequency and interval ratio codes
09B4            293   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
09B4            293   ;Calc_Interval:
09B4            293   ; Freq0 loaded (fundamental frequency)
09B4 C002       293   push AR2
09B6 75300B     293            mov x+0, #low (key_C5 % 0x10000) 
09B9 753102     293            mov x+1, #high(key_C5 % 0x10000) 
09BC 753200     293            mov x+2, #low (key_C5 / 0x10000) 
09BF 753300     293            mov x+3, #high(key_C5 / 0x10000)  
09C2            293   ; Load upper ratio
09C2 753401     293            mov y+0, #low (tone_p1a % 0x10000) 
09C5 753500     293            mov y+1, #high(tone_p1a % 0x10000) 
09C8 753600     293            mov y+2, #low (tone_p1a / 0x10000) 
09CB 753700     293            mov y+3, #high(tone_p1a / 0x10000) 
09CE 120188     293            lcall mul32
09D1            293            
09D1            293   ; Load lower ratio
09D1 753401     293            mov y+0, #low (tone_p1b % 0x10000) 
09D4 753500     293            mov y+1, #high(tone_p1b % 0x10000) 
09D7 753600     293            mov y+2, #low (tone_p1b / 0x10000) 
09DA 753700     293            mov y+3, #high(tone_p1b / 0x10000) 
09DD 120215     293            lcall div32
09E0            293   ; compute value for reload
09E0            293   ; reload rate = CLK/freq
09E0 753400     293            mov y+0, #low (CLK % 0x10000) 
09E3 753580     293            mov y+1, #high(CLK % 0x10000) 
09E6 753651     293            mov y+2, #low (CLK / 0x10000) 
09E9 753701     293            mov y+3, #high(CLK / 0x10000) 
09EC 12028B     293            lcall xchg_xy
09EF            293            
09EF 120215     293            lcall div32
09F2            293            
09F2            293   ; reload value = 65536-x
09F2 753400     293            mov y+0, #low (65536 % 0x10000) 
09F5 753500     293            mov y+1, #high(65536 % 0x10000) 
09F8 753601     293            mov y+2, #low (65536 / 0x10000) 
09FB 753700     293            mov y+3, #high(65536 / 0x10000) 
09FE 12028B     293            lcall xchg_xy
0A01 1200F4     293            lcall sub32
0A04            293   ; x now contains the reload value
0A04            293   ;debug_BCD
0A04 8530F2     293            mov RL0, x+0
0A07 8531F4     293            mov RH0, x+1
0A0A            293            
0A0A D28C       293            setb TR0
0A0C            293            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
0A0C 7A02       293            mov R2, #2
0A0E 12038E     293            lcall Play_Note_Delay
0A11 C28C       293            clr TR0
0A13 C002       293            push AR2
0A15 7A0A       293            mov R2, #10
0A17 1202AF     293            lcall ?Wait_Milli_Seconds
0A1A D002       293            pop AR2
0A1C D002       293            pop AR2
0A1E            294            ; Compute the reload value given the base frequency and interval ratio codes
0A1E            294   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
0A1E            294   ;Calc_Interval:
0A1E            294   ; Freq0 loaded (fundamental frequency)
0A1E C002       294   push AR2
0A20 75300B     294            mov x+0, #low (key_C5 % 0x10000) 
0A23 753102     294            mov x+1, #high(key_C5 % 0x10000) 
0A26 753200     294            mov x+2, #low (key_C5 / 0x10000) 
0A29 753300     294            mov x+3, #high(key_C5 / 0x10000)  
0A2C            294   ; Load upper ratio
0A2C 753405     294            mov y+0, #low (tone_mi3b % 0x10000) 
0A2F 753500     294            mov y+1, #high(tone_mi3b % 0x10000) 
0A32 753600     294            mov y+2, #low (tone_mi3b / 0x10000) 
0A35 753700     294            mov y+3, #high(tone_mi3b / 0x10000) 
0A38 120188     294            lcall mul32
0A3B            294            
0A3B            294   ; Load lower ratio
0A3B 753406     294            mov y+0, #low (tone_mi3a % 0x10000) 
0A3E 753500     294            mov y+1, #high(tone_mi3a % 0x10000) 
0A41 753600     294            mov y+2, #low (tone_mi3a / 0x10000) 
0A44 753700     294            mov y+3, #high(tone_mi3a / 0x10000) 
0A47 120215     294            lcall div32
0A4A            294   ; compute value for reload
0A4A            294   ; reload rate = CLK/freq
0A4A 753400     294            mov y+0, #low (CLK % 0x10000) 
0A4D 753580     294            mov y+1, #high(CLK % 0x10000) 
0A50 753651     294            mov y+2, #low (CLK / 0x10000) 
0A53 753701     294            mov y+3, #high(CLK / 0x10000) 
0A56 12028B     294            lcall xchg_xy
0A59            294            
0A59 120215     294            lcall div32
0A5C            294            
0A5C            294   ; reload value = 65536-x
0A5C 753400     294            mov y+0, #low (65536 % 0x10000) 
0A5F 753500     294            mov y+1, #high(65536 % 0x10000) 
0A62 753601     294            mov y+2, #low (65536 / 0x10000) 
0A65 753700     294            mov y+3, #high(65536 / 0x10000) 
0A68 12028B     294            lcall xchg_xy
0A6B 1200F4     294            lcall sub32
0A6E            294   ; x now contains the reload value
0A6E            294   ;debug_BCD
0A6E 8530F2     294            mov RL0, x+0
0A71 8531F4     294            mov RH0, x+1
0A74            294            
0A74 D28C       294            setb TR0
0A76            294            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
0A76 7A04       294            mov R2, #4
0A78 12038E     294            lcall Play_Note_Delay
0A7B C28C       294            clr TR0
0A7D C002       294            push AR2
0A7F 7A0A       294            mov R2, #10
0A81 1202AF     294            lcall ?Wait_Milli_Seconds
0A84 D002       294            pop AR2
0A86 D002       294            pop AR2
0A88            295            ; Compute the reload value given the base frequency and interval ratio codes
0A88            295   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
0A88            295   ;Calc_Interval:
0A88            295   ; Freq0 loaded (fundamental frequency)
0A88 C002       295   push AR2
0A8A 75300B     295            mov x+0, #low (key_C5 % 0x10000) 
0A8D 753102     295            mov x+1, #high(key_C5 % 0x10000) 
0A90 753200     295            mov x+2, #low (key_C5 / 0x10000) 
0A93 753300     295            mov x+3, #high(key_C5 / 0x10000)  
0A96            295   ; Load upper ratio
0A96 75340F     295            mov y+0, #low (tone_mi2b % 0x10000) 
0A99 753500     295            mov y+1, #high(tone_mi2b % 0x10000) 
0A9C 753600     295            mov y+2, #low (tone_mi2b / 0x10000) 
0A9F 753700     295            mov y+3, #high(tone_mi2b / 0x10000) 
0AA2 120188     295            lcall mul32
0AA5            295            
0AA5            295   ; Load lower ratio
0AA5 753410     295            mov y+0, #low (tone_mi2a % 0x10000) 
0AA8 753500     295            mov y+1, #high(tone_mi2a % 0x10000) 
0AAB 753600     295            mov y+2, #low (tone_mi2a / 0x10000) 
0AAE 753700     295            mov y+3, #high(tone_mi2a / 0x10000) 
0AB1 120215     295            lcall div32
0AB4            295   ; compute value for reload
0AB4            295   ; reload rate = CLK/freq
0AB4 753400     295            mov y+0, #low (CLK % 0x10000) 
0AB7 753580     295            mov y+1, #high(CLK % 0x10000) 
0ABA 753651     295            mov y+2, #low (CLK / 0x10000) 
0ABD 753701     295            mov y+3, #high(CLK / 0x10000) 
0AC0 12028B     295            lcall xchg_xy
0AC3            295            
0AC3 120215     295            lcall div32
0AC6            295            
0AC6            295   ; reload value = 65536-x
0AC6 753400     295            mov y+0, #low (65536 % 0x10000) 
0AC9 753500     295            mov y+1, #high(65536 % 0x10000) 
0ACC 753601     295            mov y+2, #low (65536 / 0x10000) 
0ACF 753700     295            mov y+3, #high(65536 / 0x10000) 
0AD2 12028B     295            lcall xchg_xy
0AD5 1200F4     295            lcall sub32
0AD8            295   ; x now contains the reload value
0AD8            295   ;debug_BCD
0AD8 8530F2     295            mov RL0, x+0
0ADB 8531F4     295            mov RH0, x+1
0ADE            295            
0ADE D28C       295            setb TR0
0AE0            295            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
0AE0 7A02       295            mov R2, #2
0AE2 12038E     295            lcall Play_Note_Delay
0AE5 C28C       295            clr TR0
0AE7 C002       295            push AR2
0AE9 7A0A       295            mov R2, #10
0AEB 1202AF     295            lcall ?Wait_Milli_Seconds
0AEE D002       295            pop AR2
0AF0 D002       295            pop AR2
0AF2            296            ; Compute the reload value given the base frequency and interval ratio codes
0AF2            296   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
0AF2            296   ;Calc_Interval:
0AF2            296   ; Freq0 loaded (fundamental frequency)
0AF2 C002       296   push AR2
0AF4 75300B     296            mov x+0, #low (key_C5 % 0x10000) 
0AF7 753102     296            mov x+1, #high(key_C5 % 0x10000) 
0AFA 753200     296            mov x+2, #low (key_C5 / 0x10000) 
0AFD 753300     296            mov x+3, #high(key_C5 / 0x10000)  
0B00            296   ; Load upper ratio
0B00 753405     296            mov y+0, #low (tone_mi3b % 0x10000) 
0B03 753500     296            mov y+1, #high(tone_mi3b % 0x10000) 
0B06 753600     296            mov y+2, #low (tone_mi3b / 0x10000) 
0B09 753700     296            mov y+3, #high(tone_mi3b / 0x10000) 
0B0C 120188     296            lcall mul32
0B0F            296            
0B0F            296   ; Load lower ratio
0B0F 753406     296            mov y+0, #low (tone_mi3a % 0x10000) 
0B12 753500     296            mov y+1, #high(tone_mi3a % 0x10000) 
0B15 753600     296            mov y+2, #low (tone_mi3a / 0x10000) 
0B18 753700     296            mov y+3, #high(tone_mi3a / 0x10000) 
0B1B 120215     296            lcall div32
0B1E            296   ; compute value for reload
0B1E            296   ; reload rate = CLK/freq
0B1E 753400     296            mov y+0, #low (CLK % 0x10000) 
0B21 753580     296            mov y+1, #high(CLK % 0x10000) 
0B24 753651     296            mov y+2, #low (CLK / 0x10000) 
0B27 753701     296            mov y+3, #high(CLK / 0x10000) 
0B2A 12028B     296            lcall xchg_xy
0B2D            296            
0B2D 120215     296            lcall div32
0B30            296            
0B30            296   ; reload value = 65536-x
0B30 753400     296            mov y+0, #low (65536 % 0x10000) 
0B33 753500     296            mov y+1, #high(65536 % 0x10000) 
0B36 753601     296            mov y+2, #low (65536 / 0x10000) 
0B39 753700     296            mov y+3, #high(65536 / 0x10000) 
0B3C 12028B     296            lcall xchg_xy
0B3F 1200F4     296            lcall sub32
0B42            296   ; x now contains the reload value
0B42            296   ;debug_BCD
0B42 8530F2     296            mov RL0, x+0
0B45 8531F4     296            mov RH0, x+1
0B48            296            
0B48 D28C       296            setb TR0
0B4A            296            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
0B4A 7A02       296            mov R2, #2
0B4C 12038E     296            lcall Play_Note_Delay
0B4F C28C       296            clr TR0
0B51 C002       296            push AR2
0B53 7A0A       296            mov R2, #10
0B55 1202AF     296            lcall ?Wait_Milli_Seconds
0B58 D002       296            pop AR2
0B5A D002       296            pop AR2
0B5C            297            ; Compute the reload value given the base frequency and interval ratio codes
0B5C            297   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
0B5C            297   ;Calc_Interval:
0B5C            297   ; Freq0 loaded (fundamental frequency)
0B5C C002       297   push AR2
0B5E 75300B     297            mov x+0, #low (key_C5 % 0x10000) 
0B61 753102     297            mov x+1, #high(key_C5 % 0x10000) 
0B64 753200     297            mov x+2, #low (key_C5 / 0x10000) 
0B67 753300     297            mov x+3, #high(key_C5 / 0x10000)  
0B6A            297   ; Load upper ratio
0B6A 753404     297            mov y+0, #low (tone_ma3b % 0x10000) 
0B6D 753500     297            mov y+1, #high(tone_ma3b % 0x10000) 
0B70 753600     297            mov y+2, #low (tone_ma3b / 0x10000) 
0B73 753700     297            mov y+3, #high(tone_ma3b / 0x10000) 
0B76 120188     297            lcall mul32
0B79            297            
0B79            297   ; Load lower ratio
0B79 753405     297            mov y+0, #low (tone_ma3a % 0x10000) 
0B7C 753500     297            mov y+1, #high(tone_ma3a % 0x10000) 
0B7F 753600     297            mov y+2, #low (tone_ma3a / 0x10000) 
0B82 753700     297            mov y+3, #high(tone_ma3a / 0x10000) 
0B85 120215     297            lcall div32
0B88            297   ; compute value for reload
0B88            297   ; reload rate = CLK/freq
0B88 753400     297            mov y+0, #low (CLK % 0x10000) 
0B8B 753580     297            mov y+1, #high(CLK % 0x10000) 
0B8E 753651     297            mov y+2, #low (CLK / 0x10000) 
0B91 753701     297            mov y+3, #high(CLK / 0x10000) 
0B94 12028B     297            lcall xchg_xy
0B97            297            
0B97 120215     297            lcall div32
0B9A            297            
0B9A            297   ; reload value = 65536-x
0B9A 753400     297            mov y+0, #low (65536 % 0x10000) 
0B9D 753500     297            mov y+1, #high(65536 % 0x10000) 
0BA0 753601     297            mov y+2, #low (65536 / 0x10000) 
0BA3 753700     297            mov y+3, #high(65536 / 0x10000) 
0BA6 12028B     297            lcall xchg_xy
0BA9 1200F4     297            lcall sub32
0BAC            297   ; x now contains the reload value
0BAC            297   ;debug_BCD
0BAC 8530F2     297            mov RL0, x+0
0BAF 8531F4     297            mov RH0, x+1
0BB2            297            
0BB2 D28C       297            setb TR0
0BB4            297            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
0BB4 7A02       297            mov R2, #2
0BB6 12038E     297            lcall Play_Note_Delay
0BB9 C28C       297            clr TR0
0BBB C002       297            push AR2
0BBD 7A0A       297            mov R2, #10
0BBF 1202AF     297            lcall ?Wait_Milli_Seconds
0BC2 D002       297            pop AR2
0BC4 D002       297            pop AR2
0BC6            298            ; Compute the reload value given the base frequency and interval ratio codes
0BC6            298   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
0BC6            298   ;Calc_Interval:
0BC6            298   ; Freq0 loaded (fundamental frequency)
0BC6 C002       298   push AR2
0BC8 75300B     298            mov x+0, #low (key_C5 % 0x10000) 
0BCB 753102     298            mov x+1, #high(key_C5 % 0x10000) 
0BCE 753200     298            mov x+2, #low (key_C5 / 0x10000) 
0BD1 753300     298            mov x+3, #high(key_C5 / 0x10000)  
0BD4            298   ; Load upper ratio
0BD4 753403     298            mov y+0, #low (tone_p4b % 0x10000) 
0BD7 753500     298            mov y+1, #high(tone_p4b % 0x10000) 
0BDA 753600     298            mov y+2, #low (tone_p4b / 0x10000) 
0BDD 753700     298            mov y+3, #high(tone_p4b / 0x10000) 
0BE0 120188     298            lcall mul32
0BE3            298            
0BE3            298   ; Load lower ratio
0BE3 753404     298            mov y+0, #low (tone_p4a % 0x10000) 
0BE6 753500     298            mov y+1, #high(tone_p4a % 0x10000) 
0BE9 753600     298            mov y+2, #low (tone_p4a / 0x10000) 
0BEC 753700     298            mov y+3, #high(tone_p4a / 0x10000) 
0BEF 120215     298            lcall div32
0BF2            298   ; compute value for reload
0BF2            298   ; reload rate = CLK/freq
0BF2 753400     298            mov y+0, #low (CLK % 0x10000) 
0BF5 753580     298            mov y+1, #high(CLK % 0x10000) 
0BF8 753651     298            mov y+2, #low (CLK / 0x10000) 
0BFB 753701     298            mov y+3, #high(CLK / 0x10000) 
0BFE 12028B     298            lcall xchg_xy
0C01            298            
0C01 120215     298            lcall div32
0C04            298            
0C04            298   ; reload value = 65536-x
0C04 753400     298            mov y+0, #low (65536 % 0x10000) 
0C07 753500     298            mov y+1, #high(65536 % 0x10000) 
0C0A 753601     298            mov y+2, #low (65536 / 0x10000) 
0C0D 753700     298            mov y+3, #high(65536 / 0x10000) 
0C10 12028B     298            lcall xchg_xy
0C13 1200F4     298            lcall sub32
0C16            298   ; x now contains the reload value
0C16            298   ;debug_BCD
0C16 8530F2     298            mov RL0, x+0
0C19 8531F4     298            mov RH0, x+1
0C1C            298            
0C1C D28C       298            setb TR0
0C1E            298            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
0C1E 7A04       298            mov R2, #4
0C20 12038E     298            lcall Play_Note_Delay
0C23 C28C       298            clr TR0
0C25 C002       298            push AR2
0C27 7A0A       298            mov R2, #10
0C29 1202AF     298            lcall ?Wait_Milli_Seconds
0C2C D002       298            pop AR2
0C2E D002       298            pop AR2
0C30 C002       299   push AR2
0C32 7A04       299   mov R2, #4
0C34 12038E     299   lcall Play_Note_Delay
0C37 D002       299   pop AR2
0C39            300   
0C39            301   ; Chorus
0C39            302            ; Compute the reload value given the base frequency and interval ratio codes
0C39            302   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
0C39            302   ;Calc_Interval:
0C39            302   ; Freq0 loaded (fundamental frequency)
0C39 C002       302   push AR2
0C3B 75300B     302            mov x+0, #low (key_C5 % 0x10000) 
0C3E 753102     302            mov x+1, #high(key_C5 % 0x10000) 
0C41 753200     302            mov x+2, #low (key_C5 / 0x10000) 
0C44 753300     302            mov x+3, #high(key_C5 / 0x10000)  
0C47            302   ; Load upper ratio
0C47 753403     302            mov y+0, #low (tone_p5a % 0x10000) 
0C4A 753500     302            mov y+1, #high(tone_p5a % 0x10000) 
0C4D 753600     302            mov y+2, #low (tone_p5a / 0x10000) 
0C50 753700     302            mov y+3, #high(tone_p5a / 0x10000) 
0C53 120188     302            lcall mul32
0C56            302            
0C56            302   ; Load lower ratio
0C56 753402     302            mov y+0, #low (tone_p5b % 0x10000) 
0C59 753500     302            mov y+1, #high(tone_p5b % 0x10000) 
0C5C 753600     302            mov y+2, #low (tone_p5b / 0x10000) 
0C5F 753700     302            mov y+3, #high(tone_p5b / 0x10000) 
0C62 120215     302            lcall div32
0C65            302   ; compute value for reload
0C65            302   ; reload rate = CLK/freq
0C65 753400     302            mov y+0, #low (CLK % 0x10000) 
0C68 753580     302            mov y+1, #high(CLK % 0x10000) 
0C6B 753651     302            mov y+2, #low (CLK / 0x10000) 
0C6E 753701     302            mov y+3, #high(CLK / 0x10000) 
0C71 12028B     302            lcall xchg_xy
0C74            302            
0C74 120215     302            lcall div32
0C77            302            
0C77            302   ; reload value = 65536-x
0C77 753400     302            mov y+0, #low (65536 % 0x10000) 
0C7A 753500     302            mov y+1, #high(65536 % 0x10000) 
0C7D 753601     302            mov y+2, #low (65536 / 0x10000) 
0C80 753700     302            mov y+3, #high(65536 / 0x10000) 
0C83 12028B     302            lcall xchg_xy
0C86 1200F4     302            lcall sub32
0C89            302   ; x now contains the reload value
0C89            302   ;debug_BCD
0C89 8530F2     302            mov RL0, x+0
0C8C 8531F4     302            mov RH0, x+1
0C8F            302            
0C8F D28C       302            setb TR0
0C91            302            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
0C91 7A04       302            mov R2, #4
0C93 12038E     302            lcall Play_Note_Delay
0C96 C28C       302            clr TR0
0C98 C002       302            push AR2
0C9A 7A0A       302            mov R2, #10
0C9C 1202AF     302            lcall ?Wait_Milli_Seconds
0C9F D002       302            pop AR2
0CA1 D002       302            pop AR2
0CA3            303            ; Compute the reload value given the base frequency and interval ratio codes
0CA3            303   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
0CA3            303   ;Calc_Interval:
0CA3            303   ; Freq0 loaded (fundamental frequency)
0CA3 C002       303   push AR2
0CA5 75300B     303            mov x+0, #low (key_C5 % 0x10000) 
0CA8 753102     303            mov x+1, #high(key_C5 % 0x10000) 
0CAB 753200     303            mov x+2, #low (key_C5 / 0x10000) 
0CAE 753300     303            mov x+3, #high(key_C5 / 0x10000)  
0CB1            303   ; Load upper ratio
0CB1 753409     303            mov y+0, #low (tone_ma2a % 0x10000) 
0CB4 753500     303            mov y+1, #high(tone_ma2a % 0x10000) 
0CB7 753600     303            mov y+2, #low (tone_ma2a / 0x10000) 
0CBA 753700     303            mov y+3, #high(tone_ma2a / 0x10000) 
0CBD 120188     303            lcall mul32
0CC0            303            
0CC0            303   ; Load lower ratio
0CC0 753408     303            mov y+0, #low (tone_ma2b % 0x10000) 
0CC3 753500     303            mov y+1, #high(tone_ma2b % 0x10000) 
0CC6 753600     303            mov y+2, #low (tone_ma2b / 0x10000) 
0CC9 753700     303            mov y+3, #high(tone_ma2b / 0x10000) 
0CCC 120215     303            lcall div32
0CCF            303   ; compute value for reload
0CCF            303   ; reload rate = CLK/freq
0CCF 753400     303            mov y+0, #low (CLK % 0x10000) 
0CD2 753580     303            mov y+1, #high(CLK % 0x10000) 
0CD5 753651     303            mov y+2, #low (CLK / 0x10000) 
0CD8 753701     303            mov y+3, #high(CLK / 0x10000) 
0CDB 12028B     303            lcall xchg_xy
0CDE            303            
0CDE 120215     303            lcall div32
0CE1            303            
0CE1            303   ; reload value = 65536-x
0CE1 753400     303            mov y+0, #low (65536 % 0x10000) 
0CE4 753500     303            mov y+1, #high(65536 % 0x10000) 
0CE7 753601     303            mov y+2, #low (65536 / 0x10000) 
0CEA 753700     303            mov y+3, #high(65536 / 0x10000) 
0CED 12028B     303            lcall xchg_xy
0CF0 1200F4     303            lcall sub32
0CF3            303   ; x now contains the reload value
0CF3            303   ;debug_BCD
0CF3 8530F2     303            mov RL0, x+0
0CF6 8531F4     303            mov RH0, x+1
0CF9            303            
0CF9 D28C       303            setb TR0
0CFB            303            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
0CFB 7A02       303            mov R2, #2
0CFD 12038E     303            lcall Play_Note_Delay
0D00 C28C       303            clr TR0
0D02 C002       303            push AR2
0D04 7A0A       303            mov R2, #10
0D06 1202AF     303            lcall ?Wait_Milli_Seconds
0D09 D002       303            pop AR2
0D0B D002       303            pop AR2
0D0D            304            ; Compute the reload value given the base frequency and interval ratio codes
0D0D            304   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
0D0D            304   ;Calc_Interval:
0D0D            304   ; Freq0 loaded (fundamental frequency)
0D0D C002       304   push AR2
0D0F 75300B     304            mov x+0, #low (key_C5 % 0x10000) 
0D12 753102     304            mov x+1, #high(key_C5 % 0x10000) 
0D15 753200     304            mov x+2, #low (key_C5 / 0x10000) 
0D18 753300     304            mov x+3, #high(key_C5 / 0x10000)  
0D1B            304   ; Load upper ratio
0D1B 753406     304            mov y+0, #low (tone_mi3a % 0x10000) 
0D1E 753500     304            mov y+1, #high(tone_mi3a % 0x10000) 
0D21 753600     304            mov y+2, #low (tone_mi3a / 0x10000) 
0D24 753700     304            mov y+3, #high(tone_mi3a / 0x10000) 
0D27 120188     304            lcall mul32
0D2A            304            
0D2A            304   ; Load lower ratio
0D2A 753405     304            mov y+0, #low (tone_mi3b % 0x10000) 
0D2D 753500     304            mov y+1, #high(tone_mi3b % 0x10000) 
0D30 753600     304            mov y+2, #low (tone_mi3b / 0x10000) 
0D33 753700     304            mov y+3, #high(tone_mi3b / 0x10000) 
0D36 120215     304            lcall div32
0D39            304   ; compute value for reload
0D39            304   ; reload rate = CLK/freq
0D39 753400     304            mov y+0, #low (CLK % 0x10000) 
0D3C 753580     304            mov y+1, #high(CLK % 0x10000) 
0D3F 753651     304            mov y+2, #low (CLK / 0x10000) 
0D42 753701     304            mov y+3, #high(CLK / 0x10000) 
0D45 12028B     304            lcall xchg_xy
0D48            304            
0D48 120215     304            lcall div32
0D4B            304            
0D4B            304   ; reload value = 65536-x
0D4B 753400     304            mov y+0, #low (65536 % 0x10000) 
0D4E 753500     304            mov y+1, #high(65536 % 0x10000) 
0D51 753601     304            mov y+2, #low (65536 / 0x10000) 
0D54 753700     304            mov y+3, #high(65536 / 0x10000) 
0D57 12028B     304            lcall xchg_xy
0D5A 1200F4     304            lcall sub32
0D5D            304   ; x now contains the reload value
0D5D            304   ;debug_BCD
0D5D 8530F2     304            mov RL0, x+0
0D60 8531F4     304            mov RH0, x+1
0D63            304            
0D63 D28C       304            setb TR0
0D65            304            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
0D65 7A02       304            mov R2, #2
0D67 12038E     304            lcall Play_Note_Delay
0D6A C28C       304            clr TR0
0D6C C002       304            push AR2
0D6E 7A0A       304            mov R2, #10
0D70 1202AF     304            lcall ?Wait_Milli_Seconds
0D73 D002       304            pop AR2
0D75 D002       304            pop AR2
0D77            305            ; Compute the reload value given the base frequency and interval ratio codes
0D77            305   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
0D77            305   ;Calc_Interval:
0D77            305   ; Freq0 loaded (fundamental frequency)
0D77 C002       305   push AR2
0D79 75300B     305            mov x+0, #low (key_C5 % 0x10000) 
0D7C 753102     305            mov x+1, #high(key_C5 % 0x10000) 
0D7F 753200     305            mov x+2, #low (key_C5 / 0x10000) 
0D82 753300     305            mov x+3, #high(key_C5 / 0x10000)  
0D85            305   ; Load upper ratio
0D85 753405     305            mov y+0, #low (tone_ma3a % 0x10000) 
0D88 753500     305            mov y+1, #high(tone_ma3a % 0x10000) 
0D8B 753600     305            mov y+2, #low (tone_ma3a / 0x10000) 
0D8E 753700     305            mov y+3, #high(tone_ma3a / 0x10000) 
0D91 120188     305            lcall mul32
0D94            305            
0D94            305   ; Load lower ratio
0D94 753404     305            mov y+0, #low (tone_ma3b % 0x10000) 
0D97 753500     305            mov y+1, #high(tone_ma3b % 0x10000) 
0D9A 753600     305            mov y+2, #low (tone_ma3b / 0x10000) 
0D9D 753700     305            mov y+3, #high(tone_ma3b / 0x10000) 
0DA0 120215     305            lcall div32
0DA3            305   ; compute value for reload
0DA3            305   ; reload rate = CLK/freq
0DA3 753400     305            mov y+0, #low (CLK % 0x10000) 
0DA6 753580     305            mov y+1, #high(CLK % 0x10000) 
0DA9 753651     305            mov y+2, #low (CLK / 0x10000) 
0DAC 753701     305            mov y+3, #high(CLK / 0x10000) 
0DAF 12028B     305            lcall xchg_xy
0DB2            305            
0DB2 120215     305            lcall div32
0DB5            305            
0DB5            305   ; reload value = 65536-x
0DB5 753400     305            mov y+0, #low (65536 % 0x10000) 
0DB8 753500     305            mov y+1, #high(65536 % 0x10000) 
0DBB 753601     305            mov y+2, #low (65536 / 0x10000) 
0DBE 753700     305            mov y+3, #high(65536 / 0x10000) 
0DC1 12028B     305            lcall xchg_xy
0DC4 1200F4     305            lcall sub32
0DC7            305   ; x now contains the reload value
0DC7            305   ;debug_BCD
0DC7 8530F2     305            mov RL0, x+0
0DCA 8531F4     305            mov RH0, x+1
0DCD            305            
0DCD D28C       305            setb TR0
0DCF            305            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
0DCF 7A02       305            mov R2, #2
0DD1 12038E     305            lcall Play_Note_Delay
0DD4 C28C       305            clr TR0
0DD6 C002       305            push AR2
0DD8 7A0A       305            mov R2, #10
0DDA 1202AF     305            lcall ?Wait_Milli_Seconds
0DDD D002       305            pop AR2
0DDF D002       305            pop AR2
0DE1            306            ; Compute the reload value given the base frequency and interval ratio codes
0DE1            306   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
0DE1            306   ;Calc_Interval:
0DE1            306   ; Freq0 loaded (fundamental frequency)
0DE1 C002       306   push AR2
0DE3 75300B     306            mov x+0, #low (key_C5 % 0x10000) 
0DE6 753102     306            mov x+1, #high(key_C5 % 0x10000) 
0DE9 753200     306            mov x+2, #low (key_C5 / 0x10000) 
0DEC 753300     306            mov x+3, #high(key_C5 / 0x10000)  
0DEF            306   ; Load upper ratio
0DEF 753402     306            mov y+0, #low (tone_p8a % 0x10000) 
0DF2 753500     306            mov y+1, #high(tone_p8a % 0x10000) 
0DF5 753600     306            mov y+2, #low (tone_p8a / 0x10000) 
0DF8 753700     306            mov y+3, #high(tone_p8a / 0x10000) 
0DFB 120188     306            lcall mul32
0DFE            306            
0DFE            306   ; Load lower ratio
0DFE 753401     306            mov y+0, #low (tone_p8b % 0x10000) 
0E01 753500     306            mov y+1, #high(tone_p8b % 0x10000) 
0E04 753600     306            mov y+2, #low (tone_p8b / 0x10000) 
0E07 753700     306            mov y+3, #high(tone_p8b / 0x10000) 
0E0A 120215     306            lcall div32
0E0D            306   ; compute value for reload
0E0D            306   ; reload rate = CLK/freq
0E0D 753400     306            mov y+0, #low (CLK % 0x10000) 
0E10 753580     306            mov y+1, #high(CLK % 0x10000) 
0E13 753651     306            mov y+2, #low (CLK / 0x10000) 
0E16 753701     306            mov y+3, #high(CLK / 0x10000) 
0E19 12028B     306            lcall xchg_xy
0E1C            306            
0E1C 120215     306            lcall div32
0E1F            306            
0E1F            306   ; reload value = 65536-x
0E1F 753400     306            mov y+0, #low (65536 % 0x10000) 
0E22 753500     306            mov y+1, #high(65536 % 0x10000) 
0E25 753601     306            mov y+2, #low (65536 / 0x10000) 
0E28 753700     306            mov y+3, #high(65536 / 0x10000) 
0E2B 12028B     306            lcall xchg_xy
0E2E 1200F4     306            lcall sub32
0E31            306   ; x now contains the reload value
0E31            306   ;debug_BCD
0E31 8530F2     306            mov RL0, x+0
0E34 8531F4     306            mov RH0, x+1
0E37            306            
0E37 D28C       306            setb TR0
0E39            306            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
0E39 7A04       306            mov R2, #4
0E3B 12038E     306            lcall Play_Note_Delay
0E3E C28C       306            clr TR0
0E40 C002       306            push AR2
0E42 7A0A       306            mov R2, #10
0E44 1202AF     306            lcall ?Wait_Milli_Seconds
0E47 D002       306            pop AR2
0E49 D002       306            pop AR2
0E4B            307            ; Compute the reload value given the base frequency and interval ratio codes
0E4B            307   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
0E4B            307   ;Calc_Interval:
0E4B            307   ; Freq0 loaded (fundamental frequency)
0E4B C002       307   push AR2
0E4D 75300B     307            mov x+0, #low (key_C5 % 0x10000) 
0E50 753102     307            mov x+1, #high(key_C5 % 0x10000) 
0E53 753200     307            mov x+2, #low (key_C5 / 0x10000) 
0E56 753300     307            mov x+3, #high(key_C5 / 0x10000)  
0E59            307   ; Load upper ratio
0E59 753405     307            mov y+0, #low (tone_ma3a % 0x10000) 
0E5C 753500     307            mov y+1, #high(tone_ma3a % 0x10000) 
0E5F 753600     307            mov y+2, #low (tone_ma3a / 0x10000) 
0E62 753700     307            mov y+3, #high(tone_ma3a / 0x10000) 
0E65 120188     307            lcall mul32
0E68            307            
0E68            307   ; Load lower ratio
0E68 753404     307            mov y+0, #low (tone_ma3b % 0x10000) 
0E6B 753500     307            mov y+1, #high(tone_ma3b % 0x10000) 
0E6E 753600     307            mov y+2, #low (tone_ma3b / 0x10000) 
0E71 753700     307            mov y+3, #high(tone_ma3b / 0x10000) 
0E74 120215     307            lcall div32
0E77            307   ; compute value for reload
0E77            307   ; reload rate = CLK/freq
0E77 753400     307            mov y+0, #low (CLK % 0x10000) 
0E7A 753580     307            mov y+1, #high(CLK % 0x10000) 
0E7D 753651     307            mov y+2, #low (CLK / 0x10000) 
0E80 753701     307            mov y+3, #high(CLK / 0x10000) 
0E83 12028B     307            lcall xchg_xy
0E86            307            
0E86 120215     307            lcall div32
0E89            307            
0E89            307   ; reload value = 65536-x
0E89 753400     307            mov y+0, #low (65536 % 0x10000) 
0E8C 753500     307            mov y+1, #high(65536 % 0x10000) 
0E8F 753601     307            mov y+2, #low (65536 / 0x10000) 
0E92 753700     307            mov y+3, #high(65536 / 0x10000) 
0E95 12028B     307            lcall xchg_xy
0E98 1200F4     307            lcall sub32
0E9B            307   ; x now contains the reload value
0E9B            307   ;debug_BCD
0E9B 8530F2     307            mov RL0, x+0
0E9E 8531F4     307            mov RH0, x+1
0EA1            307            
0EA1 D28C       307            setb TR0
0EA3            307            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
0EA3 7A02       307            mov R2, #2
0EA5 12038E     307            lcall Play_Note_Delay
0EA8 C28C       307            clr TR0
0EAA C002       307            push AR2
0EAC 7A0A       307            mov R2, #10
0EAE 1202AF     307            lcall ?Wait_Milli_Seconds
0EB1 D002       307            pop AR2
0EB3 D002       307            pop AR2
0EB5            308            ; Compute the reload value given the base frequency and interval ratio codes
0EB5            308   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
0EB5            308   ;Calc_Interval:
0EB5            308   ; Freq0 loaded (fundamental frequency)
0EB5 C002       308   push AR2
0EB7 75300B     308            mov x+0, #low (key_C5 % 0x10000) 
0EBA 753102     308            mov x+1, #high(key_C5 % 0x10000) 
0EBD 753200     308            mov x+2, #low (key_C5 / 0x10000) 
0EC0 753300     308            mov x+3, #high(key_C5 / 0x10000)  
0EC3            308   ; Load upper ratio
0EC3 753402     308            mov y+0, #low (tone_p8a % 0x10000) 
0EC6 753500     308            mov y+1, #high(tone_p8a % 0x10000) 
0EC9 753600     308            mov y+2, #low (tone_p8a / 0x10000) 
0ECC 753700     308            mov y+3, #high(tone_p8a / 0x10000) 
0ECF 120188     308            lcall mul32
0ED2            308            
0ED2            308   ; Load lower ratio
0ED2 753401     308            mov y+0, #low (tone_p8b % 0x10000) 
0ED5 753500     308            mov y+1, #high(tone_p8b % 0x10000) 
0ED8 753600     308            mov y+2, #low (tone_p8b / 0x10000) 
0EDB 753700     308            mov y+3, #high(tone_p8b / 0x10000) 
0EDE 120215     308            lcall div32
0EE1            308   ; compute value for reload
0EE1            308   ; reload rate = CLK/freq
0EE1 753400     308            mov y+0, #low (CLK % 0x10000) 
0EE4 753580     308            mov y+1, #high(CLK % 0x10000) 
0EE7 753651     308            mov y+2, #low (CLK / 0x10000) 
0EEA 753701     308            mov y+3, #high(CLK / 0x10000) 
0EED 12028B     308            lcall xchg_xy
0EF0            308            
0EF0 120215     308            lcall div32
0EF3            308            
0EF3            308   ; reload value = 65536-x
0EF3 753400     308            mov y+0, #low (65536 % 0x10000) 
0EF6 753500     308            mov y+1, #high(65536 % 0x10000) 
0EF9 753601     308            mov y+2, #low (65536 / 0x10000) 
0EFC 753700     308            mov y+3, #high(65536 / 0x10000) 
0EFF 12028B     308            lcall xchg_xy
0F02 1200F4     308            lcall sub32
0F05            308   ; x now contains the reload value
0F05            308   ;debug_BCD
0F05 8530F2     308            mov RL0, x+0
0F08 8531F4     308            mov RH0, x+1
0F0B            308            
0F0B D28C       308            setb TR0
0F0D            308            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
0F0D 7A04       308            mov R2, #4
0F0F 12038E     308            lcall Play_Note_Delay
0F12 C28C       308            clr TR0
0F14 C002       308            push AR2
0F16 7A0A       308            mov R2, #10
0F18 1202AF     308            lcall ?Wait_Milli_Seconds
0F1B D002       308            pop AR2
0F1D D002       308            pop AR2
0F1F            309            ; Compute the reload value given the base frequency and interval ratio codes
0F1F            309   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
0F1F            309   ;Calc_Interval:
0F1F            309   ; Freq0 loaded (fundamental frequency)
0F1F C002       309   push AR2
0F21 75300B     309            mov x+0, #low (key_C5 % 0x10000) 
0F24 753102     309            mov x+1, #high(key_C5 % 0x10000) 
0F27 753200     309            mov x+2, #low (key_C5 / 0x10000) 
0F2A 753300     309            mov x+3, #high(key_C5 / 0x10000)  
0F2D            309   ; Load upper ratio
0F2D 753405     309            mov y+0, #low (tone_ma3a % 0x10000) 
0F30 753500     309            mov y+1, #high(tone_ma3a % 0x10000) 
0F33 753600     309            mov y+2, #low (tone_ma3a / 0x10000) 
0F36 753700     309            mov y+3, #high(tone_ma3a / 0x10000) 
0F39 120188     309            lcall mul32
0F3C            309            
0F3C            309   ; Load lower ratio
0F3C 753404     309            mov y+0, #low (tone_ma3b % 0x10000) 
0F3F 753500     309            mov y+1, #high(tone_ma3b % 0x10000) 
0F42 753600     309            mov y+2, #low (tone_ma3b / 0x10000) 
0F45 753700     309            mov y+3, #high(tone_ma3b / 0x10000) 
0F48 120215     309            lcall div32
0F4B            309   ; compute value for reload
0F4B            309   ; reload rate = CLK/freq
0F4B 753400     309            mov y+0, #low (CLK % 0x10000) 
0F4E 753580     309            mov y+1, #high(CLK % 0x10000) 
0F51 753651     309            mov y+2, #low (CLK / 0x10000) 
0F54 753701     309            mov y+3, #high(CLK / 0x10000) 
0F57 12028B     309            lcall xchg_xy
0F5A            309            
0F5A 120215     309            lcall div32
0F5D            309            
0F5D            309   ; reload value = 65536-x
0F5D 753400     309            mov y+0, #low (65536 % 0x10000) 
0F60 753500     309            mov y+1, #high(65536 % 0x10000) 
0F63 753601     309            mov y+2, #low (65536 / 0x10000) 
0F66 753700     309            mov y+3, #high(65536 / 0x10000) 
0F69 12028B     309            lcall xchg_xy
0F6C 1200F4     309            lcall sub32
0F6F            309   ; x now contains the reload value
0F6F            309   ;debug_BCD
0F6F 8530F2     309            mov RL0, x+0
0F72 8531F4     309            mov RH0, x+1
0F75            309            
0F75 D28C       309            setb TR0
0F77            309            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
0F77 7A02       309            mov R2, #2
0F79 12038E     309            lcall Play_Note_Delay
0F7C C28C       309            clr TR0
0F7E C002       309            push AR2
0F80 7A0A       309            mov R2, #10
0F82 1202AF     309            lcall ?Wait_Milli_Seconds
0F85 D002       309            pop AR2
0F87 D002       309            pop AR2
0F89            310            ; Compute the reload value given the base frequency and interval ratio codes
0F89            310   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
0F89            310   ;Calc_Interval:
0F89            310   ; Freq0 loaded (fundamental frequency)
0F89 C002       310   push AR2
0F8B 75300B     310            mov x+0, #low (key_C5 % 0x10000) 
0F8E 753102     310            mov x+1, #high(key_C5 % 0x10000) 
0F91 753200     310            mov x+2, #low (key_C5 / 0x10000) 
0F94 753300     310            mov x+3, #high(key_C5 / 0x10000)  
0F97            310   ; Load upper ratio
0F97 753402     310            mov y+0, #low (tone_p8a % 0x10000) 
0F9A 753500     310            mov y+1, #high(tone_p8a % 0x10000) 
0F9D 753600     310            mov y+2, #low (tone_p8a / 0x10000) 
0FA0 753700     310            mov y+3, #high(tone_p8a / 0x10000) 
0FA3 120188     310            lcall mul32
0FA6            310            
0FA6            310   ; Load lower ratio
0FA6 753401     310            mov y+0, #low (tone_p8b % 0x10000) 
0FA9 753500     310            mov y+1, #high(tone_p8b % 0x10000) 
0FAC 753600     310            mov y+2, #low (tone_p8b / 0x10000) 
0FAF 753700     310            mov y+3, #high(tone_p8b / 0x10000) 
0FB2 120215     310            lcall div32
0FB5            310   ; compute value for reload
0FB5            310   ; reload rate = CLK/freq
0FB5 753400     310            mov y+0, #low (CLK % 0x10000) 
0FB8 753580     310            mov y+1, #high(CLK % 0x10000) 
0FBB 753651     310            mov y+2, #low (CLK / 0x10000) 
0FBE 753701     310            mov y+3, #high(CLK / 0x10000) 
0FC1 12028B     310            lcall xchg_xy
0FC4            310            
0FC4 120215     310            lcall div32
0FC7            310            
0FC7            310   ; reload value = 65536-x
0FC7 753400     310            mov y+0, #low (65536 % 0x10000) 
0FCA 753500     310            mov y+1, #high(65536 % 0x10000) 
0FCD 753601     310            mov y+2, #low (65536 / 0x10000) 
0FD0 753700     310            mov y+3, #high(65536 / 0x10000) 
0FD3 12028B     310            lcall xchg_xy
0FD6 1200F4     310            lcall sub32
0FD9            310   ; x now contains the reload value
0FD9            310   ;debug_BCD
0FD9 8530F2     310            mov RL0, x+0
0FDC 8531F4     310            mov RH0, x+1
0FDF            310            
0FDF D28C       310            setb TR0
0FE1            310            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
0FE1 7A0C       310            mov R2, #12
0FE3 12038E     310            lcall Play_Note_Delay
0FE6 C28C       310            clr TR0
0FE8 C002       310            push AR2
0FEA 7A0A       310            mov R2, #10
0FEC 1202AF     310            lcall ?Wait_Milli_Seconds
0FEF D002       310            pop AR2
0FF1 D002       310            pop AR2
0FF3 C002       311   push AR2
0FF5 7A02       311   mov R2, #2
0FF7 12038E     311   lcall Play_Note_Delay
0FFA D002       311   pop AR2
0FFC            312   
0FFC            313            ; Compute the reload value given the base frequency and interval ratio codes
0FFC            313   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
0FFC            313   ;Calc_Interval:
0FFC            313   ; Freq0 loaded (fundamental frequency)
0FFC C002       313   push AR2
0FFE 753017     313            mov x+0, #low (key_C6 % 0x10000) 
1001 753104     313            mov x+1, #high(key_C6 % 0x10000) 
1004 753200     313            mov x+2, #low (key_C6 / 0x10000) 
1007 753300     313            mov x+3, #high(key_C6 / 0x10000)  
100A            313   ; Load upper ratio
100A 753401     313            mov y+0, #low (tone_p1a % 0x10000) 
100D 753500     313            mov y+1, #high(tone_p1a % 0x10000) 
1010 753600     313            mov y+2, #low (tone_p1a / 0x10000) 
1013 753700     313            mov y+3, #high(tone_p1a / 0x10000) 
1016 120188     313            lcall mul32
1019            313            
1019            313   ; Load lower ratio
1019 753401     313            mov y+0, #low (tone_p1b % 0x10000) 
101C 753500     313            mov y+1, #high(tone_p1b % 0x10000) 
101F 753600     313            mov y+2, #low (tone_p1b / 0x10000) 
1022 753700     313            mov y+3, #high(tone_p1b / 0x10000) 
1025 120215     313            lcall div32
1028            313   ; compute value for reload
1028            313   ; reload rate = CLK/freq
1028 753400     313            mov y+0, #low (CLK % 0x10000) 
102B 753580     313            mov y+1, #high(CLK % 0x10000) 
102E 753651     313            mov y+2, #low (CLK / 0x10000) 
1031 753701     313            mov y+3, #high(CLK / 0x10000) 
1034 12028B     313            lcall xchg_xy
1037            313            
1037 120215     313            lcall div32
103A            313            
103A            313   ; reload value = 65536-x
103A 753400     313            mov y+0, #low (65536 % 0x10000) 
103D 753500     313            mov y+1, #high(65536 % 0x10000) 
1040 753601     313            mov y+2, #low (65536 / 0x10000) 
1043 753700     313            mov y+3, #high(65536 / 0x10000) 
1046 12028B     313            lcall xchg_xy
1049 1200F4     313            lcall sub32
104C            313   ; x now contains the reload value
104C            313   ;debug_BCD
104C 8530F2     313            mov RL0, x+0
104F 8531F4     313            mov RH0, x+1
1052            313            
1052 D28C       313            setb TR0
1054            313            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
1054 7A02       313            mov R2, #2
1056 12038E     313            lcall Play_Note_Delay
1059 C28C       313            clr TR0
105B C002       313            push AR2
105D 7A0A       313            mov R2, #10
105F 1202AF     313            lcall ?Wait_Milli_Seconds
1062 D002       313            pop AR2
1064 D002       313            pop AR2
1066            314            ; Compute the reload value given the base frequency and interval ratio codes
1066            314   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
1066            314   ;Calc_Interval:
1066            314   ; Freq0 loaded (fundamental frequency)
1066 C002       314   push AR2
1068 753017     314            mov x+0, #low (key_C6 % 0x10000) 
106B 753104     314            mov x+1, #high(key_C6 % 0x10000) 
106E 753200     314            mov x+2, #low (key_C6 / 0x10000) 
1071 753300     314            mov x+3, #high(key_C6 / 0x10000)  
1074            314   ; Load upper ratio
1074 753409     314            mov y+0, #low (tone_ma2a % 0x10000) 
1077 753500     314            mov y+1, #high(tone_ma2a % 0x10000) 
107A 753600     314            mov y+2, #low (tone_ma2a / 0x10000) 
107D 753700     314            mov y+3, #high(tone_ma2a / 0x10000) 
1080 120188     314            lcall mul32
1083            314            
1083            314   ; Load lower ratio
1083 753408     314            mov y+0, #low (tone_ma2b % 0x10000) 
1086 753500     314            mov y+1, #high(tone_ma2b % 0x10000) 
1089 753600     314            mov y+2, #low (tone_ma2b / 0x10000) 
108C 753700     314            mov y+3, #high(tone_ma2b / 0x10000) 
108F 120215     314            lcall div32
1092            314   ; compute value for reload
1092            314   ; reload rate = CLK/freq
1092 753400     314            mov y+0, #low (CLK % 0x10000) 
1095 753580     314            mov y+1, #high(CLK % 0x10000) 
1098 753651     314            mov y+2, #low (CLK / 0x10000) 
109B 753701     314            mov y+3, #high(CLK / 0x10000) 
109E 12028B     314            lcall xchg_xy
10A1            314            
10A1 120215     314            lcall div32
10A4            314            
10A4            314   ; reload value = 65536-x
10A4 753400     314            mov y+0, #low (65536 % 0x10000) 
10A7 753500     314            mov y+1, #high(65536 % 0x10000) 
10AA 753601     314            mov y+2, #low (65536 / 0x10000) 
10AD 753700     314            mov y+3, #high(65536 / 0x10000) 
10B0 12028B     314            lcall xchg_xy
10B3 1200F4     314            lcall sub32
10B6            314   ; x now contains the reload value
10B6            314   ;debug_BCD
10B6 8530F2     314            mov RL0, x+0
10B9 8531F4     314            mov RH0, x+1
10BC            314            
10BC D28C       314            setb TR0
10BE            314            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
10BE 7A02       314            mov R2, #2
10C0 12038E     314            lcall Play_Note_Delay
10C3 C28C       314            clr TR0
10C5 C002       314            push AR2
10C7 7A0A       314            mov R2, #10
10C9 1202AF     314            lcall ?Wait_Milli_Seconds
10CC D002       314            pop AR2
10CE D002       314            pop AR2
10D0            315            ; Compute the reload value given the base frequency and interval ratio codes
10D0            315   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
10D0            315   ;Calc_Interval:
10D0            315   ; Freq0 loaded (fundamental frequency)
10D0 C002       315   push AR2
10D2 753017     315            mov x+0, #low (key_C6 % 0x10000) 
10D5 753104     315            mov x+1, #high(key_C6 % 0x10000) 
10D8 753200     315            mov x+2, #low (key_C6 / 0x10000) 
10DB 753300     315            mov x+3, #high(key_C6 / 0x10000)  
10DE            315   ; Load upper ratio
10DE 753406     315            mov y+0, #low (tone_mi3a % 0x10000) 
10E1 753500     315            mov y+1, #high(tone_mi3a % 0x10000) 
10E4 753600     315            mov y+2, #low (tone_mi3a / 0x10000) 
10E7 753700     315            mov y+3, #high(tone_mi3a / 0x10000) 
10EA 120188     315            lcall mul32
10ED            315            
10ED            315   ; Load lower ratio
10ED 753405     315            mov y+0, #low (tone_mi3b % 0x10000) 
10F0 753500     315            mov y+1, #high(tone_mi3b % 0x10000) 
10F3 753600     315            mov y+2, #low (tone_mi3b / 0x10000) 
10F6 753700     315            mov y+3, #high(tone_mi3b / 0x10000) 
10F9 120215     315            lcall div32
10FC            315   ; compute value for reload
10FC            315   ; reload rate = CLK/freq
10FC 753400     315            mov y+0, #low (CLK % 0x10000) 
10FF 753580     315            mov y+1, #high(CLK % 0x10000) 
1102 753651     315            mov y+2, #low (CLK / 0x10000) 
1105 753701     315            mov y+3, #high(CLK / 0x10000) 
1108 12028B     315            lcall xchg_xy
110B            315            
110B 120215     315            lcall div32
110E            315            
110E            315   ; reload value = 65536-x
110E 753400     315            mov y+0, #low (65536 % 0x10000) 
1111 753500     315            mov y+1, #high(65536 % 0x10000) 
1114 753601     315            mov y+2, #low (65536 / 0x10000) 
1117 753700     315            mov y+3, #high(65536 / 0x10000) 
111A 12028B     315            lcall xchg_xy
111D 1200F4     315            lcall sub32
1120            315   ; x now contains the reload value
1120            315   ;debug_BCD
1120 8530F2     315            mov RL0, x+0
1123 8531F4     315            mov RH0, x+1
1126            315            
1126 D28C       315            setb TR0
1128            315            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
1128 7A02       315            mov R2, #2
112A 12038E     315            lcall Play_Note_Delay
112D C28C       315            clr TR0
112F C002       315            push AR2
1131 7A0A       315            mov R2, #10
1133 1202AF     315            lcall ?Wait_Milli_Seconds
1136 D002       315            pop AR2
1138 D002       315            pop AR2
113A            316            ; Compute the reload value given the base frequency and interval ratio codes
113A            316   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
113A            316   ;Calc_Interval:
113A            316   ; Freq0 loaded (fundamental frequency)
113A C002       316   push AR2
113C 753017     316            mov x+0, #low (key_C6 % 0x10000) 
113F 753104     316            mov x+1, #high(key_C6 % 0x10000) 
1142 753200     316            mov x+2, #low (key_C6 / 0x10000) 
1145 753300     316            mov x+3, #high(key_C6 / 0x10000)  
1148            316   ; Load upper ratio
1148 753405     316            mov y+0, #low (tone_ma3a % 0x10000) 
114B 753500     316            mov y+1, #high(tone_ma3a % 0x10000) 
114E 753600     316            mov y+2, #low (tone_ma3a / 0x10000) 
1151 753700     316            mov y+3, #high(tone_ma3a / 0x10000) 
1154 120188     316            lcall mul32
1157            316            
1157            316   ; Load lower ratio
1157 753404     316            mov y+0, #low (tone_ma3b % 0x10000) 
115A 753500     316            mov y+1, #high(tone_ma3b % 0x10000) 
115D 753600     316            mov y+2, #low (tone_ma3b / 0x10000) 
1160 753700     316            mov y+3, #high(tone_ma3b / 0x10000) 
1163 120215     316            lcall div32
1166            316   ; compute value for reload
1166            316   ; reload rate = CLK/freq
1166 753400     316            mov y+0, #low (CLK % 0x10000) 
1169 753580     316            mov y+1, #high(CLK % 0x10000) 
116C 753651     316            mov y+2, #low (CLK / 0x10000) 
116F 753701     316            mov y+3, #high(CLK / 0x10000) 
1172 12028B     316            lcall xchg_xy
1175            316            
1175 120215     316            lcall div32
1178            316            
1178            316   ; reload value = 65536-x
1178 753400     316            mov y+0, #low (65536 % 0x10000) 
117B 753500     316            mov y+1, #high(65536 % 0x10000) 
117E 753601     316            mov y+2, #low (65536 / 0x10000) 
1181 753700     316            mov y+3, #high(65536 / 0x10000) 
1184 12028B     316            lcall xchg_xy
1187 1200F4     316            lcall sub32
118A            316   ; x now contains the reload value
118A            316   ;debug_BCD
118A 8530F2     316            mov RL0, x+0
118D 8531F4     316            mov RH0, x+1
1190            316            
1190 D28C       316            setb TR0
1192            316            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
1192 7A02       316            mov R2, #2
1194 12038E     316            lcall Play_Note_Delay
1197 C28C       316            clr TR0
1199 C002       316            push AR2
119B 7A0A       316            mov R2, #10
119D 1202AF     316            lcall ?Wait_Milli_Seconds
11A0 D002       316            pop AR2
11A2 D002       316            pop AR2
11A4            317            ; Compute the reload value given the base frequency and interval ratio codes
11A4            317   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
11A4            317   ;Calc_Interval:
11A4            317   ; Freq0 loaded (fundamental frequency)
11A4 C002       317   push AR2
11A6 753017     317            mov x+0, #low (key_C6 % 0x10000) 
11A9 753104     317            mov x+1, #high(key_C6 % 0x10000) 
11AC 753200     317            mov x+2, #low (key_C6 / 0x10000) 
11AF 753300     317            mov x+3, #high(key_C6 / 0x10000)  
11B2            317   ; Load upper ratio
11B2 753401     317            mov y+0, #low (tone_p1a % 0x10000) 
11B5 753500     317            mov y+1, #high(tone_p1a % 0x10000) 
11B8 753600     317            mov y+2, #low (tone_p1a / 0x10000) 
11BB 753700     317            mov y+3, #high(tone_p1a / 0x10000) 
11BE 120188     317            lcall mul32
11C1            317            
11C1            317   ; Load lower ratio
11C1 753401     317            mov y+0, #low (tone_p1b % 0x10000) 
11C4 753500     317            mov y+1, #high(tone_p1b % 0x10000) 
11C7 753600     317            mov y+2, #low (tone_p1b / 0x10000) 
11CA 753700     317            mov y+3, #high(tone_p1b / 0x10000) 
11CD 120215     317            lcall div32
11D0            317   ; compute value for reload
11D0            317   ; reload rate = CLK/freq
11D0 753400     317            mov y+0, #low (CLK % 0x10000) 
11D3 753580     317            mov y+1, #high(CLK % 0x10000) 
11D6 753651     317            mov y+2, #low (CLK / 0x10000) 
11D9 753701     317            mov y+3, #high(CLK / 0x10000) 
11DC 12028B     317            lcall xchg_xy
11DF            317            
11DF 120215     317            lcall div32
11E2            317            
11E2            317   ; reload value = 65536-x
11E2 753400     317            mov y+0, #low (65536 % 0x10000) 
11E5 753500     317            mov y+1, #high(65536 % 0x10000) 
11E8 753601     317            mov y+2, #low (65536 / 0x10000) 
11EB 753700     317            mov y+3, #high(65536 / 0x10000) 
11EE 12028B     317            lcall xchg_xy
11F1 1200F4     317            lcall sub32
11F4            317   ; x now contains the reload value
11F4            317   ;debug_BCD
11F4 8530F2     317            mov RL0, x+0
11F7 8531F4     317            mov RH0, x+1
11FA            317            
11FA D28C       317            setb TR0
11FC            317            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
11FC 7A02       317            mov R2, #2
11FE 12038E     317            lcall Play_Note_Delay
1201 C28C       317            clr TR0
1203 C002       317            push AR2
1205 7A0A       317            mov R2, #10
1207 1202AF     317            lcall ?Wait_Milli_Seconds
120A D002       317            pop AR2
120C D002       317            pop AR2
120E            318            ; Compute the reload value given the base frequency and interval ratio codes
120E            318   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
120E            318   ;Calc_Interval:
120E            318   ; Freq0 loaded (fundamental frequency)
120E C002       318   push AR2
1210 753017     318            mov x+0, #low (key_C6 % 0x10000) 
1213 753104     318            mov x+1, #high(key_C6 % 0x10000) 
1216 753200     318            mov x+2, #low (key_C6 / 0x10000) 
1219 753300     318            mov x+3, #high(key_C6 / 0x10000)  
121C            318   ; Load upper ratio
121C 753409     318            mov y+0, #low (tone_ma2a % 0x10000) 
121F 753500     318            mov y+1, #high(tone_ma2a % 0x10000) 
1222 753600     318            mov y+2, #low (tone_ma2a / 0x10000) 
1225 753700     318            mov y+3, #high(tone_ma2a / 0x10000) 
1228 120188     318            lcall mul32
122B            318            
122B            318   ; Load lower ratio
122B 753408     318            mov y+0, #low (tone_ma2b % 0x10000) 
122E 753500     318            mov y+1, #high(tone_ma2b % 0x10000) 
1231 753600     318            mov y+2, #low (tone_ma2b / 0x10000) 
1234 753700     318            mov y+3, #high(tone_ma2b / 0x10000) 
1237 120215     318            lcall div32
123A            318   ; compute value for reload
123A            318   ; reload rate = CLK/freq
123A 753400     318            mov y+0, #low (CLK % 0x10000) 
123D 753580     318            mov y+1, #high(CLK % 0x10000) 
1240 753651     318            mov y+2, #low (CLK / 0x10000) 
1243 753701     318            mov y+3, #high(CLK / 0x10000) 
1246 12028B     318            lcall xchg_xy
1249            318            
1249 120215     318            lcall div32
124C            318            
124C            318   ; reload value = 65536-x
124C 753400     318            mov y+0, #low (65536 % 0x10000) 
124F 753500     318            mov y+1, #high(65536 % 0x10000) 
1252 753601     318            mov y+2, #low (65536 / 0x10000) 
1255 753700     318            mov y+3, #high(65536 / 0x10000) 
1258 12028B     318            lcall xchg_xy
125B 1200F4     318            lcall sub32
125E            318   ; x now contains the reload value
125E            318   ;debug_BCD
125E 8530F2     318            mov RL0, x+0
1261 8531F4     318            mov RH0, x+1
1264            318            
1264 D28C       318            setb TR0
1266            318            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
1266 7A02       318            mov R2, #2
1268 12038E     318            lcall Play_Note_Delay
126B C28C       318            clr TR0
126D C002       318            push AR2
126F 7A0A       318            mov R2, #10
1271 1202AF     318            lcall ?Wait_Milli_Seconds
1274 D002       318            pop AR2
1276 D002       318            pop AR2
1278            319            ; Compute the reload value given the base frequency and interval ratio codes
1278            319   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
1278            319   ;Calc_Interval:
1278            319   ; Freq0 loaded (fundamental frequency)
1278 C002       319   push AR2
127A 753017     319            mov x+0, #low (key_C6 % 0x10000) 
127D 753104     319            mov x+1, #high(key_C6 % 0x10000) 
1280 753200     319            mov x+2, #low (key_C6 / 0x10000) 
1283 753300     319            mov x+3, #high(key_C6 / 0x10000)  
1286            319   ; Load upper ratio
1286 753405     319            mov y+0, #low (tone_ma3a % 0x10000) 
1289 753500     319            mov y+1, #high(tone_ma3a % 0x10000) 
128C 753600     319            mov y+2, #low (tone_ma3a / 0x10000) 
128F 753700     319            mov y+3, #high(tone_ma3a / 0x10000) 
1292 120188     319            lcall mul32
1295            319            
1295            319   ; Load lower ratio
1295 753404     319            mov y+0, #low (tone_ma3b % 0x10000) 
1298 753500     319            mov y+1, #high(tone_ma3b % 0x10000) 
129B 753600     319            mov y+2, #low (tone_ma3b / 0x10000) 
129E 753700     319            mov y+3, #high(tone_ma3b / 0x10000) 
12A1 120215     319            lcall div32
12A4            319   ; compute value for reload
12A4            319   ; reload rate = CLK/freq
12A4 753400     319            mov y+0, #low (CLK % 0x10000) 
12A7 753580     319            mov y+1, #high(CLK % 0x10000) 
12AA 753651     319            mov y+2, #low (CLK / 0x10000) 
12AD 753701     319            mov y+3, #high(CLK / 0x10000) 
12B0 12028B     319            lcall xchg_xy
12B3            319            
12B3 120215     319            lcall div32
12B6            319            
12B6            319   ; reload value = 65536-x
12B6 753400     319            mov y+0, #low (65536 % 0x10000) 
12B9 753500     319            mov y+1, #high(65536 % 0x10000) 
12BC 753601     319            mov y+2, #low (65536 / 0x10000) 
12BF 753700     319            mov y+3, #high(65536 / 0x10000) 
12C2 12028B     319            lcall xchg_xy
12C5 1200F4     319            lcall sub32
12C8            319   ; x now contains the reload value
12C8            319   ;debug_BCD
12C8 8530F2     319            mov RL0, x+0
12CB 8531F4     319            mov RH0, x+1
12CE            319            
12CE D28C       319            setb TR0
12D0            319            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
12D0 7A04       319            mov R2, #4
12D2 12038E     319            lcall Play_Note_Delay
12D5 C28C       319            clr TR0
12D7 C002       319            push AR2
12D9 7A0A       319            mov R2, #10
12DB 1202AF     319            lcall ?Wait_Milli_Seconds
12DE D002       319            pop AR2
12E0 D002       319            pop AR2
12E2            320            ; Compute the reload value given the base frequency and interval ratio codes
12E2            320   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
12E2            320   ;Calc_Interval:
12E2            320   ; Freq0 loaded (fundamental frequency)
12E2 C002       320   push AR2
12E4 753017     320            mov x+0, #low (key_C6 % 0x10000) 
12E7 753104     320            mov x+1, #high(key_C6 % 0x10000) 
12EA 753200     320            mov x+2, #low (key_C6 / 0x10000) 
12ED 753300     320            mov x+3, #high(key_C6 / 0x10000)  
12F0            320   ; Load upper ratio
12F0 75340F     320            mov y+0, #low (tone_mi2b % 0x10000) 
12F3 753500     320            mov y+1, #high(tone_mi2b % 0x10000) 
12F6 753600     320            mov y+2, #low (tone_mi2b / 0x10000) 
12F9 753700     320            mov y+3, #high(tone_mi2b / 0x10000) 
12FC 120188     320            lcall mul32
12FF            320            
12FF            320   ; Load lower ratio
12FF 753410     320            mov y+0, #low (tone_mi2a % 0x10000) 
1302 753500     320            mov y+1, #high(tone_mi2a % 0x10000) 
1305 753600     320            mov y+2, #low (tone_mi2a / 0x10000) 
1308 753700     320            mov y+3, #high(tone_mi2a / 0x10000) 
130B 120215     320            lcall div32
130E            320   ; compute value for reload
130E            320   ; reload rate = CLK/freq
130E 753400     320            mov y+0, #low (CLK % 0x10000) 
1311 753580     320            mov y+1, #high(CLK % 0x10000) 
1314 753651     320            mov y+2, #low (CLK / 0x10000) 
1317 753701     320            mov y+3, #high(CLK / 0x10000) 
131A 12028B     320            lcall xchg_xy
131D            320            
131D 120215     320            lcall div32
1320            320            
1320            320   ; reload value = 65536-x
1320 753400     320            mov y+0, #low (65536 % 0x10000) 
1323 753500     320            mov y+1, #high(65536 % 0x10000) 
1326 753601     320            mov y+2, #low (65536 / 0x10000) 
1329 753700     320            mov y+3, #high(65536 / 0x10000) 
132C 12028B     320            lcall xchg_xy
132F 1200F4     320            lcall sub32
1332            320   ; x now contains the reload value
1332            320   ;debug_BCD
1332 8530F2     320            mov RL0, x+0
1335 8531F4     320            mov RH0, x+1
1338            320            
1338 D28C       320            setb TR0
133A            320            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
133A 7A02       320            mov R2, #2
133C 12038E     320            lcall Play_Note_Delay
133F C28C       320            clr TR0
1341 C002       320            push AR2
1343 7A0A       320            mov R2, #10
1345 1202AF     320            lcall ?Wait_Milli_Seconds
1348 D002       320            pop AR2
134A D002       320            pop AR2
134C            321            ; Compute the reload value given the base frequency and interval ratio codes
134C            321   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
134C            321   ;Calc_Interval:
134C            321   ; Freq0 loaded (fundamental frequency)
134C C002       321   push AR2
134E 753017     321            mov x+0, #low (key_C6 % 0x10000) 
1351 753104     321            mov x+1, #high(key_C6 % 0x10000) 
1354 753200     321            mov x+2, #low (key_C6 / 0x10000) 
1357 753300     321            mov x+3, #high(key_C6 / 0x10000)  
135A            321   ; Load upper ratio
135A 753409     321            mov y+0, #low (tone_ma2a % 0x10000) 
135D 753500     321            mov y+1, #high(tone_ma2a % 0x10000) 
1360 753600     321            mov y+2, #low (tone_ma2a / 0x10000) 
1363 753700     321            mov y+3, #high(tone_ma2a / 0x10000) 
1366 120188     321            lcall mul32
1369            321            
1369            321   ; Load lower ratio
1369 753408     321            mov y+0, #low (tone_ma2b % 0x10000) 
136C 753500     321            mov y+1, #high(tone_ma2b % 0x10000) 
136F 753600     321            mov y+2, #low (tone_ma2b / 0x10000) 
1372 753700     321            mov y+3, #high(tone_ma2b / 0x10000) 
1375 120215     321            lcall div32
1378            321   ; compute value for reload
1378            321   ; reload rate = CLK/freq
1378 753400     321            mov y+0, #low (CLK % 0x10000) 
137B 753580     321            mov y+1, #high(CLK % 0x10000) 
137E 753651     321            mov y+2, #low (CLK / 0x10000) 
1381 753701     321            mov y+3, #high(CLK / 0x10000) 
1384 12028B     321            lcall xchg_xy
1387            321            
1387 120215     321            lcall div32
138A            321            
138A            321   ; reload value = 65536-x
138A 753400     321            mov y+0, #low (65536 % 0x10000) 
138D 753500     321            mov y+1, #high(65536 % 0x10000) 
1390 753601     321            mov y+2, #low (65536 / 0x10000) 
1393 753700     321            mov y+3, #high(65536 / 0x10000) 
1396 12028B     321            lcall xchg_xy
1399 1200F4     321            lcall sub32
139C            321   ; x now contains the reload value
139C            321   ;debug_BCD
139C 8530F2     321            mov RL0, x+0
139F 8531F4     321            mov RH0, x+1
13A2            321            
13A2 D28C       321            setb TR0
13A4            321            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
13A4 7A04       321            mov R2, #4
13A6 12038E     321            lcall Play_Note_Delay
13A9 C28C       321            clr TR0
13AB C002       321            push AR2
13AD 7A0A       321            mov R2, #10
13AF 1202AF     321            lcall ?Wait_Milli_Seconds
13B2 D002       321            pop AR2
13B4 D002       321            pop AR2
13B6            322            ; Compute the reload value given the base frequency and interval ratio codes
13B6            322   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
13B6            322   ;Calc_Interval:
13B6            322   ; Freq0 loaded (fundamental frequency)
13B6 C002       322   push AR2
13B8 753017     322            mov x+0, #low (key_C6 % 0x10000) 
13BB 753104     322            mov x+1, #high(key_C6 % 0x10000) 
13BE 753200     322            mov x+2, #low (key_C6 / 0x10000) 
13C1 753300     322            mov x+3, #high(key_C6 / 0x10000)  
13C4            322   ; Load upper ratio
13C4 753401     322            mov y+0, #low (tone_p1a % 0x10000) 
13C7 753500     322            mov y+1, #high(tone_p1a % 0x10000) 
13CA 753600     322            mov y+2, #low (tone_p1a / 0x10000) 
13CD 753700     322            mov y+3, #high(tone_p1a / 0x10000) 
13D0 120188     322            lcall mul32
13D3            322            
13D3            322   ; Load lower ratio
13D3 753401     322            mov y+0, #low (tone_p1b % 0x10000) 
13D6 753500     322            mov y+1, #high(tone_p1b % 0x10000) 
13D9 753600     322            mov y+2, #low (tone_p1b / 0x10000) 
13DC 753700     322            mov y+3, #high(tone_p1b / 0x10000) 
13DF 120215     322            lcall div32
13E2            322   ; compute value for reload
13E2            322   ; reload rate = CLK/freq
13E2 753400     322            mov y+0, #low (CLK % 0x10000) 
13E5 753580     322            mov y+1, #high(CLK % 0x10000) 
13E8 753651     322            mov y+2, #low (CLK / 0x10000) 
13EB 753701     322            mov y+3, #high(CLK / 0x10000) 
13EE 12028B     322            lcall xchg_xy
13F1            322            
13F1 120215     322            lcall div32
13F4            322            
13F4            322   ; reload value = 65536-x
13F4 753400     322            mov y+0, #low (65536 % 0x10000) 
13F7 753500     322            mov y+1, #high(65536 % 0x10000) 
13FA 753601     322            mov y+2, #low (65536 / 0x10000) 
13FD 753700     322            mov y+3, #high(65536 / 0x10000) 
1400 12028B     322            lcall xchg_xy
1403 1200F4     322            lcall sub32
1406            322   ; x now contains the reload value
1406            322   ;debug_BCD
1406 8530F2     322            mov RL0, x+0
1409 8531F4     322            mov RH0, x+1
140C            322            
140C D28C       322            setb TR0
140E            322            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
140E 7A0C       322            mov R2, #12
1410 12038E     322            lcall Play_Note_Delay
1413 C28C       322            clr TR0
1415 C002       322            push AR2
1417 7A0A       322            mov R2, #10
1419 1202AF     322            lcall ?Wait_Milli_Seconds
141C D002       322            pop AR2
141E D002       322            pop AR2
1420            323   
1420            324            ; Compute the reload value given the base frequency and interval ratio codes
1420            324   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
1420            324   ;Calc_Interval:
1420            324   ; Freq0 loaded (fundamental frequency)
1420 C002       324   push AR2
1422 75300B     324            mov x+0, #low (key_C5 % 0x10000) 
1425 753102     324            mov x+1, #high(key_C5 % 0x10000) 
1428 753200     324            mov x+2, #low (key_C5 / 0x10000) 
142B 753300     324            mov x+3, #high(key_C5 / 0x10000)  
142E            324   ; Load upper ratio
142E 753409     324            mov y+0, #low (tone_ma2a % 0x10000) 
1431 753500     324            mov y+1, #high(tone_ma2a % 0x10000) 
1434 753600     324            mov y+2, #low (tone_ma2a / 0x10000) 
1437 753700     324            mov y+3, #high(tone_ma2a / 0x10000) 
143A 120188     324            lcall mul32
143D            324            
143D            324   ; Load lower ratio
143D 753408     324            mov y+0, #low (tone_ma2b % 0x10000) 
1440 753500     324            mov y+1, #high(tone_ma2b % 0x10000) 
1443 753600     324            mov y+2, #low (tone_ma2b / 0x10000) 
1446 753700     324            mov y+3, #high(tone_ma2b / 0x10000) 
1449 120215     324            lcall div32
144C            324   ; compute value for reload
144C            324   ; reload rate = CLK/freq
144C 753400     324            mov y+0, #low (CLK % 0x10000) 
144F 753580     324            mov y+1, #high(CLK % 0x10000) 
1452 753651     324            mov y+2, #low (CLK / 0x10000) 
1455 753701     324            mov y+3, #high(CLK / 0x10000) 
1458 12028B     324            lcall xchg_xy
145B            324            
145B 120215     324            lcall div32
145E            324            
145E            324   ; reload value = 65536-x
145E 753400     324            mov y+0, #low (65536 % 0x10000) 
1461 753500     324            mov y+1, #high(65536 % 0x10000) 
1464 753601     324            mov y+2, #low (65536 / 0x10000) 
1467 753700     324            mov y+3, #high(65536 / 0x10000) 
146A 12028B     324            lcall xchg_xy
146D 1200F4     324            lcall sub32
1470            324   ; x now contains the reload value
1470            324   ;debug_BCD
1470 8530F2     324            mov RL0, x+0
1473 8531F4     324            mov RH0, x+1
1476            324            
1476 D28C       324            setb TR0
1478            324            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
1478 7A02       324            mov R2, #2
147A 12038E     324            lcall Play_Note_Delay
147D C28C       324            clr TR0
147F C002       324            push AR2
1481 7A0A       324            mov R2, #10
1483 1202AF     324            lcall ?Wait_Milli_Seconds
1486 D002       324            pop AR2
1488 D002       324            pop AR2
148A            325            ; Compute the reload value given the base frequency and interval ratio codes
148A            325   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
148A            325   ;Calc_Interval:
148A            325   ; Freq0 loaded (fundamental frequency)
148A C002       325   push AR2
148C 75300B     325            mov x+0, #low (key_C5 % 0x10000) 
148F 753102     325            mov x+1, #high(key_C5 % 0x10000) 
1492 753200     325            mov x+2, #low (key_C5 / 0x10000) 
1495 753300     325            mov x+3, #high(key_C5 / 0x10000)  
1498            325   ; Load upper ratio
1498 753406     325            mov y+0, #low (tone_mi3a % 0x10000) 
149B 753500     325            mov y+1, #high(tone_mi3a % 0x10000) 
149E 753600     325            mov y+2, #low (tone_mi3a / 0x10000) 
14A1 753700     325            mov y+3, #high(tone_mi3a / 0x10000) 
14A4 120188     325            lcall mul32
14A7            325            
14A7            325   ; Load lower ratio
14A7 753405     325            mov y+0, #low (tone_mi3b % 0x10000) 
14AA 753500     325            mov y+1, #high(tone_mi3b % 0x10000) 
14AD 753600     325            mov y+2, #low (tone_mi3b / 0x10000) 
14B0 753700     325            mov y+3, #high(tone_mi3b / 0x10000) 
14B3 120215     325            lcall div32
14B6            325   ; compute value for reload
14B6            325   ; reload rate = CLK/freq
14B6 753400     325            mov y+0, #low (CLK % 0x10000) 
14B9 753580     325            mov y+1, #high(CLK % 0x10000) 
14BC 753651     325            mov y+2, #low (CLK / 0x10000) 
14BF 753701     325            mov y+3, #high(CLK / 0x10000) 
14C2 12028B     325            lcall xchg_xy
14C5            325            
14C5 120215     325            lcall div32
14C8            325            
14C8            325   ; reload value = 65536-x
14C8 753400     325            mov y+0, #low (65536 % 0x10000) 
14CB 753500     325            mov y+1, #high(65536 % 0x10000) 
14CE 753601     325            mov y+2, #low (65536 / 0x10000) 
14D1 753700     325            mov y+3, #high(65536 / 0x10000) 
14D4 12028B     325            lcall xchg_xy
14D7 1200F4     325            lcall sub32
14DA            325   ; x now contains the reload value
14DA            325   ;debug_BCD
14DA 8530F2     325            mov RL0, x+0
14DD 8531F4     325            mov RH0, x+1
14E0            325            
14E0 D28C       325            setb TR0
14E2            325            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
14E2 7A02       325            mov R2, #2
14E4 12038E     325            lcall Play_Note_Delay
14E7 C28C       325            clr TR0
14E9 C002       325            push AR2
14EB 7A0A       325            mov R2, #10
14ED 1202AF     325            lcall ?Wait_Milli_Seconds
14F0 D002       325            pop AR2
14F2 D002       325            pop AR2
14F4            326            ; Compute the reload value given the base frequency and interval ratio codes
14F4            326   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
14F4            326   ;Calc_Interval:
14F4            326   ; Freq0 loaded (fundamental frequency)
14F4 C002       326   push AR2
14F6 75300B     326            mov x+0, #low (key_C5 % 0x10000) 
14F9 753102     326            mov x+1, #high(key_C5 % 0x10000) 
14FC 753200     326            mov x+2, #low (key_C5 / 0x10000) 
14FF 753300     326            mov x+3, #high(key_C5 / 0x10000)  
1502            326   ; Load upper ratio
1502 753405     326            mov y+0, #low (tone_ma3a % 0x10000) 
1505 753500     326            mov y+1, #high(tone_ma3a % 0x10000) 
1508 753600     326            mov y+2, #low (tone_ma3a / 0x10000) 
150B 753700     326            mov y+3, #high(tone_ma3a / 0x10000) 
150E 120188     326            lcall mul32
1511            326            
1511            326   ; Load lower ratio
1511 753404     326            mov y+0, #low (tone_ma3b % 0x10000) 
1514 753500     326            mov y+1, #high(tone_ma3b % 0x10000) 
1517 753600     326            mov y+2, #low (tone_ma3b / 0x10000) 
151A 753700     326            mov y+3, #high(tone_ma3b / 0x10000) 
151D 120215     326            lcall div32
1520            326   ; compute value for reload
1520            326   ; reload rate = CLK/freq
1520 753400     326            mov y+0, #low (CLK % 0x10000) 
1523 753580     326            mov y+1, #high(CLK % 0x10000) 
1526 753651     326            mov y+2, #low (CLK / 0x10000) 
1529 753701     326            mov y+3, #high(CLK / 0x10000) 
152C 12028B     326            lcall xchg_xy
152F            326            
152F 120215     326            lcall div32
1532            326            
1532            326   ; reload value = 65536-x
1532 753400     326            mov y+0, #low (65536 % 0x10000) 
1535 753500     326            mov y+1, #high(65536 % 0x10000) 
1538 753601     326            mov y+2, #low (65536 / 0x10000) 
153B 753700     326            mov y+3, #high(65536 / 0x10000) 
153E 12028B     326            lcall xchg_xy
1541 1200F4     326            lcall sub32
1544            326   ; x now contains the reload value
1544            326   ;debug_BCD
1544 8530F2     326            mov RL0, x+0
1547 8531F4     326            mov RH0, x+1
154A            326            
154A D28C       326            setb TR0
154C            326            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
154C 7A02       326            mov R2, #2
154E 12038E     326            lcall Play_Note_Delay
1551 C28C       326            clr TR0
1553 C002       326            push AR2
1555 7A0A       326            mov R2, #10
1557 1202AF     326            lcall ?Wait_Milli_Seconds
155A D002       326            pop AR2
155C D002       326            pop AR2
155E            327            ; Compute the reload value given the base frequency and interval ratio codes
155E            327   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
155E            327   ;Calc_Interval:
155E            327   ; Freq0 loaded (fundamental frequency)
155E C002       327   push AR2
1560 75300B     327            mov x+0, #low (key_C5 % 0x10000) 
1563 753102     327            mov x+1, #high(key_C5 % 0x10000) 
1566 753200     327            mov x+2, #low (key_C5 / 0x10000) 
1569 753300     327            mov x+3, #high(key_C5 / 0x10000)  
156C            327   ; Load upper ratio
156C 753402     327            mov y+0, #low (tone_p8a % 0x10000) 
156F 753500     327            mov y+1, #high(tone_p8a % 0x10000) 
1572 753600     327            mov y+2, #low (tone_p8a / 0x10000) 
1575 753700     327            mov y+3, #high(tone_p8a / 0x10000) 
1578 120188     327            lcall mul32
157B            327            
157B            327   ; Load lower ratio
157B 753401     327            mov y+0, #low (tone_p8b % 0x10000) 
157E 753500     327            mov y+1, #high(tone_p8b % 0x10000) 
1581 753600     327            mov y+2, #low (tone_p8b / 0x10000) 
1584 753700     327            mov y+3, #high(tone_p8b / 0x10000) 
1587 120215     327            lcall div32
158A            327   ; compute value for reload
158A            327   ; reload rate = CLK/freq
158A 753400     327            mov y+0, #low (CLK % 0x10000) 
158D 753580     327            mov y+1, #high(CLK % 0x10000) 
1590 753651     327            mov y+2, #low (CLK / 0x10000) 
1593 753701     327            mov y+3, #high(CLK / 0x10000) 
1596 12028B     327            lcall xchg_xy
1599            327            
1599 120215     327            lcall div32
159C            327            
159C            327   ; reload value = 65536-x
159C 753400     327            mov y+0, #low (65536 % 0x10000) 
159F 753500     327            mov y+1, #high(65536 % 0x10000) 
15A2 753601     327            mov y+2, #low (65536 / 0x10000) 
15A5 753700     327            mov y+3, #high(65536 / 0x10000) 
15A8 12028B     327            lcall xchg_xy
15AB 1200F4     327            lcall sub32
15AE            327   ; x now contains the reload value
15AE            327   ;debug_BCD
15AE 8530F2     327            mov RL0, x+0
15B1 8531F4     327            mov RH0, x+1
15B4            327            
15B4 D28C       327            setb TR0
15B6            327            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
15B6 7A04       327            mov R2, #4
15B8 12038E     327            lcall Play_Note_Delay
15BB C28C       327            clr TR0
15BD C002       327            push AR2
15BF 7A0A       327            mov R2, #10
15C1 1202AF     327            lcall ?Wait_Milli_Seconds
15C4 D002       327            pop AR2
15C6 D002       327            pop AR2
15C8            328            ; Compute the reload value given the base frequency and interval ratio codes
15C8            328   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
15C8            328   ;Calc_Interval:
15C8            328   ; Freq0 loaded (fundamental frequency)
15C8 C002       328   push AR2
15CA 75300B     328            mov x+0, #low (key_C5 % 0x10000) 
15CD 753102     328            mov x+1, #high(key_C5 % 0x10000) 
15D0 753200     328            mov x+2, #low (key_C5 / 0x10000) 
15D3 753300     328            mov x+3, #high(key_C5 / 0x10000)  
15D6            328   ; Load upper ratio
15D6 753405     328            mov y+0, #low (tone_ma3a % 0x10000) 
15D9 753500     328            mov y+1, #high(tone_ma3a % 0x10000) 
15DC 753600     328            mov y+2, #low (tone_ma3a / 0x10000) 
15DF 753700     328            mov y+3, #high(tone_ma3a / 0x10000) 
15E2 120188     328            lcall mul32
15E5            328            
15E5            328   ; Load lower ratio
15E5 753404     328            mov y+0, #low (tone_ma3b % 0x10000) 
15E8 753500     328            mov y+1, #high(tone_ma3b % 0x10000) 
15EB 753600     328            mov y+2, #low (tone_ma3b / 0x10000) 
15EE 753700     328            mov y+3, #high(tone_ma3b / 0x10000) 
15F1 120215     328            lcall div32
15F4            328   ; compute value for reload
15F4            328   ; reload rate = CLK/freq
15F4 753400     328            mov y+0, #low (CLK % 0x10000) 
15F7 753580     328            mov y+1, #high(CLK % 0x10000) 
15FA 753651     328            mov y+2, #low (CLK / 0x10000) 
15FD 753701     328            mov y+3, #high(CLK / 0x10000) 
1600 12028B     328            lcall xchg_xy
1603            328            
1603 120215     328            lcall div32
1606            328            
1606            328   ; reload value = 65536-x
1606 753400     328            mov y+0, #low (65536 % 0x10000) 
1609 753500     328            mov y+1, #high(65536 % 0x10000) 
160C 753601     328            mov y+2, #low (65536 / 0x10000) 
160F 753700     328            mov y+3, #high(65536 / 0x10000) 
1612 12028B     328            lcall xchg_xy
1615 1200F4     328            lcall sub32
1618            328   ; x now contains the reload value
1618            328   ;debug_BCD
1618 8530F2     328            mov RL0, x+0
161B 8531F4     328            mov RH0, x+1
161E            328            
161E D28C       328            setb TR0
1620            328            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
1620 7A02       328            mov R2, #2
1622 12038E     328            lcall Play_Note_Delay
1625 C28C       328            clr TR0
1627 C002       328            push AR2
1629 7A0A       328            mov R2, #10
162B 1202AF     328            lcall ?Wait_Milli_Seconds
162E D002       328            pop AR2
1630 D002       328            pop AR2
1632            329            ; Compute the reload value given the base frequency and interval ratio codes
1632            329   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
1632            329   ;Calc_Interval:
1632            329   ; Freq0 loaded (fundamental frequency)
1632 C002       329   push AR2
1634 75300B     329            mov x+0, #low (key_C5 % 0x10000) 
1637 753102     329            mov x+1, #high(key_C5 % 0x10000) 
163A 753200     329            mov x+2, #low (key_C5 / 0x10000) 
163D 753300     329            mov x+3, #high(key_C5 / 0x10000)  
1640            329   ; Load upper ratio
1640 753402     329            mov y+0, #low (tone_p8a % 0x10000) 
1643 753500     329            mov y+1, #high(tone_p8a % 0x10000) 
1646 753600     329            mov y+2, #low (tone_p8a / 0x10000) 
1649 753700     329            mov y+3, #high(tone_p8a / 0x10000) 
164C 120188     329            lcall mul32
164F            329            
164F            329   ; Load lower ratio
164F 753401     329            mov y+0, #low (tone_p8b % 0x10000) 
1652 753500     329            mov y+1, #high(tone_p8b % 0x10000) 
1655 753600     329            mov y+2, #low (tone_p8b / 0x10000) 
1658 753700     329            mov y+3, #high(tone_p8b / 0x10000) 
165B 120215     329            lcall div32
165E            329   ; compute value for reload
165E            329   ; reload rate = CLK/freq
165E 753400     329            mov y+0, #low (CLK % 0x10000) 
1661 753580     329            mov y+1, #high(CLK % 0x10000) 
1664 753651     329            mov y+2, #low (CLK / 0x10000) 
1667 753701     329            mov y+3, #high(CLK / 0x10000) 
166A 12028B     329            lcall xchg_xy
166D            329            
166D 120215     329            lcall div32
1670            329            
1670            329   ; reload value = 65536-x
1670 753400     329            mov y+0, #low (65536 % 0x10000) 
1673 753500     329            mov y+1, #high(65536 % 0x10000) 
1676 753601     329            mov y+2, #low (65536 / 0x10000) 
1679 753700     329            mov y+3, #high(65536 / 0x10000) 
167C 12028B     329            lcall xchg_xy
167F 1200F4     329            lcall sub32
1682            329   ; x now contains the reload value
1682            329   ;debug_BCD
1682 8530F2     329            mov RL0, x+0
1685 8531F4     329            mov RH0, x+1
1688            329            
1688 D28C       329            setb TR0
168A            329            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
168A 7A04       329            mov R2, #4
168C 12038E     329            lcall Play_Note_Delay
168F C28C       329            clr TR0
1691 C002       329            push AR2
1693 7A0A       329            mov R2, #10
1695 1202AF     329            lcall ?Wait_Milli_Seconds
1698 D002       329            pop AR2
169A D002       329            pop AR2
169C            330            ; Compute the reload value given the base frequency and interval ratio codes
169C            330   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
169C            330   ;Calc_Interval:
169C            330   ; Freq0 loaded (fundamental frequency)
169C C002       330   push AR2
169E 75300B     330            mov x+0, #low (key_C5 % 0x10000) 
16A1 753102     330            mov x+1, #high(key_C5 % 0x10000) 
16A4 753200     330            mov x+2, #low (key_C5 / 0x10000) 
16A7 753300     330            mov x+3, #high(key_C5 / 0x10000)  
16AA            330   ; Load upper ratio
16AA 753405     330            mov y+0, #low (tone_ma3a % 0x10000) 
16AD 753500     330            mov y+1, #high(tone_ma3a % 0x10000) 
16B0 753600     330            mov y+2, #low (tone_ma3a / 0x10000) 
16B3 753700     330            mov y+3, #high(tone_ma3a / 0x10000) 
16B6 120188     330            lcall mul32
16B9            330            
16B9            330   ; Load lower ratio
16B9 753404     330            mov y+0, #low (tone_ma3b % 0x10000) 
16BC 753500     330            mov y+1, #high(tone_ma3b % 0x10000) 
16BF 753600     330            mov y+2, #low (tone_ma3b / 0x10000) 
16C2 753700     330            mov y+3, #high(tone_ma3b / 0x10000) 
16C5 120215     330            lcall div32
16C8            330   ; compute value for reload
16C8            330   ; reload rate = CLK/freq
16C8 753400     330            mov y+0, #low (CLK % 0x10000) 
16CB 753580     330            mov y+1, #high(CLK % 0x10000) 
16CE 753651     330            mov y+2, #low (CLK / 0x10000) 
16D1 753701     330            mov y+3, #high(CLK / 0x10000) 
16D4 12028B     330            lcall xchg_xy
16D7            330            
16D7 120215     330            lcall div32
16DA            330            
16DA            330   ; reload value = 65536-x
16DA 753400     330            mov y+0, #low (65536 % 0x10000) 
16DD 753500     330            mov y+1, #high(65536 % 0x10000) 
16E0 753601     330            mov y+2, #low (65536 / 0x10000) 
16E3 753700     330            mov y+3, #high(65536 / 0x10000) 
16E6 12028B     330            lcall xchg_xy
16E9 1200F4     330            lcall sub32
16EC            330   ; x now contains the reload value
16EC            330   ;debug_BCD
16EC 8530F2     330            mov RL0, x+0
16EF 8531F4     330            mov RH0, x+1
16F2            330            
16F2 D28C       330            setb TR0
16F4            330            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
16F4 7A02       330            mov R2, #2
16F6 12038E     330            lcall Play_Note_Delay
16F9 C28C       330            clr TR0
16FB C002       330            push AR2
16FD 7A0A       330            mov R2, #10
16FF 1202AF     330            lcall ?Wait_Milli_Seconds
1702 D002       330            pop AR2
1704 D002       330            pop AR2
1706            331            ; Compute the reload value given the base frequency and interval ratio codes
1706            331   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
1706            331   ;Calc_Interval:
1706            331   ; Freq0 loaded (fundamental frequency)
1706 C002       331   push AR2
1708 75300B     331            mov x+0, #low (key_C5 % 0x10000) 
170B 753102     331            mov x+1, #high(key_C5 % 0x10000) 
170E 753200     331            mov x+2, #low (key_C5 / 0x10000) 
1711 753300     331            mov x+3, #high(key_C5 / 0x10000)  
1714            331   ; Load upper ratio
1714 753402     331            mov y+0, #low (tone_p8a % 0x10000) 
1717 753500     331            mov y+1, #high(tone_p8a % 0x10000) 
171A 753600     331            mov y+2, #low (tone_p8a / 0x10000) 
171D 753700     331            mov y+3, #high(tone_p8a / 0x10000) 
1720 120188     331            lcall mul32
1723            331            
1723            331   ; Load lower ratio
1723 753401     331            mov y+0, #low (tone_p8b % 0x10000) 
1726 753500     331            mov y+1, #high(tone_p8b % 0x10000) 
1729 753600     331            mov y+2, #low (tone_p8b / 0x10000) 
172C 753700     331            mov y+3, #high(tone_p8b / 0x10000) 
172F 120215     331            lcall div32
1732            331   ; compute value for reload
1732            331   ; reload rate = CLK/freq
1732 753400     331            mov y+0, #low (CLK % 0x10000) 
1735 753580     331            mov y+1, #high(CLK % 0x10000) 
1738 753651     331            mov y+2, #low (CLK / 0x10000) 
173B 753701     331            mov y+3, #high(CLK / 0x10000) 
173E 12028B     331            lcall xchg_xy
1741            331            
1741 120215     331            lcall div32
1744            331            
1744            331   ; reload value = 65536-x
1744 753400     331            mov y+0, #low (65536 % 0x10000) 
1747 753500     331            mov y+1, #high(65536 % 0x10000) 
174A 753601     331            mov y+2, #low (65536 / 0x10000) 
174D 753700     331            mov y+3, #high(65536 / 0x10000) 
1750 12028B     331            lcall xchg_xy
1753 1200F4     331            lcall sub32
1756            331   ; x now contains the reload value
1756            331   ;debug_BCD
1756 8530F2     331            mov RL0, x+0
1759 8531F4     331            mov RH0, x+1
175C            331            
175C D28C       331            setb TR0
175E            331            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
175E 7A0C       331            mov R2, #12
1760 12038E     331            lcall Play_Note_Delay
1763 C28C       331            clr TR0
1765 C002       331            push AR2
1767 7A0A       331            mov R2, #10
1769 1202AF     331            lcall ?Wait_Milli_Seconds
176C D002       331            pop AR2
176E D002       331            pop AR2
1770            332   
1770            333            ; Compute the reload value given the base frequency and interval ratio codes
1770            333   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
1770            333   ;Calc_Interval:
1770            333   ; Freq0 loaded (fundamental frequency)
1770 C002       333   push AR2
1772 75300B     333            mov x+0, #low (key_C5 % 0x10000) 
1775 753102     333            mov x+1, #high(key_C5 % 0x10000) 
1778 753200     333            mov x+2, #low (key_C5 / 0x10000) 
177B 753300     333            mov x+3, #high(key_C5 / 0x10000)  
177E            333   ; Load upper ratio
177E 753405     333            mov y+0, #low (tone_ma6a % 0x10000) 
1781 753500     333            mov y+1, #high(tone_ma6a % 0x10000) 
1784 753600     333            mov y+2, #low (tone_ma6a / 0x10000) 
1787 753700     333            mov y+3, #high(tone_ma6a / 0x10000) 
178A 120188     333            lcall mul32
178D            333            
178D            333   ; Load lower ratio
178D 753403     333            mov y+0, #low (tone_ma6b % 0x10000) 
1790 753500     333            mov y+1, #high(tone_ma6b % 0x10000) 
1793 753600     333            mov y+2, #low (tone_ma6b / 0x10000) 
1796 753700     333            mov y+3, #high(tone_ma6b / 0x10000) 
1799 120215     333            lcall div32
179C            333   ; compute value for reload
179C            333   ; reload rate = CLK/freq
179C 753400     333            mov y+0, #low (CLK % 0x10000) 
179F 753580     333            mov y+1, #high(CLK % 0x10000) 
17A2 753651     333            mov y+2, #low (CLK / 0x10000) 
17A5 753701     333            mov y+3, #high(CLK / 0x10000) 
17A8 12028B     333            lcall xchg_xy
17AB            333            
17AB 120215     333            lcall div32
17AE            333            
17AE            333   ; reload value = 65536-x
17AE 753400     333            mov y+0, #low (65536 % 0x10000) 
17B1 753500     333            mov y+1, #high(65536 % 0x10000) 
17B4 753601     333            mov y+2, #low (65536 / 0x10000) 
17B7 753700     333            mov y+3, #high(65536 / 0x10000) 
17BA 12028B     333            lcall xchg_xy
17BD 1200F4     333            lcall sub32
17C0            333   ; x now contains the reload value
17C0            333   ;debug_BCD
17C0 8530F2     333            mov RL0, x+0
17C3 8531F4     333            mov RH0, x+1
17C6            333            
17C6 D28C       333            setb TR0
17C8            333            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
17C8 7A02       333            mov R2, #2
17CA 12038E     333            lcall Play_Note_Delay
17CD C28C       333            clr TR0
17CF C002       333            push AR2
17D1 7A0A       333            mov R2, #10
17D3 1202AF     333            lcall ?Wait_Milli_Seconds
17D6 D002       333            pop AR2
17D8 D002       333            pop AR2
17DA            334            ; Compute the reload value given the base frequency and interval ratio codes
17DA            334   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
17DA            334   ;Calc_Interval:
17DA            334   ; Freq0 loaded (fundamental frequency)
17DA C002       334   push AR2
17DC 75300B     334            mov x+0, #low (key_C5 % 0x10000) 
17DF 753102     334            mov x+1, #high(key_C5 % 0x10000) 
17E2 753200     334            mov x+2, #low (key_C5 / 0x10000) 
17E5 753300     334            mov x+3, #high(key_C5 / 0x10000)  
17E8            334   ; Load upper ratio
17E8 753403     334            mov y+0, #low (tone_p5a % 0x10000) 
17EB 753500     334            mov y+1, #high(tone_p5a % 0x10000) 
17EE 753600     334            mov y+2, #low (tone_p5a / 0x10000) 
17F1 753700     334            mov y+3, #high(tone_p5a / 0x10000) 
17F4 120188     334            lcall mul32
17F7            334            
17F7            334   ; Load lower ratio
17F7 753402     334            mov y+0, #low (tone_p5b % 0x10000) 
17FA 753500     334            mov y+1, #high(tone_p5b % 0x10000) 
17FD 753600     334            mov y+2, #low (tone_p5b / 0x10000) 
1800 753700     334            mov y+3, #high(tone_p5b / 0x10000) 
1803 120215     334            lcall div32
1806            334   ; compute value for reload
1806            334   ; reload rate = CLK/freq
1806 753400     334            mov y+0, #low (CLK % 0x10000) 
1809 753580     334            mov y+1, #high(CLK % 0x10000) 
180C 753651     334            mov y+2, #low (CLK / 0x10000) 
180F 753701     334            mov y+3, #high(CLK / 0x10000) 
1812 12028B     334            lcall xchg_xy
1815            334            
1815 120215     334            lcall div32
1818            334            
1818            334   ; reload value = 65536-x
1818 753400     334            mov y+0, #low (65536 % 0x10000) 
181B 753500     334            mov y+1, #high(65536 % 0x10000) 
181E 753601     334            mov y+2, #low (65536 / 0x10000) 
1821 753700     334            mov y+3, #high(65536 / 0x10000) 
1824 12028B     334            lcall xchg_xy
1827 1200F4     334            lcall sub32
182A            334   ; x now contains the reload value
182A            334   ;debug_BCD
182A 8530F2     334            mov RL0, x+0
182D 8531F4     334            mov RH0, x+1
1830            334            
1830 D28C       334            setb TR0
1832            334            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
1832 7A02       334            mov R2, #2
1834 12038E     334            lcall Play_Note_Delay
1837 C28C       334            clr TR0
1839 C002       334            push AR2
183B 7A0A       334            mov R2, #10
183D 1202AF     334            lcall ?Wait_Milli_Seconds
1840 D002       334            pop AR2
1842 D002       334            pop AR2
1844            335            ; Compute the reload value given the base frequency and interval ratio codes
1844            335   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
1844            335   ;Calc_Interval:
1844            335   ; Freq0 loaded (fundamental frequency)
1844 C002       335   push AR2
1846 75300B     335            mov x+0, #low (key_C5 % 0x10000) 
1849 753102     335            mov x+1, #high(key_C5 % 0x10000) 
184C 753200     335            mov x+2, #low (key_C5 / 0x10000) 
184F 753300     335            mov x+3, #high(key_C5 / 0x10000)  
1852            335   ; Load upper ratio
1852 753407     335            mov y+0, #low (tone_tta % 0x10000) 
1855 753500     335            mov y+1, #high(tone_tta % 0x10000) 
1858 753600     335            mov y+2, #low (tone_tta / 0x10000) 
185B 753700     335            mov y+3, #high(tone_tta / 0x10000) 
185E 120188     335            lcall mul32
1861            335            
1861            335   ; Load lower ratio
1861 753405     335            mov y+0, #low (tone_ttb % 0x10000) 
1864 753500     335            mov y+1, #high(tone_ttb % 0x10000) 
1867 753600     335            mov y+2, #low (tone_ttb / 0x10000) 
186A 753700     335            mov y+3, #high(tone_ttb / 0x10000) 
186D 120215     335            lcall div32
1870            335   ; compute value for reload
1870            335   ; reload rate = CLK/freq
1870 753400     335            mov y+0, #low (CLK % 0x10000) 
1873 753580     335            mov y+1, #high(CLK % 0x10000) 
1876 753651     335            mov y+2, #low (CLK / 0x10000) 
1879 753701     335            mov y+3, #high(CLK / 0x10000) 
187C 12028B     335            lcall xchg_xy
187F            335            
187F 120215     335            lcall div32
1882            335            
1882            335   ; reload value = 65536-x
1882 753400     335            mov y+0, #low (65536 % 0x10000) 
1885 753500     335            mov y+1, #high(65536 % 0x10000) 
1888 753601     335            mov y+2, #low (65536 / 0x10000) 
188B 753700     335            mov y+3, #high(65536 / 0x10000) 
188E 12028B     335            lcall xchg_xy
1891 1200F4     335            lcall sub32
1894            335   ; x now contains the reload value
1894            335   ;debug_BCD
1894 8530F2     335            mov RL0, x+0
1897 8531F4     335            mov RH0, x+1
189A            335            
189A D28C       335            setb TR0
189C            335            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
189C 7A02       335            mov R2, #2
189E 12038E     335            lcall Play_Note_Delay
18A1 C28C       335            clr TR0
18A3 C002       335            push AR2
18A5 7A0A       335            mov R2, #10
18A7 1202AF     335            lcall ?Wait_Milli_Seconds
18AA D002       335            pop AR2
18AC D002       335            pop AR2
18AE            336            ; Compute the reload value given the base frequency and interval ratio codes
18AE            336   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
18AE            336   ;Calc_Interval:
18AE            336   ; Freq0 loaded (fundamental frequency)
18AE C002       336   push AR2
18B0 75300B     336            mov x+0, #low (key_C5 % 0x10000) 
18B3 753102     336            mov x+1, #high(key_C5 % 0x10000) 
18B6 753200     336            mov x+2, #low (key_C5 / 0x10000) 
18B9 753300     336            mov x+3, #high(key_C5 / 0x10000)  
18BC            336   ; Load upper ratio
18BC 753405     336            mov y+0, #low (tone_ma6a % 0x10000) 
18BF 753500     336            mov y+1, #high(tone_ma6a % 0x10000) 
18C2 753600     336            mov y+2, #low (tone_ma6a / 0x10000) 
18C5 753700     336            mov y+3, #high(tone_ma6a / 0x10000) 
18C8 120188     336            lcall mul32
18CB            336            
18CB            336   ; Load lower ratio
18CB 753403     336            mov y+0, #low (tone_ma6b % 0x10000) 
18CE 753500     336            mov y+1, #high(tone_ma6b % 0x10000) 
18D1 753600     336            mov y+2, #low (tone_ma6b / 0x10000) 
18D4 753700     336            mov y+3, #high(tone_ma6b / 0x10000) 
18D7 120215     336            lcall div32
18DA            336   ; compute value for reload
18DA            336   ; reload rate = CLK/freq
18DA 753400     336            mov y+0, #low (CLK % 0x10000) 
18DD 753580     336            mov y+1, #high(CLK % 0x10000) 
18E0 753651     336            mov y+2, #low (CLK / 0x10000) 
18E3 753701     336            mov y+3, #high(CLK / 0x10000) 
18E6 12028B     336            lcall xchg_xy
18E9            336            
18E9 120215     336            lcall div32
18EC            336            
18EC            336   ; reload value = 65536-x
18EC 753400     336            mov y+0, #low (65536 % 0x10000) 
18EF 753500     336            mov y+1, #high(65536 % 0x10000) 
18F2 753601     336            mov y+2, #low (65536 / 0x10000) 
18F5 753700     336            mov y+3, #high(65536 / 0x10000) 
18F8 12028B     336            lcall xchg_xy
18FB 1200F4     336            lcall sub32
18FE            336   ; x now contains the reload value
18FE            336   ;debug_BCD
18FE 8530F2     336            mov RL0, x+0
1901 8531F4     336            mov RH0, x+1
1904            336            
1904 D28C       336            setb TR0
1906            336            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
1906 7A02       336            mov R2, #2
1908 12038E     336            lcall Play_Note_Delay
190B C28C       336            clr TR0
190D C002       336            push AR2
190F 7A0A       336            mov R2, #10
1911 1202AF     336            lcall ?Wait_Milli_Seconds
1914 D002       336            pop AR2
1916 D002       336            pop AR2
1918            337            ; Compute the reload value given the base frequency and interval ratio codes
1918            337   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
1918            337   ;Calc_Interval:
1918            337   ; Freq0 loaded (fundamental frequency)
1918 C002       337   push AR2
191A 75300B     337            mov x+0, #low (key_C5 % 0x10000) 
191D 753102     337            mov x+1, #high(key_C5 % 0x10000) 
1920 753200     337            mov x+2, #low (key_C5 / 0x10000) 
1923 753300     337            mov x+3, #high(key_C5 / 0x10000)  
1926            337   ; Load upper ratio
1926 753402     337            mov y+0, #low (tone_p8a % 0x10000) 
1929 753500     337            mov y+1, #high(tone_p8a % 0x10000) 
192C 753600     337            mov y+2, #low (tone_p8a / 0x10000) 
192F 753700     337            mov y+3, #high(tone_p8a / 0x10000) 
1932 120188     337            lcall mul32
1935            337            
1935            337   ; Load lower ratio
1935 753401     337            mov y+0, #low (tone_p8b % 0x10000) 
1938 753500     337            mov y+1, #high(tone_p8b % 0x10000) 
193B 753600     337            mov y+2, #low (tone_p8b / 0x10000) 
193E 753700     337            mov y+3, #high(tone_p8b / 0x10000) 
1941 120215     337            lcall div32
1944            337   ; compute value for reload
1944            337   ; reload rate = CLK/freq
1944 753400     337            mov y+0, #low (CLK % 0x10000) 
1947 753580     337            mov y+1, #high(CLK % 0x10000) 
194A 753651     337            mov y+2, #low (CLK / 0x10000) 
194D 753701     337            mov y+3, #high(CLK / 0x10000) 
1950 12028B     337            lcall xchg_xy
1953            337            
1953 120215     337            lcall div32
1956            337            
1956            337   ; reload value = 65536-x
1956 753400     337            mov y+0, #low (65536 % 0x10000) 
1959 753500     337            mov y+1, #high(65536 % 0x10000) 
195C 753601     337            mov y+2, #low (65536 / 0x10000) 
195F 753700     337            mov y+3, #high(65536 / 0x10000) 
1962 12028B     337            lcall xchg_xy
1965 1200F4     337            lcall sub32
1968            337   ; x now contains the reload value
1968            337   ;debug_BCD
1968 8530F2     337            mov RL0, x+0
196B 8531F4     337            mov RH0, x+1
196E            337            
196E D28C       337            setb TR0
1970            337            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
1970 7A02       337            mov R2, #2
1972 12038E     337            lcall Play_Note_Delay
1975 C28C       337            clr TR0
1977 C002       337            push AR2
1979 7A0A       337            mov R2, #10
197B 1202AF     337            lcall ?Wait_Milli_Seconds
197E D002       337            pop AR2
1980 D002       337            pop AR2
1982            338            ; Compute the reload value given the base frequency and interval ratio codes
1982            338   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
1982            338   ;Calc_Interval:
1982            338   ; Freq0 loaded (fundamental frequency)
1982 C002       338   push AR2
1984 753017     338            mov x+0, #low (key_C6 % 0x10000) 
1987 753104     338            mov x+1, #high(key_C6 % 0x10000) 
198A 753200     338            mov x+2, #low (key_C6 / 0x10000) 
198D 753300     338            mov x+3, #high(key_C6 / 0x10000)  
1990            338   ; Load upper ratio
1990 753405     338            mov y+0, #low (tone_ma3a % 0x10000) 
1993 753500     338            mov y+1, #high(tone_ma3a % 0x10000) 
1996 753600     338            mov y+2, #low (tone_ma3a / 0x10000) 
1999 753700     338            mov y+3, #high(tone_ma3a / 0x10000) 
199C 120188     338            lcall mul32
199F            338            
199F            338   ; Load lower ratio
199F 753404     338            mov y+0, #low (tone_ma3b % 0x10000) 
19A2 753500     338            mov y+1, #high(tone_ma3b % 0x10000) 
19A5 753600     338            mov y+2, #low (tone_ma3b / 0x10000) 
19A8 753700     338            mov y+3, #high(tone_ma3b / 0x10000) 
19AB 120215     338            lcall div32
19AE            338   ; compute value for reload
19AE            338   ; reload rate = CLK/freq
19AE 753400     338            mov y+0, #low (CLK % 0x10000) 
19B1 753580     338            mov y+1, #high(CLK % 0x10000) 
19B4 753651     338            mov y+2, #low (CLK / 0x10000) 
19B7 753701     338            mov y+3, #high(CLK / 0x10000) 
19BA 12028B     338            lcall xchg_xy
19BD            338            
19BD 120215     338            lcall div32
19C0            338            
19C0            338   ; reload value = 65536-x
19C0 753400     338            mov y+0, #low (65536 % 0x10000) 
19C3 753500     338            mov y+1, #high(65536 % 0x10000) 
19C6 753601     338            mov y+2, #low (65536 / 0x10000) 
19C9 753700     338            mov y+3, #high(65536 / 0x10000) 
19CC 12028B     338            lcall xchg_xy
19CF 1200F4     338            lcall sub32
19D2            338   ; x now contains the reload value
19D2            338   ;debug_BCD
19D2 8530F2     338            mov RL0, x+0
19D5 8531F4     338            mov RH0, x+1
19D8            338            
19D8 D28C       338            setb TR0
19DA            338            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
19DA 7A04       338            mov R2, #4
19DC 12038E     338            lcall Play_Note_Delay
19DF C28C       338            clr TR0
19E1 C002       338            push AR2
19E3 7A0A       338            mov R2, #10
19E5 1202AF     338            lcall ?Wait_Milli_Seconds
19E8 D002       338            pop AR2
19EA D002       338            pop AR2
19EC            339            ; Compute the reload value given the base frequency and interval ratio codes
19EC            339   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
19EC            339   ;Calc_Interval:
19EC            339   ; Freq0 loaded (fundamental frequency)
19EC C002       339   push AR2
19EE 753017     339            mov x+0, #low (key_C6 % 0x10000) 
19F1 753104     339            mov x+1, #high(key_C6 % 0x10000) 
19F4 753200     339            mov x+2, #low (key_C6 / 0x10000) 
19F7 753300     339            mov x+3, #high(key_C6 / 0x10000)  
19FA            339   ; Load upper ratio
19FA 753409     339            mov y+0, #low (tone_ma2a % 0x10000) 
19FD 753500     339            mov y+1, #high(tone_ma2a % 0x10000) 
1A00 753600     339            mov y+2, #low (tone_ma2a / 0x10000) 
1A03 753700     339            mov y+3, #high(tone_ma2a / 0x10000) 
1A06 120188     339            lcall mul32
1A09            339            
1A09            339   ; Load lower ratio
1A09 753408     339            mov y+0, #low (tone_ma2b % 0x10000) 
1A0C 753500     339            mov y+1, #high(tone_ma2b % 0x10000) 
1A0F 753600     339            mov y+2, #low (tone_ma2b / 0x10000) 
1A12 753700     339            mov y+3, #high(tone_ma2b / 0x10000) 
1A15 120215     339            lcall div32
1A18            339   ; compute value for reload
1A18            339   ; reload rate = CLK/freq
1A18 753400     339            mov y+0, #low (CLK % 0x10000) 
1A1B 753580     339            mov y+1, #high(CLK % 0x10000) 
1A1E 753651     339            mov y+2, #low (CLK / 0x10000) 
1A21 753701     339            mov y+3, #high(CLK / 0x10000) 
1A24 12028B     339            lcall xchg_xy
1A27            339            
1A27 120215     339            lcall div32
1A2A            339            
1A2A            339   ; reload value = 65536-x
1A2A 753400     339            mov y+0, #low (65536 % 0x10000) 
1A2D 753500     339            mov y+1, #high(65536 % 0x10000) 
1A30 753601     339            mov y+2, #low (65536 / 0x10000) 
1A33 753700     339            mov y+3, #high(65536 / 0x10000) 
1A36 12028B     339            lcall xchg_xy
1A39 1200F4     339            lcall sub32
1A3C            339   ; x now contains the reload value
1A3C            339   ;debug_BCD
1A3C 8530F2     339            mov RL0, x+0
1A3F 8531F4     339            mov RH0, x+1
1A42            339            
1A42 D28C       339            setb TR0
1A44            339            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
1A44 7A02       339            mov R2, #2
1A46 12038E     339            lcall Play_Note_Delay
1A49 C28C       339            clr TR0
1A4B C002       339            push AR2
1A4D 7A0A       339            mov R2, #10
1A4F 1202AF     339            lcall ?Wait_Milli_Seconds
1A52 D002       339            pop AR2
1A54 D002       339            pop AR2
1A56            340            ; Compute the reload value given the base frequency and interval ratio codes
1A56            340   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
1A56            340   ;Calc_Interval:
1A56            340   ; Freq0 loaded (fundamental frequency)
1A56 C002       340   push AR2
1A58 753017     340            mov x+0, #low (key_C6 % 0x10000) 
1A5B 753104     340            mov x+1, #high(key_C6 % 0x10000) 
1A5E 753200     340            mov x+2, #low (key_C6 / 0x10000) 
1A61 753300     340            mov x+3, #high(key_C6 / 0x10000)  
1A64            340   ; Load upper ratio
1A64 753401     340            mov y+0, #low (tone_p1a % 0x10000) 
1A67 753500     340            mov y+1, #high(tone_p1a % 0x10000) 
1A6A 753600     340            mov y+2, #low (tone_p1a / 0x10000) 
1A6D 753700     340            mov y+3, #high(tone_p1a / 0x10000) 
1A70 120188     340            lcall mul32
1A73            340            
1A73            340   ; Load lower ratio
1A73 753401     340            mov y+0, #low (tone_p1b % 0x10000) 
1A76 753500     340            mov y+1, #high(tone_p1b % 0x10000) 
1A79 753600     340            mov y+2, #low (tone_p1b / 0x10000) 
1A7C 753700     340            mov y+3, #high(tone_p1b / 0x10000) 
1A7F 120215     340            lcall div32
1A82            340   ; compute value for reload
1A82            340   ; reload rate = CLK/freq
1A82 753400     340            mov y+0, #low (CLK % 0x10000) 
1A85 753580     340            mov y+1, #high(CLK % 0x10000) 
1A88 753651     340            mov y+2, #low (CLK / 0x10000) 
1A8B 753701     340            mov y+3, #high(CLK / 0x10000) 
1A8E 12028B     340            lcall xchg_xy
1A91            340            
1A91 120215     340            lcall div32
1A94            340            
1A94            340   ; reload value = 65536-x
1A94 753400     340            mov y+0, #low (65536 % 0x10000) 
1A97 753500     340            mov y+1, #high(65536 % 0x10000) 
1A9A 753601     340            mov y+2, #low (65536 / 0x10000) 
1A9D 753700     340            mov y+3, #high(65536 / 0x10000) 
1AA0 12028B     340            lcall xchg_xy
1AA3 1200F4     340            lcall sub32
1AA6            340   ; x now contains the reload value
1AA6            340   ;debug_BCD
1AA6 8530F2     340            mov RL0, x+0
1AA9 8531F4     340            mov RH0, x+1
1AAC            340            
1AAC D28C       340            setb TR0
1AAE            340            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
1AAE 7A02       340            mov R2, #2
1AB0 12038E     340            lcall Play_Note_Delay
1AB3 C28C       340            clr TR0
1AB5 C002       340            push AR2
1AB7 7A0A       340            mov R2, #10
1AB9 1202AF     340            lcall ?Wait_Milli_Seconds
1ABC D002       340            pop AR2
1ABE D002       340            pop AR2
1AC0            341            ; Compute the reload value given the base frequency and interval ratio codes
1AC0            341   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
1AC0            341   ;Calc_Interval:
1AC0            341   ; Freq0 loaded (fundamental frequency)
1AC0 C002       341   push AR2
1AC2 753017     341            mov x+0, #low (key_C6 % 0x10000) 
1AC5 753104     341            mov x+1, #high(key_C6 % 0x10000) 
1AC8 753200     341            mov x+2, #low (key_C6 / 0x10000) 
1ACB 753300     341            mov x+3, #high(key_C6 / 0x10000)  
1ACE            341   ; Load upper ratio
1ACE 753405     341            mov y+0, #low (tone_mi3b % 0x10000) 
1AD1 753500     341            mov y+1, #high(tone_mi3b % 0x10000) 
1AD4 753600     341            mov y+2, #low (tone_mi3b / 0x10000) 
1AD7 753700     341            mov y+3, #high(tone_mi3b / 0x10000) 
1ADA 120188     341            lcall mul32
1ADD            341            
1ADD            341   ; Load lower ratio
1ADD 753406     341            mov y+0, #low (tone_mi3a % 0x10000) 
1AE0 753500     341            mov y+1, #high(tone_mi3a % 0x10000) 
1AE3 753600     341            mov y+2, #low (tone_mi3a / 0x10000) 
1AE6 753700     341            mov y+3, #high(tone_mi3a / 0x10000) 
1AE9 120215     341            lcall div32
1AEC            341   ; compute value for reload
1AEC            341   ; reload rate = CLK/freq
1AEC 753400     341            mov y+0, #low (CLK % 0x10000) 
1AEF 753580     341            mov y+1, #high(CLK % 0x10000) 
1AF2 753651     341            mov y+2, #low (CLK / 0x10000) 
1AF5 753701     341            mov y+3, #high(CLK / 0x10000) 
1AF8 12028B     341            lcall xchg_xy
1AFB            341            
1AFB 120215     341            lcall div32
1AFE            341            
1AFE            341   ; reload value = 65536-x
1AFE 753400     341            mov y+0, #low (65536 % 0x10000) 
1B01 753500     341            mov y+1, #high(65536 % 0x10000) 
1B04 753601     341            mov y+2, #low (65536 / 0x10000) 
1B07 753700     341            mov y+3, #high(65536 / 0x10000) 
1B0A 12028B     341            lcall xchg_xy
1B0D 1200F4     341            lcall sub32
1B10            341   ; x now contains the reload value
1B10            341   ;debug_BCD
1B10 8530F2     341            mov RL0, x+0
1B13 8531F4     341            mov RH0, x+1
1B16            341            
1B16 D28C       341            setb TR0
1B18            341            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
1B18 7A02       341            mov R2, #2
1B1A 12038E     341            lcall Play_Note_Delay
1B1D C28C       341            clr TR0
1B1F C002       341            push AR2
1B21 7A0A       341            mov R2, #10
1B23 1202AF     341            lcall ?Wait_Milli_Seconds
1B26 D002       341            pop AR2
1B28 D002       341            pop AR2
1B2A            342            ; Compute the reload value given the base frequency and interval ratio codes
1B2A            342   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
1B2A            342   ;Calc_Interval:
1B2A            342   ; Freq0 loaded (fundamental frequency)
1B2A C002       342   push AR2
1B2C 753017     342            mov x+0, #low (key_C6 % 0x10000) 
1B2F 753104     342            mov x+1, #high(key_C6 % 0x10000) 
1B32 753200     342            mov x+2, #low (key_C6 / 0x10000) 
1B35 753300     342            mov x+3, #high(key_C6 / 0x10000)  
1B38            342   ; Load upper ratio
1B38 753409     342            mov y+0, #low (tone_ma2a % 0x10000) 
1B3B 753500     342            mov y+1, #high(tone_ma2a % 0x10000) 
1B3E 753600     342            mov y+2, #low (tone_ma2a / 0x10000) 
1B41 753700     342            mov y+3, #high(tone_ma2a / 0x10000) 
1B44 120188     342            lcall mul32
1B47            342            
1B47            342   ; Load lower ratio
1B47 753408     342            mov y+0, #low (tone_ma2b % 0x10000) 
1B4A 753500     342            mov y+1, #high(tone_ma2b % 0x10000) 
1B4D 753600     342            mov y+2, #low (tone_ma2b / 0x10000) 
1B50 753700     342            mov y+3, #high(tone_ma2b / 0x10000) 
1B53 120215     342            lcall div32
1B56            342   ; compute value for reload
1B56            342   ; reload rate = CLK/freq
1B56 753400     342            mov y+0, #low (CLK % 0x10000) 
1B59 753580     342            mov y+1, #high(CLK % 0x10000) 
1B5C 753651     342            mov y+2, #low (CLK / 0x10000) 
1B5F 753701     342            mov y+3, #high(CLK / 0x10000) 
1B62 12028B     342            lcall xchg_xy
1B65            342            
1B65 120215     342            lcall div32
1B68            342            
1B68            342   ; reload value = 65536-x
1B68 753400     342            mov y+0, #low (65536 % 0x10000) 
1B6B 753500     342            mov y+1, #high(65536 % 0x10000) 
1B6E 753601     342            mov y+2, #low (65536 / 0x10000) 
1B71 753700     342            mov y+3, #high(65536 / 0x10000) 
1B74 12028B     342            lcall xchg_xy
1B77 1200F4     342            lcall sub32
1B7A            342   ; x now contains the reload value
1B7A            342   ;debug_BCD
1B7A 8530F2     342            mov RL0, x+0
1B7D 8531F4     342            mov RH0, x+1
1B80            342            
1B80 D28C       342            setb TR0
1B82            342            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
1B82 7A0C       342            mov R2, #12
1B84 12038E     342            lcall Play_Note_Delay
1B87 C28C       342            clr TR0
1B89 C002       342            push AR2
1B8B 7A0A       342            mov R2, #10
1B8D 1202AF     342            lcall ?Wait_Milli_Seconds
1B90 D002       342            pop AR2
1B92 D002       342            pop AR2
1B94            343   
1B94            344            ; Compute the reload value given the base frequency and interval ratio codes
1B94            344   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
1B94            344   ;Calc_Interval:
1B94            344   ; Freq0 loaded (fundamental frequency)
1B94 C002       344   push AR2
1B96 75300B     344            mov x+0, #low (key_C5 % 0x10000) 
1B99 753102     344            mov x+1, #high(key_C5 % 0x10000) 
1B9C 753200     344            mov x+2, #low (key_C5 / 0x10000) 
1B9F 753300     344            mov x+3, #high(key_C5 / 0x10000)  
1BA2            344   ; Load upper ratio
1BA2 753409     344            mov y+0, #low (tone_ma2a % 0x10000) 
1BA5 753500     344            mov y+1, #high(tone_ma2a % 0x10000) 
1BA8 753600     344            mov y+2, #low (tone_ma2a / 0x10000) 
1BAB 753700     344            mov y+3, #high(tone_ma2a / 0x10000) 
1BAE 120188     344            lcall mul32
1BB1            344            
1BB1            344   ; Load lower ratio
1BB1 753408     344            mov y+0, #low (tone_ma2b % 0x10000) 
1BB4 753500     344            mov y+1, #high(tone_ma2b % 0x10000) 
1BB7 753600     344            mov y+2, #low (tone_ma2b / 0x10000) 
1BBA 753700     344            mov y+3, #high(tone_ma2b / 0x10000) 
1BBD 120215     344            lcall div32
1BC0            344   ; compute value for reload
1BC0            344   ; reload rate = CLK/freq
1BC0 753400     344            mov y+0, #low (CLK % 0x10000) 
1BC3 753580     344            mov y+1, #high(CLK % 0x10000) 
1BC6 753651     344            mov y+2, #low (CLK / 0x10000) 
1BC9 753701     344            mov y+3, #high(CLK / 0x10000) 
1BCC 12028B     344            lcall xchg_xy
1BCF            344            
1BCF 120215     344            lcall div32
1BD2            344            
1BD2            344   ; reload value = 65536-x
1BD2 753400     344            mov y+0, #low (65536 % 0x10000) 
1BD5 753500     344            mov y+1, #high(65536 % 0x10000) 
1BD8 753601     344            mov y+2, #low (65536 / 0x10000) 
1BDB 753700     344            mov y+3, #high(65536 / 0x10000) 
1BDE 12028B     344            lcall xchg_xy
1BE1 1200F4     344            lcall sub32
1BE4            344   ; x now contains the reload value
1BE4            344   ;debug_BCD
1BE4 8530F2     344            mov RL0, x+0
1BE7 8531F4     344            mov RH0, x+1
1BEA            344            
1BEA D28C       344            setb TR0
1BEC            344            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
1BEC 7A02       344            mov R2, #2
1BEE 12038E     344            lcall Play_Note_Delay
1BF1 C28C       344            clr TR0
1BF3 C002       344            push AR2
1BF5 7A0A       344            mov R2, #10
1BF7 1202AF     344            lcall ?Wait_Milli_Seconds
1BFA D002       344            pop AR2
1BFC D002       344            pop AR2
1BFE            345            ; Compute the reload value given the base frequency and interval ratio codes
1BFE            345   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
1BFE            345   ;Calc_Interval:
1BFE            345   ; Freq0 loaded (fundamental frequency)
1BFE C002       345   push AR2
1C00 75300B     345            mov x+0, #low (key_C5 % 0x10000) 
1C03 753102     345            mov x+1, #high(key_C5 % 0x10000) 
1C06 753200     345            mov x+2, #low (key_C5 / 0x10000) 
1C09 753300     345            mov x+3, #high(key_C5 / 0x10000)  
1C0C            345   ; Load upper ratio
1C0C 753406     345            mov y+0, #low (tone_mi3a % 0x10000) 
1C0F 753500     345            mov y+1, #high(tone_mi3a % 0x10000) 
1C12 753600     345            mov y+2, #low (tone_mi3a / 0x10000) 
1C15 753700     345            mov y+3, #high(tone_mi3a / 0x10000) 
1C18 120188     345            lcall mul32
1C1B            345            
1C1B            345   ; Load lower ratio
1C1B 753405     345            mov y+0, #low (tone_mi3b % 0x10000) 
1C1E 753500     345            mov y+1, #high(tone_mi3b % 0x10000) 
1C21 753600     345            mov y+2, #low (tone_mi3b / 0x10000) 
1C24 753700     345            mov y+3, #high(tone_mi3b / 0x10000) 
1C27 120215     345            lcall div32
1C2A            345   ; compute value for reload
1C2A            345   ; reload rate = CLK/freq
1C2A 753400     345            mov y+0, #low (CLK % 0x10000) 
1C2D 753580     345            mov y+1, #high(CLK % 0x10000) 
1C30 753651     345            mov y+2, #low (CLK / 0x10000) 
1C33 753701     345            mov y+3, #high(CLK / 0x10000) 
1C36 12028B     345            lcall xchg_xy
1C39            345            
1C39 120215     345            lcall div32
1C3C            345            
1C3C            345   ; reload value = 65536-x
1C3C 753400     345            mov y+0, #low (65536 % 0x10000) 
1C3F 753500     345            mov y+1, #high(65536 % 0x10000) 
1C42 753601     345            mov y+2, #low (65536 / 0x10000) 
1C45 753700     345            mov y+3, #high(65536 / 0x10000) 
1C48 12028B     345            lcall xchg_xy
1C4B 1200F4     345            lcall sub32
1C4E            345   ; x now contains the reload value
1C4E            345   ;debug_BCD
1C4E 8530F2     345            mov RL0, x+0
1C51 8531F4     345            mov RH0, x+1
1C54            345            
1C54 D28C       345            setb TR0
1C56            345            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
1C56 7A02       345            mov R2, #2
1C58 12038E     345            lcall Play_Note_Delay
1C5B C28C       345            clr TR0
1C5D C002       345            push AR2
1C5F 7A0A       345            mov R2, #10
1C61 1202AF     345            lcall ?Wait_Milli_Seconds
1C64 D002       345            pop AR2
1C66 D002       345            pop AR2
1C68            346            ; Compute the reload value given the base frequency and interval ratio codes
1C68            346   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
1C68            346   ;Calc_Interval:
1C68            346   ; Freq0 loaded (fundamental frequency)
1C68 C002       346   push AR2
1C6A 75300B     346            mov x+0, #low (key_C5 % 0x10000) 
1C6D 753102     346            mov x+1, #high(key_C5 % 0x10000) 
1C70 753200     346            mov x+2, #low (key_C5 / 0x10000) 
1C73 753300     346            mov x+3, #high(key_C5 / 0x10000)  
1C76            346   ; Load upper ratio
1C76 753405     346            mov y+0, #low (tone_ma3a % 0x10000) 
1C79 753500     346            mov y+1, #high(tone_ma3a % 0x10000) 
1C7C 753600     346            mov y+2, #low (tone_ma3a / 0x10000) 
1C7F 753700     346            mov y+3, #high(tone_ma3a / 0x10000) 
1C82 120188     346            lcall mul32
1C85            346            
1C85            346   ; Load lower ratio
1C85 753404     346            mov y+0, #low (tone_ma3b % 0x10000) 
1C88 753500     346            mov y+1, #high(tone_ma3b % 0x10000) 
1C8B 753600     346            mov y+2, #low (tone_ma3b / 0x10000) 
1C8E 753700     346            mov y+3, #high(tone_ma3b / 0x10000) 
1C91 120215     346            lcall div32
1C94            346   ; compute value for reload
1C94            346   ; reload rate = CLK/freq
1C94 753400     346            mov y+0, #low (CLK % 0x10000) 
1C97 753580     346            mov y+1, #high(CLK % 0x10000) 
1C9A 753651     346            mov y+2, #low (CLK / 0x10000) 
1C9D 753701     346            mov y+3, #high(CLK / 0x10000) 
1CA0 12028B     346            lcall xchg_xy
1CA3            346            
1CA3 120215     346            lcall div32
1CA6            346            
1CA6            346   ; reload value = 65536-x
1CA6 753400     346            mov y+0, #low (65536 % 0x10000) 
1CA9 753500     346            mov y+1, #high(65536 % 0x10000) 
1CAC 753601     346            mov y+2, #low (65536 / 0x10000) 
1CAF 753700     346            mov y+3, #high(65536 / 0x10000) 
1CB2 12028B     346            lcall xchg_xy
1CB5 1200F4     346            lcall sub32
1CB8            346   ; x now contains the reload value
1CB8            346   ;debug_BCD
1CB8 8530F2     346            mov RL0, x+0
1CBB 8531F4     346            mov RH0, x+1
1CBE            346            
1CBE D28C       346            setb TR0
1CC0            346            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
1CC0 7A02       346            mov R2, #2
1CC2 12038E     346            lcall Play_Note_Delay
1CC5 C28C       346            clr TR0
1CC7 C002       346            push AR2
1CC9 7A0A       346            mov R2, #10
1CCB 1202AF     346            lcall ?Wait_Milli_Seconds
1CCE D002       346            pop AR2
1CD0 D002       346            pop AR2
1CD2            347            ; Compute the reload value given the base frequency and interval ratio codes
1CD2            347   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
1CD2            347   ;Calc_Interval:
1CD2            347   ; Freq0 loaded (fundamental frequency)
1CD2 C002       347   push AR2
1CD4 75300B     347            mov x+0, #low (key_C5 % 0x10000) 
1CD7 753102     347            mov x+1, #high(key_C5 % 0x10000) 
1CDA 753200     347            mov x+2, #low (key_C5 / 0x10000) 
1CDD 753300     347            mov x+3, #high(key_C5 / 0x10000)  
1CE0            347   ; Load upper ratio
1CE0 753402     347            mov y+0, #low (tone_p8a % 0x10000) 
1CE3 753500     347            mov y+1, #high(tone_p8a % 0x10000) 
1CE6 753600     347            mov y+2, #low (tone_p8a / 0x10000) 
1CE9 753700     347            mov y+3, #high(tone_p8a / 0x10000) 
1CEC 120188     347            lcall mul32
1CEF            347            
1CEF            347   ; Load lower ratio
1CEF 753401     347            mov y+0, #low (tone_p8b % 0x10000) 
1CF2 753500     347            mov y+1, #high(tone_p8b % 0x10000) 
1CF5 753600     347            mov y+2, #low (tone_p8b / 0x10000) 
1CF8 753700     347            mov y+3, #high(tone_p8b / 0x10000) 
1CFB 120215     347            lcall div32
1CFE            347   ; compute value for reload
1CFE            347   ; reload rate = CLK/freq
1CFE 753400     347            mov y+0, #low (CLK % 0x10000) 
1D01 753580     347            mov y+1, #high(CLK % 0x10000) 
1D04 753651     347            mov y+2, #low (CLK / 0x10000) 
1D07 753701     347            mov y+3, #high(CLK / 0x10000) 
1D0A 12028B     347            lcall xchg_xy
1D0D            347            
1D0D 120215     347            lcall div32
1D10            347            
1D10            347   ; reload value = 65536-x
1D10 753400     347            mov y+0, #low (65536 % 0x10000) 
1D13 753500     347            mov y+1, #high(65536 % 0x10000) 
1D16 753601     347            mov y+2, #low (65536 / 0x10000) 
1D19 753700     347            mov y+3, #high(65536 / 0x10000) 
1D1C 12028B     347            lcall xchg_xy
1D1F 1200F4     347            lcall sub32
1D22            347   ; x now contains the reload value
1D22            347   ;debug_BCD
1D22 8530F2     347            mov RL0, x+0
1D25 8531F4     347            mov RH0, x+1
1D28            347            
1D28 D28C       347            setb TR0
1D2A            347            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
1D2A 7A04       347            mov R2, #4
1D2C 12038E     347            lcall Play_Note_Delay
1D2F C28C       347            clr TR0
1D31 C002       347            push AR2
1D33 7A0A       347            mov R2, #10
1D35 1202AF     347            lcall ?Wait_Milli_Seconds
1D38 D002       347            pop AR2
1D3A D002       347            pop AR2
1D3C            348            ; Compute the reload value given the base frequency and interval ratio codes
1D3C            348   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
1D3C            348   ;Calc_Interval:
1D3C            348   ; Freq0 loaded (fundamental frequency)
1D3C C002       348   push AR2
1D3E 75300B     348            mov x+0, #low (key_C5 % 0x10000) 
1D41 753102     348            mov x+1, #high(key_C5 % 0x10000) 
1D44 753200     348            mov x+2, #low (key_C5 / 0x10000) 
1D47 753300     348            mov x+3, #high(key_C5 / 0x10000)  
1D4A            348   ; Load upper ratio
1D4A 753405     348            mov y+0, #low (tone_ma3a % 0x10000) 
1D4D 753500     348            mov y+1, #high(tone_ma3a % 0x10000) 
1D50 753600     348            mov y+2, #low (tone_ma3a / 0x10000) 
1D53 753700     348            mov y+3, #high(tone_ma3a / 0x10000) 
1D56 120188     348            lcall mul32
1D59            348            
1D59            348   ; Load lower ratio
1D59 753404     348            mov y+0, #low (tone_ma3b % 0x10000) 
1D5C 753500     348            mov y+1, #high(tone_ma3b % 0x10000) 
1D5F 753600     348            mov y+2, #low (tone_ma3b / 0x10000) 
1D62 753700     348            mov y+3, #high(tone_ma3b / 0x10000) 
1D65 120215     348            lcall div32
1D68            348   ; compute value for reload
1D68            348   ; reload rate = CLK/freq
1D68 753400     348            mov y+0, #low (CLK % 0x10000) 
1D6B 753580     348            mov y+1, #high(CLK % 0x10000) 
1D6E 753651     348            mov y+2, #low (CLK / 0x10000) 
1D71 753701     348            mov y+3, #high(CLK / 0x10000) 
1D74 12028B     348            lcall xchg_xy
1D77            348            
1D77 120215     348            lcall div32
1D7A            348            
1D7A            348   ; reload value = 65536-x
1D7A 753400     348            mov y+0, #low (65536 % 0x10000) 
1D7D 753500     348            mov y+1, #high(65536 % 0x10000) 
1D80 753601     348            mov y+2, #low (65536 / 0x10000) 
1D83 753700     348            mov y+3, #high(65536 / 0x10000) 
1D86 12028B     348            lcall xchg_xy
1D89 1200F4     348            lcall sub32
1D8C            348   ; x now contains the reload value
1D8C            348   ;debug_BCD
1D8C 8530F2     348            mov RL0, x+0
1D8F 8531F4     348            mov RH0, x+1
1D92            348            
1D92 D28C       348            setb TR0
1D94            348            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
1D94 7A02       348            mov R2, #2
1D96 12038E     348            lcall Play_Note_Delay
1D99 C28C       348            clr TR0
1D9B C002       348            push AR2
1D9D 7A0A       348            mov R2, #10
1D9F 1202AF     348            lcall ?Wait_Milli_Seconds
1DA2 D002       348            pop AR2
1DA4 D002       348            pop AR2
1DA6            349            ; Compute the reload value given the base frequency and interval ratio codes
1DA6            349   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
1DA6            349   ;Calc_Interval:
1DA6            349   ; Freq0 loaded (fundamental frequency)
1DA6 C002       349   push AR2
1DA8 75300B     349            mov x+0, #low (key_C5 % 0x10000) 
1DAB 753102     349            mov x+1, #high(key_C5 % 0x10000) 
1DAE 753200     349            mov x+2, #low (key_C5 / 0x10000) 
1DB1 753300     349            mov x+3, #high(key_C5 / 0x10000)  
1DB4            349   ; Load upper ratio
1DB4 753402     349            mov y+0, #low (tone_p8a % 0x10000) 
1DB7 753500     349            mov y+1, #high(tone_p8a % 0x10000) 
1DBA 753600     349            mov y+2, #low (tone_p8a / 0x10000) 
1DBD 753700     349            mov y+3, #high(tone_p8a / 0x10000) 
1DC0 120188     349            lcall mul32
1DC3            349            
1DC3            349   ; Load lower ratio
1DC3 753401     349            mov y+0, #low (tone_p8b % 0x10000) 
1DC6 753500     349            mov y+1, #high(tone_p8b % 0x10000) 
1DC9 753600     349            mov y+2, #low (tone_p8b / 0x10000) 
1DCC 753700     349            mov y+3, #high(tone_p8b / 0x10000) 
1DCF 120215     349            lcall div32
1DD2            349   ; compute value for reload
1DD2            349   ; reload rate = CLK/freq
1DD2 753400     349            mov y+0, #low (CLK % 0x10000) 
1DD5 753580     349            mov y+1, #high(CLK % 0x10000) 
1DD8 753651     349            mov y+2, #low (CLK / 0x10000) 
1DDB 753701     349            mov y+3, #high(CLK / 0x10000) 
1DDE 12028B     349            lcall xchg_xy
1DE1            349            
1DE1 120215     349            lcall div32
1DE4            349            
1DE4            349   ; reload value = 65536-x
1DE4 753400     349            mov y+0, #low (65536 % 0x10000) 
1DE7 753500     349            mov y+1, #high(65536 % 0x10000) 
1DEA 753601     349            mov y+2, #low (65536 / 0x10000) 
1DED 753700     349            mov y+3, #high(65536 / 0x10000) 
1DF0 12028B     349            lcall xchg_xy
1DF3 1200F4     349            lcall sub32
1DF6            349   ; x now contains the reload value
1DF6            349   ;debug_BCD
1DF6 8530F2     349            mov RL0, x+0
1DF9 8531F4     349            mov RH0, x+1
1DFC            349            
1DFC D28C       349            setb TR0
1DFE            349            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
1DFE 7A04       349            mov R2, #4
1E00 12038E     349            lcall Play_Note_Delay
1E03 C28C       349            clr TR0
1E05 C002       349            push AR2
1E07 7A0A       349            mov R2, #10
1E09 1202AF     349            lcall ?Wait_Milli_Seconds
1E0C D002       349            pop AR2
1E0E D002       349            pop AR2
1E10            350            ; Compute the reload value given the base frequency and interval ratio codes
1E10            350   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
1E10            350   ;Calc_Interval:
1E10            350   ; Freq0 loaded (fundamental frequency)
1E10 C002       350   push AR2
1E12 75300B     350            mov x+0, #low (key_C5 % 0x10000) 
1E15 753102     350            mov x+1, #high(key_C5 % 0x10000) 
1E18 753200     350            mov x+2, #low (key_C5 / 0x10000) 
1E1B 753300     350            mov x+3, #high(key_C5 / 0x10000)  
1E1E            350   ; Load upper ratio
1E1E 753405     350            mov y+0, #low (tone_ma3a % 0x10000) 
1E21 753500     350            mov y+1, #high(tone_ma3a % 0x10000) 
1E24 753600     350            mov y+2, #low (tone_ma3a / 0x10000) 
1E27 753700     350            mov y+3, #high(tone_ma3a / 0x10000) 
1E2A 120188     350            lcall mul32
1E2D            350            
1E2D            350   ; Load lower ratio
1E2D 753404     350            mov y+0, #low (tone_ma3b % 0x10000) 
1E30 753500     350            mov y+1, #high(tone_ma3b % 0x10000) 
1E33 753600     350            mov y+2, #low (tone_ma3b / 0x10000) 
1E36 753700     350            mov y+3, #high(tone_ma3b / 0x10000) 
1E39 120215     350            lcall div32
1E3C            350   ; compute value for reload
1E3C            350   ; reload rate = CLK/freq
1E3C 753400     350            mov y+0, #low (CLK % 0x10000) 
1E3F 753580     350            mov y+1, #high(CLK % 0x10000) 
1E42 753651     350            mov y+2, #low (CLK / 0x10000) 
1E45 753701     350            mov y+3, #high(CLK / 0x10000) 
1E48 12028B     350            lcall xchg_xy
1E4B            350            
1E4B 120215     350            lcall div32
1E4E            350            
1E4E            350   ; reload value = 65536-x
1E4E 753400     350            mov y+0, #low (65536 % 0x10000) 
1E51 753500     350            mov y+1, #high(65536 % 0x10000) 
1E54 753601     350            mov y+2, #low (65536 / 0x10000) 
1E57 753700     350            mov y+3, #high(65536 / 0x10000) 
1E5A 12028B     350            lcall xchg_xy
1E5D 1200F4     350            lcall sub32
1E60            350   ; x now contains the reload value
1E60            350   ;debug_BCD
1E60 8530F2     350            mov RL0, x+0
1E63 8531F4     350            mov RH0, x+1
1E66            350            
1E66 D28C       350            setb TR0
1E68            350            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
1E68 7A02       350            mov R2, #2
1E6A 12038E     350            lcall Play_Note_Delay
1E6D C28C       350            clr TR0
1E6F C002       350            push AR2
1E71 7A0A       350            mov R2, #10
1E73 1202AF     350            lcall ?Wait_Milli_Seconds
1E76 D002       350            pop AR2
1E78 D002       350            pop AR2
1E7A            351            ; Compute the reload value given the base frequency and interval ratio codes
1E7A            351   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
1E7A            351   ;Calc_Interval:
1E7A            351   ; Freq0 loaded (fundamental frequency)
1E7A C002       351   push AR2
1E7C 75300B     351            mov x+0, #low (key_C5 % 0x10000) 
1E7F 753102     351            mov x+1, #high(key_C5 % 0x10000) 
1E82 753200     351            mov x+2, #low (key_C5 / 0x10000) 
1E85 753300     351            mov x+3, #high(key_C5 / 0x10000)  
1E88            351   ; Load upper ratio
1E88 753402     351            mov y+0, #low (tone_p8a % 0x10000) 
1E8B 753500     351            mov y+1, #high(tone_p8a % 0x10000) 
1E8E 753600     351            mov y+2, #low (tone_p8a / 0x10000) 
1E91 753700     351            mov y+3, #high(tone_p8a / 0x10000) 
1E94 120188     351            lcall mul32
1E97            351            
1E97            351   ; Load lower ratio
1E97 753401     351            mov y+0, #low (tone_p8b % 0x10000) 
1E9A 753500     351            mov y+1, #high(tone_p8b % 0x10000) 
1E9D 753600     351            mov y+2, #low (tone_p8b / 0x10000) 
1EA0 753700     351            mov y+3, #high(tone_p8b / 0x10000) 
1EA3 120215     351            lcall div32
1EA6            351   ; compute value for reload
1EA6            351   ; reload rate = CLK/freq
1EA6 753400     351            mov y+0, #low (CLK % 0x10000) 
1EA9 753580     351            mov y+1, #high(CLK % 0x10000) 
1EAC 753651     351            mov y+2, #low (CLK / 0x10000) 
1EAF 753701     351            mov y+3, #high(CLK / 0x10000) 
1EB2 12028B     351            lcall xchg_xy
1EB5            351            
1EB5 120215     351            lcall div32
1EB8            351            
1EB8            351   ; reload value = 65536-x
1EB8 753400     351            mov y+0, #low (65536 % 0x10000) 
1EBB 753500     351            mov y+1, #high(65536 % 0x10000) 
1EBE 753601     351            mov y+2, #low (65536 / 0x10000) 
1EC1 753700     351            mov y+3, #high(65536 / 0x10000) 
1EC4 12028B     351            lcall xchg_xy
1EC7 1200F4     351            lcall sub32
1ECA            351   ; x now contains the reload value
1ECA            351   ;debug_BCD
1ECA 8530F2     351            mov RL0, x+0
1ECD 8531F4     351            mov RH0, x+1
1ED0            351            
1ED0 D28C       351            setb TR0
1ED2            351            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
1ED2 7A0C       351            mov R2, #12
1ED4 12038E     351            lcall Play_Note_Delay
1ED7 C28C       351            clr TR0
1ED9 C002       351            push AR2
1EDB 7A0A       351            mov R2, #10
1EDD 1202AF     351            lcall ?Wait_Milli_Seconds
1EE0 D002       351            pop AR2
1EE2 D002       351            pop AR2
1EE4            352   
1EE4            353            ; Compute the reload value given the base frequency and interval ratio codes
1EE4            353   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
1EE4            353   ;Calc_Interval:
1EE4            353   ; Freq0 loaded (fundamental frequency)
1EE4 C002       353   push AR2
1EE6 753017     353            mov x+0, #low (key_C6 % 0x10000) 
1EE9 753104     353            mov x+1, #high(key_C6 % 0x10000) 
1EEC 753200     353            mov x+2, #low (key_C6 / 0x10000) 
1EEF 753300     353            mov x+3, #high(key_C6 / 0x10000)  
1EF2            353   ; Load upper ratio
1EF2 753401     353            mov y+0, #low (tone_p1a % 0x10000) 
1EF5 753500     353            mov y+1, #high(tone_p1a % 0x10000) 
1EF8 753600     353            mov y+2, #low (tone_p1a / 0x10000) 
1EFB 753700     353            mov y+3, #high(tone_p1a / 0x10000) 
1EFE 120188     353            lcall mul32
1F01            353            
1F01            353   ; Load lower ratio
1F01 753401     353            mov y+0, #low (tone_p1b % 0x10000) 
1F04 753500     353            mov y+1, #high(tone_p1b % 0x10000) 
1F07 753600     353            mov y+2, #low (tone_p1b / 0x10000) 
1F0A 753700     353            mov y+3, #high(tone_p1b / 0x10000) 
1F0D 120215     353            lcall div32
1F10            353   ; compute value for reload
1F10            353   ; reload rate = CLK/freq
1F10 753400     353            mov y+0, #low (CLK % 0x10000) 
1F13 753580     353            mov y+1, #high(CLK % 0x10000) 
1F16 753651     353            mov y+2, #low (CLK / 0x10000) 
1F19 753701     353            mov y+3, #high(CLK / 0x10000) 
1F1C 12028B     353            lcall xchg_xy
1F1F            353            
1F1F 120215     353            lcall div32
1F22            353            
1F22            353   ; reload value = 65536-x
1F22 753400     353            mov y+0, #low (65536 % 0x10000) 
1F25 753500     353            mov y+1, #high(65536 % 0x10000) 
1F28 753601     353            mov y+2, #low (65536 / 0x10000) 
1F2B 753700     353            mov y+3, #high(65536 / 0x10000) 
1F2E 12028B     353            lcall xchg_xy
1F31 1200F4     353            lcall sub32
1F34            353   ; x now contains the reload value
1F34            353   ;debug_BCD
1F34 8530F2     353            mov RL0, x+0
1F37 8531F4     353            mov RH0, x+1
1F3A            353            
1F3A D28C       353            setb TR0
1F3C            353            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
1F3C 7A02       353            mov R2, #2
1F3E 12038E     353            lcall Play_Note_Delay
1F41 C28C       353            clr TR0
1F43 C002       353            push AR2
1F45 7A0A       353            mov R2, #10
1F47 1202AF     353            lcall ?Wait_Milli_Seconds
1F4A D002       353            pop AR2
1F4C D002       353            pop AR2
1F4E            354            ; Compute the reload value given the base frequency and interval ratio codes
1F4E            354   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
1F4E            354   ;Calc_Interval:
1F4E            354   ; Freq0 loaded (fundamental frequency)
1F4E C002       354   push AR2
1F50 753017     354            mov x+0, #low (key_C6 % 0x10000) 
1F53 753104     354            mov x+1, #high(key_C6 % 0x10000) 
1F56 753200     354            mov x+2, #low (key_C6 / 0x10000) 
1F59 753300     354            mov x+3, #high(key_C6 / 0x10000)  
1F5C            354   ; Load upper ratio
1F5C 753409     354            mov y+0, #low (tone_ma2a % 0x10000) 
1F5F 753500     354            mov y+1, #high(tone_ma2a % 0x10000) 
1F62 753600     354            mov y+2, #low (tone_ma2a / 0x10000) 
1F65 753700     354            mov y+3, #high(tone_ma2a / 0x10000) 
1F68 120188     354            lcall mul32
1F6B            354            
1F6B            354   ; Load lower ratio
1F6B 753408     354            mov y+0, #low (tone_ma2b % 0x10000) 
1F6E 753500     354            mov y+1, #high(tone_ma2b % 0x10000) 
1F71 753600     354            mov y+2, #low (tone_ma2b / 0x10000) 
1F74 753700     354            mov y+3, #high(tone_ma2b / 0x10000) 
1F77 120215     354            lcall div32
1F7A            354   ; compute value for reload
1F7A            354   ; reload rate = CLK/freq
1F7A 753400     354            mov y+0, #low (CLK % 0x10000) 
1F7D 753580     354            mov y+1, #high(CLK % 0x10000) 
1F80 753651     354            mov y+2, #low (CLK / 0x10000) 
1F83 753701     354            mov y+3, #high(CLK / 0x10000) 
1F86 12028B     354            lcall xchg_xy
1F89            354            
1F89 120215     354            lcall div32
1F8C            354            
1F8C            354   ; reload value = 65536-x
1F8C 753400     354            mov y+0, #low (65536 % 0x10000) 
1F8F 753500     354            mov y+1, #high(65536 % 0x10000) 
1F92 753601     354            mov y+2, #low (65536 / 0x10000) 
1F95 753700     354            mov y+3, #high(65536 / 0x10000) 
1F98 12028B     354            lcall xchg_xy
1F9B 1200F4     354            lcall sub32
1F9E            354   ; x now contains the reload value
1F9E            354   ;debug_BCD
1F9E 8530F2     354            mov RL0, x+0
1FA1 8531F4     354            mov RH0, x+1
1FA4            354            
1FA4 D28C       354            setb TR0
1FA6            354            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
1FA6 7A02       354            mov R2, #2
1FA8 12038E     354            lcall Play_Note_Delay
1FAB C28C       354            clr TR0
1FAD C002       354            push AR2
1FAF 7A0A       354            mov R2, #10
1FB1 1202AF     354            lcall ?Wait_Milli_Seconds
1FB4 D002       354            pop AR2
1FB6 D002       354            pop AR2
1FB8            355            ; Compute the reload value given the base frequency and interval ratio codes
1FB8            355   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
1FB8            355   ;Calc_Interval:
1FB8            355   ; Freq0 loaded (fundamental frequency)
1FB8 C002       355   push AR2
1FBA 753017     355            mov x+0, #low (key_C6 % 0x10000) 
1FBD 753104     355            mov x+1, #high(key_C6 % 0x10000) 
1FC0 753200     355            mov x+2, #low (key_C6 / 0x10000) 
1FC3 753300     355            mov x+3, #high(key_C6 / 0x10000)  
1FC6            355   ; Load upper ratio
1FC6 753406     355            mov y+0, #low (tone_mi3a % 0x10000) 
1FC9 753500     355            mov y+1, #high(tone_mi3a % 0x10000) 
1FCC 753600     355            mov y+2, #low (tone_mi3a / 0x10000) 
1FCF 753700     355            mov y+3, #high(tone_mi3a / 0x10000) 
1FD2 120188     355            lcall mul32
1FD5            355            
1FD5            355   ; Load lower ratio
1FD5 753405     355            mov y+0, #low (tone_mi3b % 0x10000) 
1FD8 753500     355            mov y+1, #high(tone_mi3b % 0x10000) 
1FDB 753600     355            mov y+2, #low (tone_mi3b / 0x10000) 
1FDE 753700     355            mov y+3, #high(tone_mi3b / 0x10000) 
1FE1 120215     355            lcall div32
1FE4            355   ; compute value for reload
1FE4            355   ; reload rate = CLK/freq
1FE4 753400     355            mov y+0, #low (CLK % 0x10000) 
1FE7 753580     355            mov y+1, #high(CLK % 0x10000) 
1FEA 753651     355            mov y+2, #low (CLK / 0x10000) 
1FED 753701     355            mov y+3, #high(CLK / 0x10000) 
1FF0 12028B     355            lcall xchg_xy
1FF3            355            
1FF3 120215     355            lcall div32
1FF6            355            
1FF6            355   ; reload value = 65536-x
1FF6 753400     355            mov y+0, #low (65536 % 0x10000) 
1FF9 753500     355            mov y+1, #high(65536 % 0x10000) 
1FFC 753601     355            mov y+2, #low (65536 / 0x10000) 
1FFF 753700     355            mov y+3, #high(65536 / 0x10000) 
2002 12028B     355            lcall xchg_xy
2005 1200F4     355            lcall sub32
2008            355   ; x now contains the reload value
2008            355   ;debug_BCD
2008 8530F2     355            mov RL0, x+0
200B 8531F4     355            mov RH0, x+1
200E            355            
200E D28C       355            setb TR0
2010            355            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
2010 7A02       355            mov R2, #2
2012 12038E     355            lcall Play_Note_Delay
2015 C28C       355            clr TR0
2017 C002       355            push AR2
2019 7A0A       355            mov R2, #10
201B 1202AF     355            lcall ?Wait_Milli_Seconds
201E D002       355            pop AR2
2020 D002       355            pop AR2
2022            356            ; Compute the reload value given the base frequency and interval ratio codes
2022            356   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
2022            356   ;Calc_Interval:
2022            356   ; Freq0 loaded (fundamental frequency)
2022 C002       356   push AR2
2024 753017     356            mov x+0, #low (key_C6 % 0x10000) 
2027 753104     356            mov x+1, #high(key_C6 % 0x10000) 
202A 753200     356            mov x+2, #low (key_C6 / 0x10000) 
202D 753300     356            mov x+3, #high(key_C6 / 0x10000)  
2030            356   ; Load upper ratio
2030 753405     356            mov y+0, #low (tone_ma3a % 0x10000) 
2033 753500     356            mov y+1, #high(tone_ma3a % 0x10000) 
2036 753600     356            mov y+2, #low (tone_ma3a / 0x10000) 
2039 753700     356            mov y+3, #high(tone_ma3a / 0x10000) 
203C 120188     356            lcall mul32
203F            356            
203F            356   ; Load lower ratio
203F 753404     356            mov y+0, #low (tone_ma3b % 0x10000) 
2042 753500     356            mov y+1, #high(tone_ma3b % 0x10000) 
2045 753600     356            mov y+2, #low (tone_ma3b / 0x10000) 
2048 753700     356            mov y+3, #high(tone_ma3b / 0x10000) 
204B 120215     356            lcall div32
204E            356   ; compute value for reload
204E            356   ; reload rate = CLK/freq
204E 753400     356            mov y+0, #low (CLK % 0x10000) 
2051 753580     356            mov y+1, #high(CLK % 0x10000) 
2054 753651     356            mov y+2, #low (CLK / 0x10000) 
2057 753701     356            mov y+3, #high(CLK / 0x10000) 
205A 12028B     356            lcall xchg_xy
205D            356            
205D 120215     356            lcall div32
2060            356            
2060            356   ; reload value = 65536-x
2060 753400     356            mov y+0, #low (65536 % 0x10000) 
2063 753500     356            mov y+1, #high(65536 % 0x10000) 
2066 753601     356            mov y+2, #low (65536 / 0x10000) 
2069 753700     356            mov y+3, #high(65536 / 0x10000) 
206C 12028B     356            lcall xchg_xy
206F 1200F4     356            lcall sub32
2072            356   ; x now contains the reload value
2072            356   ;debug_BCD
2072 8530F2     356            mov RL0, x+0
2075 8531F4     356            mov RH0, x+1
2078            356            
2078 D28C       356            setb TR0
207A            356            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
207A 7A02       356            mov R2, #2
207C 12038E     356            lcall Play_Note_Delay
207F C28C       356            clr TR0
2081 C002       356            push AR2
2083 7A0A       356            mov R2, #10
2085 1202AF     356            lcall ?Wait_Milli_Seconds
2088 D002       356            pop AR2
208A D002       356            pop AR2
208C            357            ; Compute the reload value given the base frequency and interval ratio codes
208C            357   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
208C            357   ;Calc_Interval:
208C            357   ; Freq0 loaded (fundamental frequency)
208C C002       357   push AR2
208E 753017     357            mov x+0, #low (key_C6 % 0x10000) 
2091 753104     357            mov x+1, #high(key_C6 % 0x10000) 
2094 753200     357            mov x+2, #low (key_C6 / 0x10000) 
2097 753300     357            mov x+3, #high(key_C6 / 0x10000)  
209A            357   ; Load upper ratio
209A 753401     357            mov y+0, #low (tone_p1a % 0x10000) 
209D 753500     357            mov y+1, #high(tone_p1a % 0x10000) 
20A0 753600     357            mov y+2, #low (tone_p1a / 0x10000) 
20A3 753700     357            mov y+3, #high(tone_p1a / 0x10000) 
20A6 120188     357            lcall mul32
20A9            357            
20A9            357   ; Load lower ratio
20A9 753401     357            mov y+0, #low (tone_p1b % 0x10000) 
20AC 753500     357            mov y+1, #high(tone_p1b % 0x10000) 
20AF 753600     357            mov y+2, #low (tone_p1b / 0x10000) 
20B2 753700     357            mov y+3, #high(tone_p1b / 0x10000) 
20B5 120215     357            lcall div32
20B8            357   ; compute value for reload
20B8            357   ; reload rate = CLK/freq
20B8 753400     357            mov y+0, #low (CLK % 0x10000) 
20BB 753580     357            mov y+1, #high(CLK % 0x10000) 
20BE 753651     357            mov y+2, #low (CLK / 0x10000) 
20C1 753701     357            mov y+3, #high(CLK / 0x10000) 
20C4 12028B     357            lcall xchg_xy
20C7            357            
20C7 120215     357            lcall div32
20CA            357            
20CA            357   ; reload value = 65536-x
20CA 753400     357            mov y+0, #low (65536 % 0x10000) 
20CD 753500     357            mov y+1, #high(65536 % 0x10000) 
20D0 753601     357            mov y+2, #low (65536 / 0x10000) 
20D3 753700     357            mov y+3, #high(65536 / 0x10000) 
20D6 12028B     357            lcall xchg_xy
20D9 1200F4     357            lcall sub32
20DC            357   ; x now contains the reload value
20DC            357   ;debug_BCD
20DC 8530F2     357            mov RL0, x+0
20DF 8531F4     357            mov RH0, x+1
20E2            357            
20E2 D28C       357            setb TR0
20E4            357            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
20E4 7A02       357            mov R2, #2
20E6 12038E     357            lcall Play_Note_Delay
20E9 C28C       357            clr TR0
20EB C002       357            push AR2
20ED 7A0A       357            mov R2, #10
20EF 1202AF     357            lcall ?Wait_Milli_Seconds
20F2 D002       357            pop AR2
20F4 D002       357            pop AR2
20F6            358            ; Compute the reload value given the base frequency and interval ratio codes
20F6            358   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
20F6            358   ;Calc_Interval:
20F6            358   ; Freq0 loaded (fundamental frequency)
20F6 C002       358   push AR2
20F8 753017     358            mov x+0, #low (key_C6 % 0x10000) 
20FB 753104     358            mov x+1, #high(key_C6 % 0x10000) 
20FE 753200     358            mov x+2, #low (key_C6 / 0x10000) 
2101 753300     358            mov x+3, #high(key_C6 / 0x10000)  
2104            358   ; Load upper ratio
2104 753409     358            mov y+0, #low (tone_ma2a % 0x10000) 
2107 753500     358            mov y+1, #high(tone_ma2a % 0x10000) 
210A 753600     358            mov y+2, #low (tone_ma2a / 0x10000) 
210D 753700     358            mov y+3, #high(tone_ma2a / 0x10000) 
2110 120188     358            lcall mul32
2113            358            
2113            358   ; Load lower ratio
2113 753408     358            mov y+0, #low (tone_ma2b % 0x10000) 
2116 753500     358            mov y+1, #high(tone_ma2b % 0x10000) 
2119 753600     358            mov y+2, #low (tone_ma2b / 0x10000) 
211C 753700     358            mov y+3, #high(tone_ma2b / 0x10000) 
211F 120215     358            lcall div32
2122            358   ; compute value for reload
2122            358   ; reload rate = CLK/freq
2122 753400     358            mov y+0, #low (CLK % 0x10000) 
2125 753580     358            mov y+1, #high(CLK % 0x10000) 
2128 753651     358            mov y+2, #low (CLK / 0x10000) 
212B 753701     358            mov y+3, #high(CLK / 0x10000) 
212E 12028B     358            lcall xchg_xy
2131            358            
2131 120215     358            lcall div32
2134            358            
2134            358   ; reload value = 65536-x
2134 753400     358            mov y+0, #low (65536 % 0x10000) 
2137 753500     358            mov y+1, #high(65536 % 0x10000) 
213A 753601     358            mov y+2, #low (65536 / 0x10000) 
213D 753700     358            mov y+3, #high(65536 / 0x10000) 
2140 12028B     358            lcall xchg_xy
2143 1200F4     358            lcall sub32
2146            358   ; x now contains the reload value
2146            358   ;debug_BCD
2146 8530F2     358            mov RL0, x+0
2149 8531F4     358            mov RH0, x+1
214C            358            
214C D28C       358            setb TR0
214E            358            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
214E 7A02       358            mov R2, #2
2150 12038E     358            lcall Play_Note_Delay
2153 C28C       358            clr TR0
2155 C002       358            push AR2
2157 7A0A       358            mov R2, #10
2159 1202AF     358            lcall ?Wait_Milli_Seconds
215C D002       358            pop AR2
215E D002       358            pop AR2
2160            359            ; Compute the reload value given the base frequency and interval ratio codes
2160            359   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
2160            359   ;Calc_Interval:
2160            359   ; Freq0 loaded (fundamental frequency)
2160 C002       359   push AR2
2162 753017     359            mov x+0, #low (key_C6 % 0x10000) 
2165 753104     359            mov x+1, #high(key_C6 % 0x10000) 
2168 753200     359            mov x+2, #low (key_C6 / 0x10000) 
216B 753300     359            mov x+3, #high(key_C6 / 0x10000)  
216E            359   ; Load upper ratio
216E 753405     359            mov y+0, #low (tone_ma3a % 0x10000) 
2171 753500     359            mov y+1, #high(tone_ma3a % 0x10000) 
2174 753600     359            mov y+2, #low (tone_ma3a / 0x10000) 
2177 753700     359            mov y+3, #high(tone_ma3a / 0x10000) 
217A 120188     359            lcall mul32
217D            359            
217D            359   ; Load lower ratio
217D 753404     359            mov y+0, #low (tone_ma3b % 0x10000) 
2180 753500     359            mov y+1, #high(tone_ma3b % 0x10000) 
2183 753600     359            mov y+2, #low (tone_ma3b / 0x10000) 
2186 753700     359            mov y+3, #high(tone_ma3b / 0x10000) 
2189 120215     359            lcall div32
218C            359   ; compute value for reload
218C            359   ; reload rate = CLK/freq
218C 753400     359            mov y+0, #low (CLK % 0x10000) 
218F 753580     359            mov y+1, #high(CLK % 0x10000) 
2192 753651     359            mov y+2, #low (CLK / 0x10000) 
2195 753701     359            mov y+3, #high(CLK / 0x10000) 
2198 12028B     359            lcall xchg_xy
219B            359            
219B 120215     359            lcall div32
219E            359            
219E            359   ; reload value = 65536-x
219E 753400     359            mov y+0, #low (65536 % 0x10000) 
21A1 753500     359            mov y+1, #high(65536 % 0x10000) 
21A4 753601     359            mov y+2, #low (65536 / 0x10000) 
21A7 753700     359            mov y+3, #high(65536 / 0x10000) 
21AA 12028B     359            lcall xchg_xy
21AD 1200F4     359            lcall sub32
21B0            359   ; x now contains the reload value
21B0            359   ;debug_BCD
21B0 8530F2     359            mov RL0, x+0
21B3 8531F4     359            mov RH0, x+1
21B6            359            
21B6 D28C       359            setb TR0
21B8            359            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
21B8 7A04       359            mov R2, #4
21BA 12038E     359            lcall Play_Note_Delay
21BD C28C       359            clr TR0
21BF C002       359            push AR2
21C1 7A0A       359            mov R2, #10
21C3 1202AF     359            lcall ?Wait_Milli_Seconds
21C6 D002       359            pop AR2
21C8 D002       359            pop AR2
21CA            360            ; Compute the reload value given the base frequency and interval ratio codes
21CA            360   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
21CA            360   ;Calc_Interval:
21CA            360   ; Freq0 loaded (fundamental frequency)
21CA C002       360   push AR2
21CC 753017     360            mov x+0, #low (key_C6 % 0x10000) 
21CF 753104     360            mov x+1, #high(key_C6 % 0x10000) 
21D2 753200     360            mov x+2, #low (key_C6 / 0x10000) 
21D5 753300     360            mov x+3, #high(key_C6 / 0x10000)  
21D8            360   ; Load upper ratio
21D8 75340F     360            mov y+0, #low (tone_mi2b % 0x10000) 
21DB 753500     360            mov y+1, #high(tone_mi2b % 0x10000) 
21DE 753600     360            mov y+2, #low (tone_mi2b / 0x10000) 
21E1 753700     360            mov y+3, #high(tone_mi2b / 0x10000) 
21E4 120188     360            lcall mul32
21E7            360            
21E7            360   ; Load lower ratio
21E7 753410     360            mov y+0, #low (tone_mi2a % 0x10000) 
21EA 753500     360            mov y+1, #high(tone_mi2a % 0x10000) 
21ED 753600     360            mov y+2, #low (tone_mi2a / 0x10000) 
21F0 753700     360            mov y+3, #high(tone_mi2a / 0x10000) 
21F3 120215     360            lcall div32
21F6            360   ; compute value for reload
21F6            360   ; reload rate = CLK/freq
21F6 753400     360            mov y+0, #low (CLK % 0x10000) 
21F9 753580     360            mov y+1, #high(CLK % 0x10000) 
21FC 753651     360            mov y+2, #low (CLK / 0x10000) 
21FF 753701     360            mov y+3, #high(CLK / 0x10000) 
2202 12028B     360            lcall xchg_xy
2205            360            
2205 120215     360            lcall div32
2208            360            
2208            360   ; reload value = 65536-x
2208 753400     360            mov y+0, #low (65536 % 0x10000) 
220B 753500     360            mov y+1, #high(65536 % 0x10000) 
220E 753601     360            mov y+2, #low (65536 / 0x10000) 
2211 753700     360            mov y+3, #high(65536 / 0x10000) 
2214 12028B     360            lcall xchg_xy
2217 1200F4     360            lcall sub32
221A            360   ; x now contains the reload value
221A            360   ;debug_BCD
221A 8530F2     360            mov RL0, x+0
221D 8531F4     360            mov RH0, x+1
2220            360            
2220 D28C       360            setb TR0
2222            360            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
2222 7A02       360            mov R2, #2
2224 12038E     360            lcall Play_Note_Delay
2227 C28C       360            clr TR0
2229 C002       360            push AR2
222B 7A0A       360            mov R2, #10
222D 1202AF     360            lcall ?Wait_Milli_Seconds
2230 D002       360            pop AR2
2232 D002       360            pop AR2
2234            361            ; Compute the reload value given the base frequency and interval ratio codes
2234            361   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
2234            361   ;Calc_Interval:
2234            361   ; Freq0 loaded (fundamental frequency)
2234 C002       361   push AR2
2236 753017     361            mov x+0, #low (key_C6 % 0x10000) 
2239 753104     361            mov x+1, #high(key_C6 % 0x10000) 
223C 753200     361            mov x+2, #low (key_C6 / 0x10000) 
223F 753300     361            mov x+3, #high(key_C6 / 0x10000)  
2242            361   ; Load upper ratio
2242 753409     361            mov y+0, #low (tone_ma2a % 0x10000) 
2245 753500     361            mov y+1, #high(tone_ma2a % 0x10000) 
2248 753600     361            mov y+2, #low (tone_ma2a / 0x10000) 
224B 753700     361            mov y+3, #high(tone_ma2a / 0x10000) 
224E 120188     361            lcall mul32
2251            361            
2251            361   ; Load lower ratio
2251 753408     361            mov y+0, #low (tone_ma2b % 0x10000) 
2254 753500     361            mov y+1, #high(tone_ma2b % 0x10000) 
2257 753600     361            mov y+2, #low (tone_ma2b / 0x10000) 
225A 753700     361            mov y+3, #high(tone_ma2b / 0x10000) 
225D 120215     361            lcall div32
2260            361   ; compute value for reload
2260            361   ; reload rate = CLK/freq
2260 753400     361            mov y+0, #low (CLK % 0x10000) 
2263 753580     361            mov y+1, #high(CLK % 0x10000) 
2266 753651     361            mov y+2, #low (CLK / 0x10000) 
2269 753701     361            mov y+3, #high(CLK / 0x10000) 
226C 12028B     361            lcall xchg_xy
226F            361            
226F 120215     361            lcall div32
2272            361            
2272            361   ; reload value = 65536-x
2272 753400     361            mov y+0, #low (65536 % 0x10000) 
2275 753500     361            mov y+1, #high(65536 % 0x10000) 
2278 753601     361            mov y+2, #low (65536 / 0x10000) 
227B 753700     361            mov y+3, #high(65536 / 0x10000) 
227E 12028B     361            lcall xchg_xy
2281 1200F4     361            lcall sub32
2284            361   ; x now contains the reload value
2284            361   ;debug_BCD
2284 8530F2     361            mov RL0, x+0
2287 8531F4     361            mov RH0, x+1
228A            361            
228A D28C       361            setb TR0
228C            361            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
228C 7A04       361            mov R2, #4
228E 12038E     361            lcall Play_Note_Delay
2291 C28C       361            clr TR0
2293 C002       361            push AR2
2295 7A0A       361            mov R2, #10
2297 1202AF     361            lcall ?Wait_Milli_Seconds
229A D002       361            pop AR2
229C D002       361            pop AR2
229E            362            ; Compute the reload value given the base frequency and interval ratio codes
229E            362   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
229E            362   ;Calc_Interval:
229E            362   ; Freq0 loaded (fundamental frequency)
229E C002       362   push AR2
22A0 753017     362            mov x+0, #low (key_C6 % 0x10000) 
22A3 753104     362            mov x+1, #high(key_C6 % 0x10000) 
22A6 753200     362            mov x+2, #low (key_C6 / 0x10000) 
22A9 753300     362            mov x+3, #high(key_C6 / 0x10000)  
22AC            362   ; Load upper ratio
22AC 753401     362            mov y+0, #low (tone_p1a % 0x10000) 
22AF 753500     362            mov y+1, #high(tone_p1a % 0x10000) 
22B2 753600     362            mov y+2, #low (tone_p1a / 0x10000) 
22B5 753700     362            mov y+3, #high(tone_p1a / 0x10000) 
22B8 120188     362            lcall mul32
22BB            362            
22BB            362   ; Load lower ratio
22BB 753401     362            mov y+0, #low (tone_p1b % 0x10000) 
22BE 753500     362            mov y+1, #high(tone_p1b % 0x10000) 
22C1 753600     362            mov y+2, #low (tone_p1b / 0x10000) 
22C4 753700     362            mov y+3, #high(tone_p1b / 0x10000) 
22C7 120215     362            lcall div32
22CA            362   ; compute value for reload
22CA            362   ; reload rate = CLK/freq
22CA 753400     362            mov y+0, #low (CLK % 0x10000) 
22CD 753580     362            mov y+1, #high(CLK % 0x10000) 
22D0 753651     362            mov y+2, #low (CLK / 0x10000) 
22D3 753701     362            mov y+3, #high(CLK / 0x10000) 
22D6 12028B     362            lcall xchg_xy
22D9            362            
22D9 120215     362            lcall div32
22DC            362            
22DC            362   ; reload value = 65536-x
22DC 753400     362            mov y+0, #low (65536 % 0x10000) 
22DF 753500     362            mov y+1, #high(65536 % 0x10000) 
22E2 753601     362            mov y+2, #low (65536 / 0x10000) 
22E5 753700     362            mov y+3, #high(65536 / 0x10000) 
22E8 12028B     362            lcall xchg_xy
22EB 1200F4     362            lcall sub32
22EE            362   ; x now contains the reload value
22EE            362   ;debug_BCD
22EE 8530F2     362            mov RL0, x+0
22F1 8531F4     362            mov RH0, x+1
22F4            362            
22F4 D28C       362            setb TR0
22F6            362            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
22F6 7A0C       362            mov R2, #12
22F8 12038E     362            lcall Play_Note_Delay
22FB C28C       362            clr TR0
22FD C002       362            push AR2
22FF 7A0A       362            mov R2, #10
2301 1202AF     362            lcall ?Wait_Milli_Seconds
2304 D002       362            pop AR2
2306 D002       362            pop AR2
2308            363   
2308            364            ; Compute the reload value given the base frequency and interval ratio codes
2308            364   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
2308            364   ;Calc_Interval:
2308            364   ; Freq0 loaded (fundamental frequency)
2308 C002       364   push AR2
230A 753017     364            mov x+0, #low (key_C6 % 0x10000) 
230D 753104     364            mov x+1, #high(key_C6 % 0x10000) 
2310 753200     364            mov x+2, #low (key_C6 / 0x10000) 
2313 753300     364            mov x+3, #high(key_C6 / 0x10000)  
2316            364   ; Load upper ratio
2316 753401     364            mov y+0, #low (tone_p1a % 0x10000) 
2319 753500     364            mov y+1, #high(tone_p1a % 0x10000) 
231C 753600     364            mov y+2, #low (tone_p1a / 0x10000) 
231F 753700     364            mov y+3, #high(tone_p1a / 0x10000) 
2322 120188     364            lcall mul32
2325            364            
2325            364   ; Load lower ratio
2325 753401     364            mov y+0, #low (tone_p1b % 0x10000) 
2328 753500     364            mov y+1, #high(tone_p1b % 0x10000) 
232B 753600     364            mov y+2, #low (tone_p1b / 0x10000) 
232E 753700     364            mov y+3, #high(tone_p1b / 0x10000) 
2331 120215     364            lcall div32
2334            364   ; compute value for reload
2334            364   ; reload rate = CLK/freq
2334 753400     364            mov y+0, #low (CLK % 0x10000) 
2337 753580     364            mov y+1, #high(CLK % 0x10000) 
233A 753651     364            mov y+2, #low (CLK / 0x10000) 
233D 753701     364            mov y+3, #high(CLK / 0x10000) 
2340 12028B     364            lcall xchg_xy
2343            364            
2343 120215     364            lcall div32
2346            364            
2346            364   ; reload value = 65536-x
2346 753400     364            mov y+0, #low (65536 % 0x10000) 
2349 753500     364            mov y+1, #high(65536 % 0x10000) 
234C 753601     364            mov y+2, #low (65536 / 0x10000) 
234F 753700     364            mov y+3, #high(65536 / 0x10000) 
2352 12028B     364            lcall xchg_xy
2355 1200F4     364            lcall sub32
2358            364   ; x now contains the reload value
2358            364   ;debug_BCD
2358 8530F2     364            mov RL0, x+0
235B 8531F4     364            mov RH0, x+1
235E            364            
235E D28C       364            setb TR0
2360            364            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
2360 7A02       364            mov R2, #2
2362 12038E     364            lcall Play_Note_Delay
2365 C28C       364            clr TR0
2367 C002       364            push AR2
2369 7A0A       364            mov R2, #10
236B 1202AF     364            lcall ?Wait_Milli_Seconds
236E D002       364            pop AR2
2370 D002       364            pop AR2
2372            365            ; Compute the reload value given the base frequency and interval ratio codes
2372            365   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
2372            365   ;Calc_Interval:
2372            365   ; Freq0 loaded (fundamental frequency)
2372 C002       365   push AR2
2374 753017     365            mov x+0, #low (key_C6 % 0x10000) 
2377 753104     365            mov x+1, #high(key_C6 % 0x10000) 
237A 753200     365            mov x+2, #low (key_C6 / 0x10000) 
237D 753300     365            mov x+3, #high(key_C6 / 0x10000)  
2380            365   ; Load upper ratio
2380 753409     365            mov y+0, #low (tone_ma2a % 0x10000) 
2383 753500     365            mov y+1, #high(tone_ma2a % 0x10000) 
2386 753600     365            mov y+2, #low (tone_ma2a / 0x10000) 
2389 753700     365            mov y+3, #high(tone_ma2a / 0x10000) 
238C 120188     365            lcall mul32
238F            365            
238F            365   ; Load lower ratio
238F 753408     365            mov y+0, #low (tone_ma2b % 0x10000) 
2392 753500     365            mov y+1, #high(tone_ma2b % 0x10000) 
2395 753600     365            mov y+2, #low (tone_ma2b / 0x10000) 
2398 753700     365            mov y+3, #high(tone_ma2b / 0x10000) 
239B 120215     365            lcall div32
239E            365   ; compute value for reload
239E            365   ; reload rate = CLK/freq
239E 753400     365            mov y+0, #low (CLK % 0x10000) 
23A1 753580     365            mov y+1, #high(CLK % 0x10000) 
23A4 753651     365            mov y+2, #low (CLK / 0x10000) 
23A7 753701     365            mov y+3, #high(CLK / 0x10000) 
23AA 12028B     365            lcall xchg_xy
23AD            365            
23AD 120215     365            lcall div32
23B0            365            
23B0            365   ; reload value = 65536-x
23B0 753400     365            mov y+0, #low (65536 % 0x10000) 
23B3 753500     365            mov y+1, #high(65536 % 0x10000) 
23B6 753601     365            mov y+2, #low (65536 / 0x10000) 
23B9 753700     365            mov y+3, #high(65536 / 0x10000) 
23BC 12028B     365            lcall xchg_xy
23BF 1200F4     365            lcall sub32
23C2            365   ; x now contains the reload value
23C2            365   ;debug_BCD
23C2 8530F2     365            mov RL0, x+0
23C5 8531F4     365            mov RH0, x+1
23C8            365            
23C8 D28C       365            setb TR0
23CA            365            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
23CA 7A02       365            mov R2, #2
23CC 12038E     365            lcall Play_Note_Delay
23CF C28C       365            clr TR0
23D1 C002       365            push AR2
23D3 7A0A       365            mov R2, #10
23D5 1202AF     365            lcall ?Wait_Milli_Seconds
23D8 D002       365            pop AR2
23DA D002       365            pop AR2
23DC            366            ; Compute the reload value given the base frequency and interval ratio codes
23DC            366   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
23DC            366   ;Calc_Interval:
23DC            366   ; Freq0 loaded (fundamental frequency)
23DC C002       366   push AR2
23DE 753017     366            mov x+0, #low (key_C6 % 0x10000) 
23E1 753104     366            mov x+1, #high(key_C6 % 0x10000) 
23E4 753200     366            mov x+2, #low (key_C6 / 0x10000) 
23E7 753300     366            mov x+3, #high(key_C6 / 0x10000)  
23EA            366   ; Load upper ratio
23EA 753405     366            mov y+0, #low (tone_ma3a % 0x10000) 
23ED 753500     366            mov y+1, #high(tone_ma3a % 0x10000) 
23F0 753600     366            mov y+2, #low (tone_ma3a / 0x10000) 
23F3 753700     366            mov y+3, #high(tone_ma3a / 0x10000) 
23F6 120188     366            lcall mul32
23F9            366            
23F9            366   ; Load lower ratio
23F9 753404     366            mov y+0, #low (tone_ma3b % 0x10000) 
23FC 753500     366            mov y+1, #high(tone_ma3b % 0x10000) 
23FF 753600     366            mov y+2, #low (tone_ma3b / 0x10000) 
2402 753700     366            mov y+3, #high(tone_ma3b / 0x10000) 
2405 120215     366            lcall div32
2408            366   ; compute value for reload
2408            366   ; reload rate = CLK/freq
2408 753400     366            mov y+0, #low (CLK % 0x10000) 
240B 753580     366            mov y+1, #high(CLK % 0x10000) 
240E 753651     366            mov y+2, #low (CLK / 0x10000) 
2411 753701     366            mov y+3, #high(CLK / 0x10000) 
2414 12028B     366            lcall xchg_xy
2417            366            
2417 120215     366            lcall div32
241A            366            
241A            366   ; reload value = 65536-x
241A 753400     366            mov y+0, #low (65536 % 0x10000) 
241D 753500     366            mov y+1, #high(65536 % 0x10000) 
2420 753601     366            mov y+2, #low (65536 / 0x10000) 
2423 753700     366            mov y+3, #high(65536 / 0x10000) 
2426 12028B     366            lcall xchg_xy
2429 1200F4     366            lcall sub32
242C            366   ; x now contains the reload value
242C            366   ;debug_BCD
242C 8530F2     366            mov RL0, x+0
242F 8531F4     366            mov RH0, x+1
2432            366            
2432 D28C       366            setb TR0
2434            366            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
2434 7A02       366            mov R2, #2
2436 12038E     366            lcall Play_Note_Delay
2439 C28C       366            clr TR0
243B C002       366            push AR2
243D 7A0A       366            mov R2, #10
243F 1202AF     366            lcall ?Wait_Milli_Seconds
2442 D002       366            pop AR2
2444 D002       366            pop AR2
2446            367            ; Compute the reload value given the base frequency and interval ratio codes
2446            367   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
2446            367   ;Calc_Interval:
2446            367   ; Freq0 loaded (fundamental frequency)
2446 C002       367   push AR2
2448 753017     367            mov x+0, #low (key_C6 % 0x10000) 
244B 753104     367            mov x+1, #high(key_C6 % 0x10000) 
244E 753200     367            mov x+2, #low (key_C6 / 0x10000) 
2451 753300     367            mov x+3, #high(key_C6 / 0x10000)  
2454            367   ; Load upper ratio
2454 753401     367            mov y+0, #low (tone_p1a % 0x10000) 
2457 753500     367            mov y+1, #high(tone_p1a % 0x10000) 
245A 753600     367            mov y+2, #low (tone_p1a / 0x10000) 
245D 753700     367            mov y+3, #high(tone_p1a / 0x10000) 
2460 120188     367            lcall mul32
2463            367            
2463            367   ; Load lower ratio
2463 753401     367            mov y+0, #low (tone_p1b % 0x10000) 
2466 753500     367            mov y+1, #high(tone_p1b % 0x10000) 
2469 753600     367            mov y+2, #low (tone_p1b / 0x10000) 
246C 753700     367            mov y+3, #high(tone_p1b / 0x10000) 
246F 120215     367            lcall div32
2472            367   ; compute value for reload
2472            367   ; reload rate = CLK/freq
2472 753400     367            mov y+0, #low (CLK % 0x10000) 
2475 753580     367            mov y+1, #high(CLK % 0x10000) 
2478 753651     367            mov y+2, #low (CLK / 0x10000) 
247B 753701     367            mov y+3, #high(CLK / 0x10000) 
247E 12028B     367            lcall xchg_xy
2481            367            
2481 120215     367            lcall div32
2484            367            
2484            367   ; reload value = 65536-x
2484 753400     367            mov y+0, #low (65536 % 0x10000) 
2487 753500     367            mov y+1, #high(65536 % 0x10000) 
248A 753601     367            mov y+2, #low (65536 / 0x10000) 
248D 753700     367            mov y+3, #high(65536 / 0x10000) 
2490 12028B     367            lcall xchg_xy
2493 1200F4     367            lcall sub32
2496            367   ; x now contains the reload value
2496            367   ;debug_BCD
2496 8530F2     367            mov RL0, x+0
2499 8531F4     367            mov RH0, x+1
249C            367            
249C D28C       367            setb TR0
249E            367            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
249E 7A02       367            mov R2, #2
24A0 12038E     367            lcall Play_Note_Delay
24A3 C28C       367            clr TR0
24A5 C002       367            push AR2
24A7 7A0A       367            mov R2, #10
24A9 1202AF     367            lcall ?Wait_Milli_Seconds
24AC D002       367            pop AR2
24AE D002       367            pop AR2
24B0            368            ; Compute the reload value given the base frequency and interval ratio codes
24B0            368   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
24B0            368   ;Calc_Interval:
24B0            368   ; Freq0 loaded (fundamental frequency)
24B0 C002       368   push AR2
24B2 753017     368            mov x+0, #low (key_C6 % 0x10000) 
24B5 753104     368            mov x+1, #high(key_C6 % 0x10000) 
24B8 753200     368            mov x+2, #low (key_C6 / 0x10000) 
24BB 753300     368            mov x+3, #high(key_C6 / 0x10000)  
24BE            368   ; Load upper ratio
24BE 753409     368            mov y+0, #low (tone_ma2a % 0x10000) 
24C1 753500     368            mov y+1, #high(tone_ma2a % 0x10000) 
24C4 753600     368            mov y+2, #low (tone_ma2a / 0x10000) 
24C7 753700     368            mov y+3, #high(tone_ma2a / 0x10000) 
24CA 120188     368            lcall mul32
24CD            368            
24CD            368   ; Load lower ratio
24CD 753408     368            mov y+0, #low (tone_ma2b % 0x10000) 
24D0 753500     368            mov y+1, #high(tone_ma2b % 0x10000) 
24D3 753600     368            mov y+2, #low (tone_ma2b / 0x10000) 
24D6 753700     368            mov y+3, #high(tone_ma2b / 0x10000) 
24D9 120215     368            lcall div32
24DC            368   ; compute value for reload
24DC            368   ; reload rate = CLK/freq
24DC 753400     368            mov y+0, #low (CLK % 0x10000) 
24DF 753580     368            mov y+1, #high(CLK % 0x10000) 
24E2 753651     368            mov y+2, #low (CLK / 0x10000) 
24E5 753701     368            mov y+3, #high(CLK / 0x10000) 
24E8 12028B     368            lcall xchg_xy
24EB            368            
24EB 120215     368            lcall div32
24EE            368            
24EE            368   ; reload value = 65536-x
24EE 753400     368            mov y+0, #low (65536 % 0x10000) 
24F1 753500     368            mov y+1, #high(65536 % 0x10000) 
24F4 753601     368            mov y+2, #low (65536 / 0x10000) 
24F7 753700     368            mov y+3, #high(65536 / 0x10000) 
24FA 12028B     368            lcall xchg_xy
24FD 1200F4     368            lcall sub32
2500            368   ; x now contains the reload value
2500            368   ;debug_BCD
2500 8530F2     368            mov RL0, x+0
2503 8531F4     368            mov RH0, x+1
2506            368            
2506 D28C       368            setb TR0
2508            368            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
2508 7A02       368            mov R2, #2
250A 12038E     368            lcall Play_Note_Delay
250D C28C       368            clr TR0
250F C002       368            push AR2
2511 7A0A       368            mov R2, #10
2513 1202AF     368            lcall ?Wait_Milli_Seconds
2516 D002       368            pop AR2
2518 D002       368            pop AR2
251A            369            ; Compute the reload value given the base frequency and interval ratio codes
251A            369   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
251A            369   ;Calc_Interval:
251A            369   ; Freq0 loaded (fundamental frequency)
251A C002       369   push AR2
251C 753017     369            mov x+0, #low (key_C6 % 0x10000) 
251F 753104     369            mov x+1, #high(key_C6 % 0x10000) 
2522 753200     369            mov x+2, #low (key_C6 / 0x10000) 
2525 753300     369            mov x+3, #high(key_C6 / 0x10000)  
2528            369   ; Load upper ratio
2528 753405     369            mov y+0, #low (tone_ma3a % 0x10000) 
252B 753500     369            mov y+1, #high(tone_ma3a % 0x10000) 
252E 753600     369            mov y+2, #low (tone_ma3a / 0x10000) 
2531 753700     369            mov y+3, #high(tone_ma3a / 0x10000) 
2534 120188     369            lcall mul32
2537            369            
2537            369   ; Load lower ratio
2537 753404     369            mov y+0, #low (tone_ma3b % 0x10000) 
253A 753500     369            mov y+1, #high(tone_ma3b % 0x10000) 
253D 753600     369            mov y+2, #low (tone_ma3b / 0x10000) 
2540 753700     369            mov y+3, #high(tone_ma3b / 0x10000) 
2543 120215     369            lcall div32
2546            369   ; compute value for reload
2546            369   ; reload rate = CLK/freq
2546 753400     369            mov y+0, #low (CLK % 0x10000) 
2549 753580     369            mov y+1, #high(CLK % 0x10000) 
254C 753651     369            mov y+2, #low (CLK / 0x10000) 
254F 753701     369            mov y+3, #high(CLK / 0x10000) 
2552 12028B     369            lcall xchg_xy
2555            369            
2555 120215     369            lcall div32
2558            369            
2558            369   ; reload value = 65536-x
2558 753400     369            mov y+0, #low (65536 % 0x10000) 
255B 753500     369            mov y+1, #high(65536 % 0x10000) 
255E 753601     369            mov y+2, #low (65536 / 0x10000) 
2561 753700     369            mov y+3, #high(65536 / 0x10000) 
2564 12028B     369            lcall xchg_xy
2567 1200F4     369            lcall sub32
256A            369   ; x now contains the reload value
256A            369   ;debug_BCD
256A 8530F2     369            mov RL0, x+0
256D 8531F4     369            mov RH0, x+1
2570            369            
2570 D28C       369            setb TR0
2572            369            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
2572 7A04       369            mov R2, #4
2574 12038E     369            lcall Play_Note_Delay
2577 C28C       369            clr TR0
2579 C002       369            push AR2
257B 7A0A       369            mov R2, #10
257D 1202AF     369            lcall ?Wait_Milli_Seconds
2580 D002       369            pop AR2
2582 D002       369            pop AR2
2584            370   
2584            371            ; Compute the reload value given the base frequency and interval ratio codes
2584            371   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
2584            371   ;Calc_Interval:
2584            371   ; Freq0 loaded (fundamental frequency)
2584 C002       371   push AR2
2586 753017     371            mov x+0, #low (key_C6 % 0x10000) 
2589 753104     371            mov x+1, #high(key_C6 % 0x10000) 
258C 753200     371            mov x+2, #low (key_C6 / 0x10000) 
258F 753300     371            mov x+3, #high(key_C6 / 0x10000)  
2592            371   ; Load upper ratio
2592 753401     371            mov y+0, #low (tone_p1a % 0x10000) 
2595 753500     371            mov y+1, #high(tone_p1a % 0x10000) 
2598 753600     371            mov y+2, #low (tone_p1a / 0x10000) 
259B 753700     371            mov y+3, #high(tone_p1a / 0x10000) 
259E 120188     371            lcall mul32
25A1            371            
25A1            371   ; Load lower ratio
25A1 753401     371            mov y+0, #low (tone_p1b % 0x10000) 
25A4 753500     371            mov y+1, #high(tone_p1b % 0x10000) 
25A7 753600     371            mov y+2, #low (tone_p1b / 0x10000) 
25AA 753700     371            mov y+3, #high(tone_p1b / 0x10000) 
25AD 120215     371            lcall div32
25B0            371   ; compute value for reload
25B0            371   ; reload rate = CLK/freq
25B0 753400     371            mov y+0, #low (CLK % 0x10000) 
25B3 753580     371            mov y+1, #high(CLK % 0x10000) 
25B6 753651     371            mov y+2, #low (CLK / 0x10000) 
25B9 753701     371            mov y+3, #high(CLK / 0x10000) 
25BC 12028B     371            lcall xchg_xy
25BF            371            
25BF 120215     371            lcall div32
25C2            371            
25C2            371   ; reload value = 65536-x
25C2 753400     371            mov y+0, #low (65536 % 0x10000) 
25C5 753500     371            mov y+1, #high(65536 % 0x10000) 
25C8 753601     371            mov y+2, #low (65536 / 0x10000) 
25CB 753700     371            mov y+3, #high(65536 / 0x10000) 
25CE 12028B     371            lcall xchg_xy
25D1 1200F4     371            lcall sub32
25D4            371   ; x now contains the reload value
25D4            371   ;debug_BCD
25D4 8530F2     371            mov RL0, x+0
25D7 8531F4     371            mov RH0, x+1
25DA            371            
25DA D28C       371            setb TR0
25DC            371            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
25DC 7A02       371            mov R2, #2
25DE 12038E     371            lcall Play_Note_Delay
25E1 C28C       371            clr TR0
25E3 C002       371            push AR2
25E5 7A0A       371            mov R2, #10
25E7 1202AF     371            lcall ?Wait_Milli_Seconds
25EA D002       371            pop AR2
25EC D002       371            pop AR2
25EE            372            ; Compute the reload value given the base frequency and interval ratio codes
25EE            372   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
25EE            372   ;Calc_Interval:
25EE            372   ; Freq0 loaded (fundamental frequency)
25EE C002       372   push AR2
25F0 753017     372            mov x+0, #low (key_C6 % 0x10000) 
25F3 753104     372            mov x+1, #high(key_C6 % 0x10000) 
25F6 753200     372            mov x+2, #low (key_C6 / 0x10000) 
25F9 753300     372            mov x+3, #high(key_C6 / 0x10000)  
25FC            372   ; Load upper ratio
25FC 753409     372            mov y+0, #low (tone_ma2a % 0x10000) 
25FF 753500     372            mov y+1, #high(tone_ma2a % 0x10000) 
2602 753600     372            mov y+2, #low (tone_ma2a / 0x10000) 
2605 753700     372            mov y+3, #high(tone_ma2a / 0x10000) 
2608 120188     372            lcall mul32
260B            372            
260B            372   ; Load lower ratio
260B 753408     372            mov y+0, #low (tone_ma2b % 0x10000) 
260E 753500     372            mov y+1, #high(tone_ma2b % 0x10000) 
2611 753600     372            mov y+2, #low (tone_ma2b / 0x10000) 
2614 753700     372            mov y+3, #high(tone_ma2b / 0x10000) 
2617 120215     372            lcall div32
261A            372   ; compute value for reload
261A            372   ; reload rate = CLK/freq
261A 753400     372            mov y+0, #low (CLK % 0x10000) 
261D 753580     372            mov y+1, #high(CLK % 0x10000) 
2620 753651     372            mov y+2, #low (CLK / 0x10000) 
2623 753701     372            mov y+3, #high(CLK / 0x10000) 
2626 12028B     372            lcall xchg_xy
2629            372            
2629 120215     372            lcall div32
262C            372            
262C            372   ; reload value = 65536-x
262C 753400     372            mov y+0, #low (65536 % 0x10000) 
262F 753500     372            mov y+1, #high(65536 % 0x10000) 
2632 753601     372            mov y+2, #low (65536 / 0x10000) 
2635 753700     372            mov y+3, #high(65536 / 0x10000) 
2638 12028B     372            lcall xchg_xy
263B 1200F4     372            lcall sub32
263E            372   ; x now contains the reload value
263E            372   ;debug_BCD
263E 8530F2     372            mov RL0, x+0
2641 8531F4     372            mov RH0, x+1
2644            372            
2644 D28C       372            setb TR0
2646            372            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
2646 7A02       372            mov R2, #2
2648 12038E     372            lcall Play_Note_Delay
264B C28C       372            clr TR0
264D C002       372            push AR2
264F 7A0A       372            mov R2, #10
2651 1202AF     372            lcall ?Wait_Milli_Seconds
2654 D002       372            pop AR2
2656 D002       372            pop AR2
2658            373            ; Compute the reload value given the base frequency and interval ratio codes
2658            373   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
2658            373   ;Calc_Interval:
2658            373   ; Freq0 loaded (fundamental frequency)
2658 C002       373   push AR2
265A 753017     373            mov x+0, #low (key_C6 % 0x10000) 
265D 753104     373            mov x+1, #high(key_C6 % 0x10000) 
2660 753200     373            mov x+2, #low (key_C6 / 0x10000) 
2663 753300     373            mov x+3, #high(key_C6 / 0x10000)  
2666            373   ; Load upper ratio
2666 753401     373            mov y+0, #low (tone_p1a % 0x10000) 
2669 753500     373            mov y+1, #high(tone_p1a % 0x10000) 
266C 753600     373            mov y+2, #low (tone_p1a / 0x10000) 
266F 753700     373            mov y+3, #high(tone_p1a / 0x10000) 
2672 120188     373            lcall mul32
2675            373            
2675            373   ; Load lower ratio
2675 753401     373            mov y+0, #low (tone_p1b % 0x10000) 
2678 753500     373            mov y+1, #high(tone_p1b % 0x10000) 
267B 753600     373            mov y+2, #low (tone_p1b / 0x10000) 
267E 753700     373            mov y+3, #high(tone_p1b / 0x10000) 
2681 120215     373            lcall div32
2684            373   ; compute value for reload
2684            373   ; reload rate = CLK/freq
2684 753400     373            mov y+0, #low (CLK % 0x10000) 
2687 753580     373            mov y+1, #high(CLK % 0x10000) 
268A 753651     373            mov y+2, #low (CLK / 0x10000) 
268D 753701     373            mov y+3, #high(CLK / 0x10000) 
2690 12028B     373            lcall xchg_xy
2693            373            
2693 120215     373            lcall div32
2696            373            
2696            373   ; reload value = 65536-x
2696 753400     373            mov y+0, #low (65536 % 0x10000) 
2699 753500     373            mov y+1, #high(65536 % 0x10000) 
269C 753601     373            mov y+2, #low (65536 / 0x10000) 
269F 753700     373            mov y+3, #high(65536 / 0x10000) 
26A2 12028B     373            lcall xchg_xy
26A5 1200F4     373            lcall sub32
26A8            373   ; x now contains the reload value
26A8            373   ;debug_BCD
26A8 8530F2     373            mov RL0, x+0
26AB 8531F4     373            mov RH0, x+1
26AE            373            
26AE D28C       373            setb TR0
26B0            373            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
26B0 7A02       373            mov R2, #2
26B2 12038E     373            lcall Play_Note_Delay
26B5 C28C       373            clr TR0
26B7 C002       373            push AR2
26B9 7A0A       373            mov R2, #10
26BB 1202AF     373            lcall ?Wait_Milli_Seconds
26BE D002       373            pop AR2
26C0 D002       373            pop AR2
26C2            374   
26C2            375            ; Compute the reload value given the base frequency and interval ratio codes
26C2            375   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
26C2            375   ;Calc_Interval:
26C2            375   ; Freq0 loaded (fundamental frequency)
26C2 C002       375   push AR2
26C4 753017     375            mov x+0, #low (key_C6 % 0x10000) 
26C7 753104     375            mov x+1, #high(key_C6 % 0x10000) 
26CA 753200     375            mov x+2, #low (key_C6 / 0x10000) 
26CD 753300     375            mov x+3, #high(key_C6 / 0x10000)  
26D0            375   ; Load upper ratio
26D0 753405     375            mov y+0, #low (tone_ma3a % 0x10000) 
26D3 753500     375            mov y+1, #high(tone_ma3a % 0x10000) 
26D6 753600     375            mov y+2, #low (tone_ma3a / 0x10000) 
26D9 753700     375            mov y+3, #high(tone_ma3a / 0x10000) 
26DC 120188     375            lcall mul32
26DF            375            
26DF            375   ; Load lower ratio
26DF 753404     375            mov y+0, #low (tone_ma3b % 0x10000) 
26E2 753500     375            mov y+1, #high(tone_ma3b % 0x10000) 
26E5 753600     375            mov y+2, #low (tone_ma3b / 0x10000) 
26E8 753700     375            mov y+3, #high(tone_ma3b / 0x10000) 
26EB 120215     375            lcall div32
26EE            375   ; compute value for reload
26EE            375   ; reload rate = CLK/freq
26EE 753400     375            mov y+0, #low (CLK % 0x10000) 
26F1 753580     375            mov y+1, #high(CLK % 0x10000) 
26F4 753651     375            mov y+2, #low (CLK / 0x10000) 
26F7 753701     375            mov y+3, #high(CLK / 0x10000) 
26FA 12028B     375            lcall xchg_xy
26FD            375            
26FD 120215     375            lcall div32
2700            375            
2700            375   ; reload value = 65536-x
2700 753400     375            mov y+0, #low (65536 % 0x10000) 
2703 753500     375            mov y+1, #high(65536 % 0x10000) 
2706 753601     375            mov y+2, #low (65536 / 0x10000) 
2709 753700     375            mov y+3, #high(65536 / 0x10000) 
270C 12028B     375            lcall xchg_xy
270F 1200F4     375            lcall sub32
2712            375   ; x now contains the reload value
2712            375   ;debug_BCD
2712 8530F2     375            mov RL0, x+0
2715 8531F4     375            mov RH0, x+1
2718            375            
2718 D28C       375            setb TR0
271A            375            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
271A 7A02       375            mov R2, #2
271C 12038E     375            lcall Play_Note_Delay
271F C28C       375            clr TR0
2721 C002       375            push AR2
2723 7A0A       375            mov R2, #10
2725 1202AF     375            lcall ?Wait_Milli_Seconds
2728 D002       375            pop AR2
272A D002       375            pop AR2
272C            376            ; Compute the reload value given the base frequency and interval ratio codes
272C            376   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
272C            376   ;Calc_Interval:
272C            376   ; Freq0 loaded (fundamental frequency)
272C C002       376   push AR2
272E 753017     376            mov x+0, #low (key_C6 % 0x10000) 
2731 753104     376            mov x+1, #high(key_C6 % 0x10000) 
2734 753200     376            mov x+2, #low (key_C6 / 0x10000) 
2737 753300     376            mov x+3, #high(key_C6 / 0x10000)  
273A            376   ; Load upper ratio
273A 753401     376            mov y+0, #low (tone_p1a % 0x10000) 
273D 753500     376            mov y+1, #high(tone_p1a % 0x10000) 
2740 753600     376            mov y+2, #low (tone_p1a / 0x10000) 
2743 753700     376            mov y+3, #high(tone_p1a / 0x10000) 
2746 120188     376            lcall mul32
2749            376            
2749            376   ; Load lower ratio
2749 753401     376            mov y+0, #low (tone_p1b % 0x10000) 
274C 753500     376            mov y+1, #high(tone_p1b % 0x10000) 
274F 753600     376            mov y+2, #low (tone_p1b / 0x10000) 
2752 753700     376            mov y+3, #high(tone_p1b / 0x10000) 
2755 120215     376            lcall div32
2758            376   ; compute value for reload
2758            376   ; reload rate = CLK/freq
2758 753400     376            mov y+0, #low (CLK % 0x10000) 
275B 753580     376            mov y+1, #high(CLK % 0x10000) 
275E 753651     376            mov y+2, #low (CLK / 0x10000) 
2761 753701     376            mov y+3, #high(CLK / 0x10000) 
2764 12028B     376            lcall xchg_xy
2767            376            
2767 120215     376            lcall div32
276A            376            
276A            376   ; reload value = 65536-x
276A 753400     376            mov y+0, #low (65536 % 0x10000) 
276D 753500     376            mov y+1, #high(65536 % 0x10000) 
2770 753601     376            mov y+2, #low (65536 / 0x10000) 
2773 753700     376            mov y+3, #high(65536 / 0x10000) 
2776 12028B     376            lcall xchg_xy
2779 1200F4     376            lcall sub32
277C            376   ; x now contains the reload value
277C            376   ;debug_BCD
277C 8530F2     376            mov RL0, x+0
277F 8531F4     376            mov RH0, x+1
2782            376            
2782 D28C       376            setb TR0
2784            376            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
2784 7A02       376            mov R2, #2
2786 12038E     376            lcall Play_Note_Delay
2789 C28C       376            clr TR0
278B C002       376            push AR2
278D 7A0A       376            mov R2, #10
278F 1202AF     376            lcall ?Wait_Milli_Seconds
2792 D002       376            pop AR2
2794 D002       376            pop AR2
2796            377            ; Compute the reload value given the base frequency and interval ratio codes
2796            377   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
2796            377   ;Calc_Interval:
2796            377   ; Freq0 loaded (fundamental frequency)
2796 C002       377   push AR2
2798 753017     377            mov x+0, #low (key_C6 % 0x10000) 
279B 753104     377            mov x+1, #high(key_C6 % 0x10000) 
279E 753200     377            mov x+2, #low (key_C6 / 0x10000) 
27A1 753300     377            mov x+3, #high(key_C6 / 0x10000)  
27A4            377   ; Load upper ratio
27A4 753409     377            mov y+0, #low (tone_ma2a % 0x10000) 
27A7 753500     377            mov y+1, #high(tone_ma2a % 0x10000) 
27AA 753600     377            mov y+2, #low (tone_ma2a / 0x10000) 
27AD 753700     377            mov y+3, #high(tone_ma2a / 0x10000) 
27B0 120188     377            lcall mul32
27B3            377            
27B3            377   ; Load lower ratio
27B3 753408     377            mov y+0, #low (tone_ma2b % 0x10000) 
27B6 753500     377            mov y+1, #high(tone_ma2b % 0x10000) 
27B9 753600     377            mov y+2, #low (tone_ma2b / 0x10000) 
27BC 753700     377            mov y+3, #high(tone_ma2b / 0x10000) 
27BF 120215     377            lcall div32
27C2            377   ; compute value for reload
27C2            377   ; reload rate = CLK/freq
27C2 753400     377            mov y+0, #low (CLK % 0x10000) 
27C5 753580     377            mov y+1, #high(CLK % 0x10000) 
27C8 753651     377            mov y+2, #low (CLK / 0x10000) 
27CB 753701     377            mov y+3, #high(CLK / 0x10000) 
27CE 12028B     377            lcall xchg_xy
27D1            377            
27D1 120215     377            lcall div32
27D4            377            
27D4            377   ; reload value = 65536-x
27D4 753400     377            mov y+0, #low (65536 % 0x10000) 
27D7 753500     377            mov y+1, #high(65536 % 0x10000) 
27DA 753601     377            mov y+2, #low (65536 / 0x10000) 
27DD 753700     377            mov y+3, #high(65536 / 0x10000) 
27E0 12028B     377            lcall xchg_xy
27E3 1200F4     377            lcall sub32
27E6            377   ; x now contains the reload value
27E6            377   ;debug_BCD
27E6 8530F2     377            mov RL0, x+0
27E9 8531F4     377            mov RH0, x+1
27EC            377            
27EC D28C       377            setb TR0
27EE            377            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
27EE 7A02       377            mov R2, #2
27F0 12038E     377            lcall Play_Note_Delay
27F3 C28C       377            clr TR0
27F5 C002       377            push AR2
27F7 7A0A       377            mov R2, #10
27F9 1202AF     377            lcall ?Wait_Milli_Seconds
27FC D002       377            pop AR2
27FE D002       377            pop AR2
2800            378            ; Compute the reload value given the base frequency and interval ratio codes
2800            378   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
2800            378   ;Calc_Interval:
2800            378   ; Freq0 loaded (fundamental frequency)
2800 C002       378   push AR2
2802 753017     378            mov x+0, #low (key_C6 % 0x10000) 
2805 753104     378            mov x+1, #high(key_C6 % 0x10000) 
2808 753200     378            mov x+2, #low (key_C6 / 0x10000) 
280B 753300     378            mov x+3, #high(key_C6 / 0x10000)  
280E            378   ; Load upper ratio
280E 753405     378            mov y+0, #low (tone_ma3a % 0x10000) 
2811 753500     378            mov y+1, #high(tone_ma3a % 0x10000) 
2814 753600     378            mov y+2, #low (tone_ma3a / 0x10000) 
2817 753700     378            mov y+3, #high(tone_ma3a / 0x10000) 
281A 120188     378            lcall mul32
281D            378            
281D            378   ; Load lower ratio
281D 753404     378            mov y+0, #low (tone_ma3b % 0x10000) 
2820 753500     378            mov y+1, #high(tone_ma3b % 0x10000) 
2823 753600     378            mov y+2, #low (tone_ma3b / 0x10000) 
2826 753700     378            mov y+3, #high(tone_ma3b / 0x10000) 
2829 120215     378            lcall div32
282C            378   ; compute value for reload
282C            378   ; reload rate = CLK/freq
282C 753400     378            mov y+0, #low (CLK % 0x10000) 
282F 753580     378            mov y+1, #high(CLK % 0x10000) 
2832 753651     378            mov y+2, #low (CLK / 0x10000) 
2835 753701     378            mov y+3, #high(CLK / 0x10000) 
2838 12028B     378            lcall xchg_xy
283B            378            
283B 120215     378            lcall div32
283E            378            
283E            378   ; reload value = 65536-x
283E 753400     378            mov y+0, #low (65536 % 0x10000) 
2841 753500     378            mov y+1, #high(65536 % 0x10000) 
2844 753601     378            mov y+2, #low (65536 / 0x10000) 
2847 753700     378            mov y+3, #high(65536 / 0x10000) 
284A 12028B     378            lcall xchg_xy
284D 1200F4     378            lcall sub32
2850            378   ; x now contains the reload value
2850            378   ;debug_BCD
2850 8530F2     378            mov RL0, x+0
2853 8531F4     378            mov RH0, x+1
2856            378            
2856 D28C       378            setb TR0
2858            378            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
2858 7A04       378            mov R2, #4
285A 12038E     378            lcall Play_Note_Delay
285D C28C       378            clr TR0
285F C002       378            push AR2
2861 7A0A       378            mov R2, #10
2863 1202AF     378            lcall ?Wait_Milli_Seconds
2866 D002       378            pop AR2
2868 D002       378            pop AR2
286A            379            ; Compute the reload value given the base frequency and interval ratio codes
286A            379   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
286A            379   ;Calc_Interval:
286A            379   ; Freq0 loaded (fundamental frequency)
286A C002       379   push AR2
286C 753017     379            mov x+0, #low (key_C6 % 0x10000) 
286F 753104     379            mov x+1, #high(key_C6 % 0x10000) 
2872 753200     379            mov x+2, #low (key_C6 / 0x10000) 
2875 753300     379            mov x+3, #high(key_C6 / 0x10000)  
2878            379   ; Load upper ratio
2878 753401     379            mov y+0, #low (tone_p1a % 0x10000) 
287B 753500     379            mov y+1, #high(tone_p1a % 0x10000) 
287E 753600     379            mov y+2, #low (tone_p1a / 0x10000) 
2881 753700     379            mov y+3, #high(tone_p1a / 0x10000) 
2884 120188     379            lcall mul32
2887            379            
2887            379   ; Load lower ratio
2887 753401     379            mov y+0, #low (tone_p1b % 0x10000) 
288A 753500     379            mov y+1, #high(tone_p1b % 0x10000) 
288D 753600     379            mov y+2, #low (tone_p1b / 0x10000) 
2890 753700     379            mov y+3, #high(tone_p1b / 0x10000) 
2893 120215     379            lcall div32
2896            379   ; compute value for reload
2896            379   ; reload rate = CLK/freq
2896 753400     379            mov y+0, #low (CLK % 0x10000) 
2899 753580     379            mov y+1, #high(CLK % 0x10000) 
289C 753651     379            mov y+2, #low (CLK / 0x10000) 
289F 753701     379            mov y+3, #high(CLK / 0x10000) 
28A2 12028B     379            lcall xchg_xy
28A5            379            
28A5 120215     379            lcall div32
28A8            379            
28A8            379   ; reload value = 65536-x
28A8 753400     379            mov y+0, #low (65536 % 0x10000) 
28AB 753500     379            mov y+1, #high(65536 % 0x10000) 
28AE 753601     379            mov y+2, #low (65536 / 0x10000) 
28B1 753700     379            mov y+3, #high(65536 / 0x10000) 
28B4 12028B     379            lcall xchg_xy
28B7 1200F4     379            lcall sub32
28BA            379   ; x now contains the reload value
28BA            379   ;debug_BCD
28BA 8530F2     379            mov RL0, x+0
28BD 8531F4     379            mov RH0, x+1
28C0            379            
28C0 D28C       379            setb TR0
28C2            379            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
28C2 7A02       379            mov R2, #2
28C4 12038E     379            lcall Play_Note_Delay
28C7 C28C       379            clr TR0
28C9 C002       379            push AR2
28CB 7A0A       379            mov R2, #10
28CD 1202AF     379            lcall ?Wait_Milli_Seconds
28D0 D002       379            pop AR2
28D2 D002       379            pop AR2
28D4            380            ; Compute the reload value given the base frequency and interval ratio codes
28D4            380   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
28D4            380   ;Calc_Interval:
28D4            380   ; Freq0 loaded (fundamental frequency)
28D4 C002       380   push AR2
28D6 753017     380            mov x+0, #low (key_C6 % 0x10000) 
28D9 753104     380            mov x+1, #high(key_C6 % 0x10000) 
28DC 753200     380            mov x+2, #low (key_C6 / 0x10000) 
28DF 753300     380            mov x+3, #high(key_C6 / 0x10000)  
28E2            380   ; Load upper ratio
28E2 753409     380            mov y+0, #low (tone_ma2a % 0x10000) 
28E5 753500     380            mov y+1, #high(tone_ma2a % 0x10000) 
28E8 753600     380            mov y+2, #low (tone_ma2a / 0x10000) 
28EB 753700     380            mov y+3, #high(tone_ma2a / 0x10000) 
28EE 120188     380            lcall mul32
28F1            380            
28F1            380   ; Load lower ratio
28F1 753408     380            mov y+0, #low (tone_ma2b % 0x10000) 
28F4 753500     380            mov y+1, #high(tone_ma2b % 0x10000) 
28F7 753600     380            mov y+2, #low (tone_ma2b / 0x10000) 
28FA 753700     380            mov y+3, #high(tone_ma2b / 0x10000) 
28FD 120215     380            lcall div32
2900            380   ; compute value for reload
2900            380   ; reload rate = CLK/freq
2900 753400     380            mov y+0, #low (CLK % 0x10000) 
2903 753580     380            mov y+1, #high(CLK % 0x10000) 
2906 753651     380            mov y+2, #low (CLK / 0x10000) 
2909 753701     380            mov y+3, #high(CLK / 0x10000) 
290C 12028B     380            lcall xchg_xy
290F            380            
290F 120215     380            lcall div32
2912            380            
2912            380   ; reload value = 65536-x
2912 753400     380            mov y+0, #low (65536 % 0x10000) 
2915 753500     380            mov y+1, #high(65536 % 0x10000) 
2918 753601     380            mov y+2, #low (65536 / 0x10000) 
291B 753700     380            mov y+3, #high(65536 / 0x10000) 
291E 12028B     380            lcall xchg_xy
2921 1200F4     380            lcall sub32
2924            380   ; x now contains the reload value
2924            380   ;debug_BCD
2924 8530F2     380            mov RL0, x+0
2927 8531F4     380            mov RH0, x+1
292A            380            
292A D28C       380            setb TR0
292C            380            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
292C 7A02       380            mov R2, #2
292E 12038E     380            lcall Play_Note_Delay
2931 C28C       380            clr TR0
2933 C002       380            push AR2
2935 7A0A       380            mov R2, #10
2937 1202AF     380            lcall ?Wait_Milli_Seconds
293A D002       380            pop AR2
293C D002       380            pop AR2
293E            381            ; Compute the reload value given the base frequency and interval ratio codes
293E            381   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
293E            381   ;Calc_Interval:
293E            381   ; Freq0 loaded (fundamental frequency)
293E C002       381   push AR2
2940 753017     381            mov x+0, #low (key_C6 % 0x10000) 
2943 753104     381            mov x+1, #high(key_C6 % 0x10000) 
2946 753200     381            mov x+2, #low (key_C6 / 0x10000) 
2949 753300     381            mov x+3, #high(key_C6 / 0x10000)  
294C            381   ; Load upper ratio
294C 753401     381            mov y+0, #low (tone_p1a % 0x10000) 
294F 753500     381            mov y+1, #high(tone_p1a % 0x10000) 
2952 753600     381            mov y+2, #low (tone_p1a / 0x10000) 
2955 753700     381            mov y+3, #high(tone_p1a / 0x10000) 
2958 120188     381            lcall mul32
295B            381            
295B            381   ; Load lower ratio
295B 753401     381            mov y+0, #low (tone_p1b % 0x10000) 
295E 753500     381            mov y+1, #high(tone_p1b % 0x10000) 
2961 753600     381            mov y+2, #low (tone_p1b / 0x10000) 
2964 753700     381            mov y+3, #high(tone_p1b / 0x10000) 
2967 120215     381            lcall div32
296A            381   ; compute value for reload
296A            381   ; reload rate = CLK/freq
296A 753400     381            mov y+0, #low (CLK % 0x10000) 
296D 753580     381            mov y+1, #high(CLK % 0x10000) 
2970 753651     381            mov y+2, #low (CLK / 0x10000) 
2973 753701     381            mov y+3, #high(CLK / 0x10000) 
2976 12028B     381            lcall xchg_xy
2979            381            
2979 120215     381            lcall div32
297C            381            
297C            381   ; reload value = 65536-x
297C 753400     381            mov y+0, #low (65536 % 0x10000) 
297F 753500     381            mov y+1, #high(65536 % 0x10000) 
2982 753601     381            mov y+2, #low (65536 / 0x10000) 
2985 753700     381            mov y+3, #high(65536 / 0x10000) 
2988 12028B     381            lcall xchg_xy
298B 1200F4     381            lcall sub32
298E            381   ; x now contains the reload value
298E            381   ;debug_BCD
298E 8530F2     381            mov RL0, x+0
2991 8531F4     381            mov RH0, x+1
2994            381            
2994 D28C       381            setb TR0
2996            381            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
2996 7A02       381            mov R2, #2
2998 12038E     381            lcall Play_Note_Delay
299B C28C       381            clr TR0
299D C002       381            push AR2
299F 7A0A       381            mov R2, #10
29A1 1202AF     381            lcall ?Wait_Milli_Seconds
29A4 D002       381            pop AR2
29A6 D002       381            pop AR2
29A8            382   
29A8            383            ; Compute the reload value given the base frequency and interval ratio codes
29A8            383   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
29A8            383   ;Calc_Interval:
29A8            383   ; Freq0 loaded (fundamental frequency)
29A8 C002       383   push AR2
29AA 753017     383            mov x+0, #low (key_C6 % 0x10000) 
29AD 753104     383            mov x+1, #high(key_C6 % 0x10000) 
29B0 753200     383            mov x+2, #low (key_C6 / 0x10000) 
29B3 753300     383            mov x+3, #high(key_C6 / 0x10000)  
29B6            383   ; Load upper ratio
29B6 753405     383            mov y+0, #low (tone_ma3a % 0x10000) 
29B9 753500     383            mov y+1, #high(tone_ma3a % 0x10000) 
29BC 753600     383            mov y+2, #low (tone_ma3a / 0x10000) 
29BF 753700     383            mov y+3, #high(tone_ma3a / 0x10000) 
29C2 120188     383            lcall mul32
29C5            383            
29C5            383   ; Load lower ratio
29C5 753404     383            mov y+0, #low (tone_ma3b % 0x10000) 
29C8 753500     383            mov y+1, #high(tone_ma3b % 0x10000) 
29CB 753600     383            mov y+2, #low (tone_ma3b / 0x10000) 
29CE 753700     383            mov y+3, #high(tone_ma3b / 0x10000) 
29D1 120215     383            lcall div32
29D4            383   ; compute value for reload
29D4            383   ; reload rate = CLK/freq
29D4 753400     383            mov y+0, #low (CLK % 0x10000) 
29D7 753580     383            mov y+1, #high(CLK % 0x10000) 
29DA 753651     383            mov y+2, #low (CLK / 0x10000) 
29DD 753701     383            mov y+3, #high(CLK / 0x10000) 
29E0 12028B     383            lcall xchg_xy
29E3            383            
29E3 120215     383            lcall div32
29E6            383            
29E6            383   ; reload value = 65536-x
29E6 753400     383            mov y+0, #low (65536 % 0x10000) 
29E9 753500     383            mov y+1, #high(65536 % 0x10000) 
29EC 753601     383            mov y+2, #low (65536 / 0x10000) 
29EF 753700     383            mov y+3, #high(65536 / 0x10000) 
29F2 12028B     383            lcall xchg_xy
29F5 1200F4     383            lcall sub32
29F8            383   ; x now contains the reload value
29F8            383   ;debug_BCD
29F8 8530F2     383            mov RL0, x+0
29FB 8531F4     383            mov RH0, x+1
29FE            383            
29FE D28C       383            setb TR0
2A00            383            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
2A00 7A02       383            mov R2, #2
2A02 12038E     383            lcall Play_Note_Delay
2A05 C28C       383            clr TR0
2A07 C002       383            push AR2
2A09 7A0A       383            mov R2, #10
2A0B 1202AF     383            lcall ?Wait_Milli_Seconds
2A0E D002       383            pop AR2
2A10 D002       383            pop AR2
2A12            384            ; Compute the reload value given the base frequency and interval ratio codes
2A12            384   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
2A12            384   ;Calc_Interval:
2A12            384   ; Freq0 loaded (fundamental frequency)
2A12 C002       384   push AR2
2A14 753017     384            mov x+0, #low (key_C6 % 0x10000) 
2A17 753104     384            mov x+1, #high(key_C6 % 0x10000) 
2A1A 753200     384            mov x+2, #low (key_C6 / 0x10000) 
2A1D 753300     384            mov x+3, #high(key_C6 / 0x10000)  
2A20            384   ; Load upper ratio
2A20 753401     384            mov y+0, #low (tone_p1a % 0x10000) 
2A23 753500     384            mov y+1, #high(tone_p1a % 0x10000) 
2A26 753600     384            mov y+2, #low (tone_p1a / 0x10000) 
2A29 753700     384            mov y+3, #high(tone_p1a / 0x10000) 
2A2C 120188     384            lcall mul32
2A2F            384            
2A2F            384   ; Load lower ratio
2A2F 753401     384            mov y+0, #low (tone_p1b % 0x10000) 
2A32 753500     384            mov y+1, #high(tone_p1b % 0x10000) 
2A35 753600     384            mov y+2, #low (tone_p1b / 0x10000) 
2A38 753700     384            mov y+3, #high(tone_p1b / 0x10000) 
2A3B 120215     384            lcall div32
2A3E            384   ; compute value for reload
2A3E            384   ; reload rate = CLK/freq
2A3E 753400     384            mov y+0, #low (CLK % 0x10000) 
2A41 753580     384            mov y+1, #high(CLK % 0x10000) 
2A44 753651     384            mov y+2, #low (CLK / 0x10000) 
2A47 753701     384            mov y+3, #high(CLK / 0x10000) 
2A4A 12028B     384            lcall xchg_xy
2A4D            384            
2A4D 120215     384            lcall div32
2A50            384            
2A50            384   ; reload value = 65536-x
2A50 753400     384            mov y+0, #low (65536 % 0x10000) 
2A53 753500     384            mov y+1, #high(65536 % 0x10000) 
2A56 753601     384            mov y+2, #low (65536 / 0x10000) 
2A59 753700     384            mov y+3, #high(65536 / 0x10000) 
2A5C 12028B     384            lcall xchg_xy
2A5F 1200F4     384            lcall sub32
2A62            384   ; x now contains the reload value
2A62            384   ;debug_BCD
2A62 8530F2     384            mov RL0, x+0
2A65 8531F4     384            mov RH0, x+1
2A68            384            
2A68 D28C       384            setb TR0
2A6A            384            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
2A6A 7A02       384            mov R2, #2
2A6C 12038E     384            lcall Play_Note_Delay
2A6F C28C       384            clr TR0
2A71 C002       384            push AR2
2A73 7A0A       384            mov R2, #10
2A75 1202AF     384            lcall ?Wait_Milli_Seconds
2A78 D002       384            pop AR2
2A7A D002       384            pop AR2
2A7C            385            ; Compute the reload value given the base frequency and interval ratio codes
2A7C            385   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
2A7C            385   ;Calc_Interval:
2A7C            385   ; Freq0 loaded (fundamental frequency)
2A7C C002       385   push AR2
2A7E 753017     385            mov x+0, #low (key_C6 % 0x10000) 
2A81 753104     385            mov x+1, #high(key_C6 % 0x10000) 
2A84 753200     385            mov x+2, #low (key_C6 / 0x10000) 
2A87 753300     385            mov x+3, #high(key_C6 / 0x10000)  
2A8A            385   ; Load upper ratio
2A8A 753409     385            mov y+0, #low (tone_ma2a % 0x10000) 
2A8D 753500     385            mov y+1, #high(tone_ma2a % 0x10000) 
2A90 753600     385            mov y+2, #low (tone_ma2a / 0x10000) 
2A93 753700     385            mov y+3, #high(tone_ma2a / 0x10000) 
2A96 120188     385            lcall mul32
2A99            385            
2A99            385   ; Load lower ratio
2A99 753408     385            mov y+0, #low (tone_ma2b % 0x10000) 
2A9C 753500     385            mov y+1, #high(tone_ma2b % 0x10000) 
2A9F 753600     385            mov y+2, #low (tone_ma2b / 0x10000) 
2AA2 753700     385            mov y+3, #high(tone_ma2b / 0x10000) 
2AA5 120215     385            lcall div32
2AA8            385   ; compute value for reload
2AA8            385   ; reload rate = CLK/freq
2AA8 753400     385            mov y+0, #low (CLK % 0x10000) 
2AAB 753580     385            mov y+1, #high(CLK % 0x10000) 
2AAE 753651     385            mov y+2, #low (CLK / 0x10000) 
2AB1 753701     385            mov y+3, #high(CLK / 0x10000) 
2AB4 12028B     385            lcall xchg_xy
2AB7            385            
2AB7 120215     385            lcall div32
2ABA            385            
2ABA            385   ; reload value = 65536-x
2ABA 753400     385            mov y+0, #low (65536 % 0x10000) 
2ABD 753500     385            mov y+1, #high(65536 % 0x10000) 
2AC0 753601     385            mov y+2, #low (65536 / 0x10000) 
2AC3 753700     385            mov y+3, #high(65536 / 0x10000) 
2AC6 12028B     385            lcall xchg_xy
2AC9 1200F4     385            lcall sub32
2ACC            385   ; x now contains the reload value
2ACC            385   ;debug_BCD
2ACC 8530F2     385            mov RL0, x+0
2ACF 8531F4     385            mov RH0, x+1
2AD2            385            
2AD2 D28C       385            setb TR0
2AD4            385            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
2AD4 7A02       385            mov R2, #2
2AD6 12038E     385            lcall Play_Note_Delay
2AD9 C28C       385            clr TR0
2ADB C002       385            push AR2
2ADD 7A0A       385            mov R2, #10
2ADF 1202AF     385            lcall ?Wait_Milli_Seconds
2AE2 D002       385            pop AR2
2AE4 D002       385            pop AR2
2AE6            386            ; Compute the reload value given the base frequency and interval ratio codes
2AE6            386   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
2AE6            386   ;Calc_Interval:
2AE6            386   ; Freq0 loaded (fundamental frequency)
2AE6 C002       386   push AR2
2AE8 753017     386            mov x+0, #low (key_C6 % 0x10000) 
2AEB 753104     386            mov x+1, #high(key_C6 % 0x10000) 
2AEE 753200     386            mov x+2, #low (key_C6 / 0x10000) 
2AF1 753300     386            mov x+3, #high(key_C6 / 0x10000)  
2AF4            386   ; Load upper ratio
2AF4 753405     386            mov y+0, #low (tone_ma3a % 0x10000) 
2AF7 753500     386            mov y+1, #high(tone_ma3a % 0x10000) 
2AFA 753600     386            mov y+2, #low (tone_ma3a / 0x10000) 
2AFD 753700     386            mov y+3, #high(tone_ma3a / 0x10000) 
2B00 120188     386            lcall mul32
2B03            386            
2B03            386   ; Load lower ratio
2B03 753404     386            mov y+0, #low (tone_ma3b % 0x10000) 
2B06 753500     386            mov y+1, #high(tone_ma3b % 0x10000) 
2B09 753600     386            mov y+2, #low (tone_ma3b / 0x10000) 
2B0C 753700     386            mov y+3, #high(tone_ma3b / 0x10000) 
2B0F 120215     386            lcall div32
2B12            386   ; compute value for reload
2B12            386   ; reload rate = CLK/freq
2B12 753400     386            mov y+0, #low (CLK % 0x10000) 
2B15 753580     386            mov y+1, #high(CLK % 0x10000) 
2B18 753651     386            mov y+2, #low (CLK / 0x10000) 
2B1B 753701     386            mov y+3, #high(CLK / 0x10000) 
2B1E 12028B     386            lcall xchg_xy
2B21            386            
2B21 120215     386            lcall div32
2B24            386            
2B24            386   ; reload value = 65536-x
2B24 753400     386            mov y+0, #low (65536 % 0x10000) 
2B27 753500     386            mov y+1, #high(65536 % 0x10000) 
2B2A 753601     386            mov y+2, #low (65536 / 0x10000) 
2B2D 753700     386            mov y+3, #high(65536 / 0x10000) 
2B30 12028B     386            lcall xchg_xy
2B33 1200F4     386            lcall sub32
2B36            386   ; x now contains the reload value
2B36            386   ;debug_BCD
2B36 8530F2     386            mov RL0, x+0
2B39 8531F4     386            mov RH0, x+1
2B3C            386            
2B3C D28C       386            setb TR0
2B3E            386            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
2B3E 7A04       386            mov R2, #4
2B40 12038E     386            lcall Play_Note_Delay
2B43 C28C       386            clr TR0
2B45 C002       386            push AR2
2B47 7A0A       386            mov R2, #10
2B49 1202AF     386            lcall ?Wait_Milli_Seconds
2B4C D002       386            pop AR2
2B4E D002       386            pop AR2
2B50            387   
2B50            388            ; Compute the reload value given the base frequency and interval ratio codes
2B50            388   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
2B50            388   ;Calc_Interval:
2B50            388   ; Freq0 loaded (fundamental frequency)
2B50 C002       388   push AR2
2B52 753017     388            mov x+0, #low (key_C6 % 0x10000) 
2B55 753104     388            mov x+1, #high(key_C6 % 0x10000) 
2B58 753200     388            mov x+2, #low (key_C6 / 0x10000) 
2B5B 753300     388            mov x+3, #high(key_C6 / 0x10000)  
2B5E            388   ; Load upper ratio
2B5E 75340F     388            mov y+0, #low (tone_mi2b % 0x10000) 
2B61 753500     388            mov y+1, #high(tone_mi2b % 0x10000) 
2B64 753600     388            mov y+2, #low (tone_mi2b / 0x10000) 
2B67 753700     388            mov y+3, #high(tone_mi2b / 0x10000) 
2B6A 120188     388            lcall mul32
2B6D            388            
2B6D            388   ; Load lower ratio
2B6D 753410     388            mov y+0, #low (tone_mi2a % 0x10000) 
2B70 753500     388            mov y+1, #high(tone_mi2a % 0x10000) 
2B73 753600     388            mov y+2, #low (tone_mi2a / 0x10000) 
2B76 753700     388            mov y+3, #high(tone_mi2a / 0x10000) 
2B79 120215     388            lcall div32
2B7C            388   ; compute value for reload
2B7C            388   ; reload rate = CLK/freq
2B7C 753400     388            mov y+0, #low (CLK % 0x10000) 
2B7F 753580     388            mov y+1, #high(CLK % 0x10000) 
2B82 753651     388            mov y+2, #low (CLK / 0x10000) 
2B85 753701     388            mov y+3, #high(CLK / 0x10000) 
2B88 12028B     388            lcall xchg_xy
2B8B            388            
2B8B 120215     388            lcall div32
2B8E            388            
2B8E            388   ; reload value = 65536-x
2B8E 753400     388            mov y+0, #low (65536 % 0x10000) 
2B91 753500     388            mov y+1, #high(65536 % 0x10000) 
2B94 753601     388            mov y+2, #low (65536 / 0x10000) 
2B97 753700     388            mov y+3, #high(65536 / 0x10000) 
2B9A 12028B     388            lcall xchg_xy
2B9D 1200F4     388            lcall sub32
2BA0            388   ; x now contains the reload value
2BA0            388   ;debug_BCD
2BA0 8530F2     388            mov RL0, x+0
2BA3 8531F4     388            mov RH0, x+1
2BA6            388            
2BA6 D28C       388            setb TR0
2BA8            388            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
2BA8 7A02       388            mov R2, #2
2BAA 12038E     388            lcall Play_Note_Delay
2BAD C28C       388            clr TR0
2BAF C002       388            push AR2
2BB1 7A0A       388            mov R2, #10
2BB3 1202AF     388            lcall ?Wait_Milli_Seconds
2BB6 D002       388            pop AR2
2BB8 D002       388            pop AR2
2BBA            389            ; Compute the reload value given the base frequency and interval ratio codes
2BBA            389   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
2BBA            389   ;Calc_Interval:
2BBA            389   ; Freq0 loaded (fundamental frequency)
2BBA C002       389   push AR2
2BBC 753017     389            mov x+0, #low (key_C6 % 0x10000) 
2BBF 753104     389            mov x+1, #high(key_C6 % 0x10000) 
2BC2 753200     389            mov x+2, #low (key_C6 / 0x10000) 
2BC5 753300     389            mov x+3, #high(key_C6 / 0x10000)  
2BC8            389   ; Load upper ratio
2BC8 753409     389            mov y+0, #low (tone_ma2a % 0x10000) 
2BCB 753500     389            mov y+1, #high(tone_ma2a % 0x10000) 
2BCE 753600     389            mov y+2, #low (tone_ma2a / 0x10000) 
2BD1 753700     389            mov y+3, #high(tone_ma2a / 0x10000) 
2BD4 120188     389            lcall mul32
2BD7            389            
2BD7            389   ; Load lower ratio
2BD7 753408     389            mov y+0, #low (tone_ma2b % 0x10000) 
2BDA 753500     389            mov y+1, #high(tone_ma2b % 0x10000) 
2BDD 753600     389            mov y+2, #low (tone_ma2b / 0x10000) 
2BE0 753700     389            mov y+3, #high(tone_ma2b / 0x10000) 
2BE3 120215     389            lcall div32
2BE6            389   ; compute value for reload
2BE6            389   ; reload rate = CLK/freq
2BE6 753400     389            mov y+0, #low (CLK % 0x10000) 
2BE9 753580     389            mov y+1, #high(CLK % 0x10000) 
2BEC 753651     389            mov y+2, #low (CLK / 0x10000) 
2BEF 753701     389            mov y+3, #high(CLK / 0x10000) 
2BF2 12028B     389            lcall xchg_xy
2BF5            389            
2BF5 120215     389            lcall div32
2BF8            389            
2BF8            389   ; reload value = 65536-x
2BF8 753400     389            mov y+0, #low (65536 % 0x10000) 
2BFB 753500     389            mov y+1, #high(65536 % 0x10000) 
2BFE 753601     389            mov y+2, #low (65536 / 0x10000) 
2C01 753700     389            mov y+3, #high(65536 / 0x10000) 
2C04 12028B     389            lcall xchg_xy
2C07 1200F4     389            lcall sub32
2C0A            389   ; x now contains the reload value
2C0A            389   ;debug_BCD
2C0A 8530F2     389            mov RL0, x+0
2C0D 8531F4     389            mov RH0, x+1
2C10            389            
2C10 D28C       389            setb TR0
2C12            389            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
2C12 7A04       389            mov R2, #4
2C14 12038E     389            lcall Play_Note_Delay
2C17 C28C       389            clr TR0
2C19 C002       389            push AR2
2C1B 7A0A       389            mov R2, #10
2C1D 1202AF     389            lcall ?Wait_Milli_Seconds
2C20 D002       389            pop AR2
2C22 D002       389            pop AR2
2C24            390            ; Compute the reload value given the base frequency and interval ratio codes
2C24            390   ; Calc_Interval([fundamental frequency], [Numerator], [Denominator])
2C24            390   ;Calc_Interval:
2C24            390   ; Freq0 loaded (fundamental frequency)
2C24 C002       390   push AR2
2C26 753017     390            mov x+0, #low (key_C6 % 0x10000) 
2C29 753104     390            mov x+1, #high(key_C6 % 0x10000) 
2C2C 753200     390            mov x+2, #low (key_C6 / 0x10000) 
2C2F 753300     390            mov x+3, #high(key_C6 / 0x10000)  
2C32            390   ; Load upper ratio
2C32 753401     390            mov y+0, #low (tone_p1a % 0x10000) 
2C35 753500     390            mov y+1, #high(tone_p1a % 0x10000) 
2C38 753600     390            mov y+2, #low (tone_p1a / 0x10000) 
2C3B 753700     390            mov y+3, #high(tone_p1a / 0x10000) 
2C3E 120188     390            lcall mul32
2C41            390            
2C41            390   ; Load lower ratio
2C41 753401     390            mov y+0, #low (tone_p1b % 0x10000) 
2C44 753500     390            mov y+1, #high(tone_p1b % 0x10000) 
2C47 753600     390            mov y+2, #low (tone_p1b / 0x10000) 
2C4A 753700     390            mov y+3, #high(tone_p1b / 0x10000) 
2C4D 120215     390            lcall div32
2C50            390   ; compute value for reload
2C50            390   ; reload rate = CLK/freq
2C50 753400     390            mov y+0, #low (CLK % 0x10000) 
2C53 753580     390            mov y+1, #high(CLK % 0x10000) 
2C56 753651     390            mov y+2, #low (CLK / 0x10000) 
2C59 753701     390            mov y+3, #high(CLK / 0x10000) 
2C5C 12028B     390            lcall xchg_xy
2C5F            390            
2C5F 120215     390            lcall div32
2C62            390            
2C62            390   ; reload value = 65536-x
2C62 753400     390            mov y+0, #low (65536 % 0x10000) 
2C65 753500     390            mov y+1, #high(65536 % 0x10000) 
2C68 753601     390            mov y+2, #low (65536 / 0x10000) 
2C6B 753700     390            mov y+3, #high(65536 / 0x10000) 
2C6E 12028B     390            lcall xchg_xy
2C71 1200F4     390            lcall sub32
2C74            390   ; x now contains the reload value
2C74            390   ;debug_BCD
2C74 8530F2     390            mov RL0, x+0
2C77 8531F4     390            mov RH0, x+1
2C7A            390            
2C7A D28C       390            setb TR0
2C7C            390            ; Note delay runs 50 ms according to the value held in register 2 (parameter 4)
2C7C 7A0C       390            mov R2, #12
2C7E 12038E     390            lcall Play_Note_Delay
2C81 C28C       390            clr TR0
2C83 C002       390            push AR2
2C85 7A0A       390            mov R2, #10
2C87 1202AF     390            lcall ?Wait_Milli_Seconds
2C8A D002       390            pop AR2
2C8C D002       390            pop AR2
2C8E C002       391   push AR2
2C90 7A04       391   mov R2, #4
2C92 12038E     391   lcall Play_Note_Delay
2C95 D002       391   pop AR2
2C97            392   
2C97            393   
2C97            394   
2C97 0203E8     395       ljmp forever ; Repeat! 
2C9A            396   
2C9A            397   end
